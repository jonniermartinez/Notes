%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2003.i109.027.P.m004.c33.online digital virtual exhibition presentation isometric-09.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 12/21/2020
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 9 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Online presentation set with remote work symbols isometric isolated vector illustration</rdf:li>
               <rdf:li xml:lang="x-repair">Online presentation set with remote work symbols isometric isolated vector illustration</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:headline>
            <rdf:Alt>
               <rdf:li>Online presentation set with remote work symbols isometric isolated vector illustration</rdf:li>
            </rdf:Alt>
         </dc:headline>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Online presentation set with remote work symbols isometric isolated vector illustration</rdf:li>
               <rdf:li xml:lang="x-repair">Online presentation set with remote work symbols isometric isolated vector illustration</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>icon</rdf:li>
               <rdf:li>clipart</rdf:li>
               <rdf:li>clip-art</rdf:li>
               <rdf:li>decorative</rdf:li>
               <rdf:li>object</rdf:li>
               <rdf:li>symbol</rdf:li>
               <rdf:li>elements</rdf:li>
               <rdf:li>emblem</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>composition</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>stay</rdf:li>
               <rdf:li>home</rdf:li>
               <rdf:li>work</rdf:li>
               <rdf:li>play</rdf:li>
               <rdf:li>online</rdf:li>
               <rdf:li>games</rdf:li>
               <rdf:li>presentation</rdf:li>
               <rdf:li>TV</rdf:li>
               <rdf:li>information</rdf:li>
               <rdf:li>virus</rdf:li>
               <rdf:li>danger</rdf:li>
               <rdf:li>lifestyle</rdf:li>
               <rdf:li>precaution</rdf:li>
               <rdf:li>distance</rdf:li>
               <rdf:li>social</rdf:li>
               <rdf:li>infection</rdf:li>
               <rdf:li>safety</rdf:li>
               <rdf:li>epidemic</rdf:li>
               <rdf:li>coronavirus</rdf:li>
               <rdf:li>quarantine</rdf:li>
               <rdf:li>stop</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>report</rdf:li>
               <rdf:li>vr</rdf:li>
               <rdf:li>exhibition</rdf:li>
               <rdf:li>video</rdf:li>
               <rdf:li>conference</rdf:li>
               <rdf:li>remote</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>Internet</rdf:li>
               <rdf:li>automation</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>microphone</rdf:li>
               <rdf:li>isometric</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
145.721 226.478 mo
134.36 219.919 li
146.916 212.67 li
158.275 219.228 li
145.721 226.478 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.698039 .698039 .698039 rgb
f
135.161 203.667 mo
136.031 203.164 li
136.031 202.454 li
135.161 201.95 li
133.926 201.95 li
133.053 202.454 li
133.053 203.164 li
133.926 203.667 li
135.161 203.667 li
cp
.490196 .411765 .392157 rgb
f
133.926 203.667 mo
133.053 203.164 li
133.053 212.114 li
133.926 212.617 li
133.998 203.766 li
133.926 203.667 li
cp
.384314 .321569 .294118 rgb
f
135.161 203.667 mo
133.926 203.667 li
133.926 212.617 li
135.161 212.617 li
135.261 203.741 li
135.161 203.667 li
cp
.305882 .25098 .231373 rgb
f
136.031 203.164 mo
135.161 203.667 li
135.161 212.617 li
136.031 212.114 li
136.031 203.164 li
cp
.227451 .188235 .172549 rgb
f
135.63 146.208 mo
137.159 145.323 li
137.159 144.075 li
135.63 143.188 li
133.463 143.188 li
131.929 144.075 li
131.929 145.323 li
133.463 146.208 li
135.63 146.208 li
cp
.317647 .266667 .243137 rgb
f
133.463 146.208 mo
131.929 145.323 li
131.929 204.055 li
133.463 204.94 li
133.589 146.377 li
133.463 146.208 li
cp
.188235 .152941 .141176 rgb
f
135.63 146.208 mo
133.463 146.208 li
133.463 204.94 li
135.63 204.94 li
135.807 146.34 li
135.63 146.208 li
cp
.129412 .101961 .101961 rgb
f
137.159 145.323 mo
135.63 146.208 li
135.63 204.94 li
137.159 204.055 li
137.159 145.323 li
cp
.0392157 .0313726 .0313726 rgb
f
136.856 214.011 mo
136.856 215.781 li
137.94 216.408 li
139.474 215.524 li
140.556 213.648 li
140.554 211.875 li
139.471 211.255 li
137.937 212.139 li
136.856 214.011 li
cp
.933333 .913725 .890196 rgb
f
136.856 214.011 mo
136.856 215.781 li
133.756 213.997 li
133.756 212.221 li
136.774 213.818 li
136.856 214.011 li
cp
.0392157 .0313726 .0313726 rgb
f
137.937 212.139 mo
136.856 214.011 li
133.756 212.221 li
134.84 210.351 li
137.919 211.921 li
137.937 212.139 li
cp
.188235 .152941 .141176 rgb
f
139.471 211.255 mo
137.937 212.139 li
134.84 210.351 li
136.371 209.466 li
139.471 211.255 li
cp
.317647 .266667 .243137 rgb
f
132.785 126.935 mo
130.556 128.223 li
130.556 131.861 li
132.785 135.724 li
135.936 137.544 li
138.165 136.259 li
138.165 132.617 li
135.936 128.758 li
132.785 126.935 li
cp
.533333 .776471 .772549 rgb
f
138.13 122.447 mo
130.589 118.095 li
125.083 118.911 li
124.878 119.806 li
125.355 120.963 li
126.23 121.707 li
131.216 120.97 li
137.502 124.599 li
142.488 131.091 li
143.365 131.362 li
143.842 130.754 li
143.638 129.62 li
138.13 122.447 li
cp
f
139.61 115.822 mo
129.111 109.759 li
120.583 111.02 li
120.378 111.913 li
120.854 113.075 li
121.731 113.818 li
129.738 112.634 li
138.983 117.973 li
146.987 128.397 li
147.867 128.668 li
148.342 128.059 li
148.137 126.926 li
139.61 115.822 li
cp
f
150.973 122.572 mo
140.67 109.155 li
128.049 101.867 li
117.745 103.391 li
117.542 104.286 li
118.018 105.445 li
118.895 106.187 li
128.676 104.746 li
140.042 111.307 li
149.823 124.045 li
150.703 124.313 li
151.177 123.705 li
150.973 122.572 li
cp
f
134.855 217.575 mo
152.407 227.71 li
152.79 224.346 li
134.855 214.433 li
134.855 217.575 li
cp
.129412 .101961 .101961 rgb
f
134.855 214.433 mo
152.407 224.572 li
155.47 221.01 li
136.781 211.107 li
134.855 214.433 li
cp
.188235 .152941 .141176 rgb
f
154.333 221.242 mo
156.362 220.958 li
163.714 215.826 li
146.162 205.688 li
136.781 211.107 li
154.333 221.242 li
cp
.317647 .266667 .243137 rgb
f
139.438 210.85 mo
154.803 219.718 li
157.438 218.199 li
142.071 209.327 li
139.438 210.85 li
cp
.490196 .411765 .392157 rgb
f
144.026 208.205 mo
148.353 210.704 li
150.325 209.567 li
145.998 207.067 li
144.026 208.205 li
cp
f
146.438 208.772 mo
146.929 208.486 li
146.929 208.086 li
146.438 207.798 li
145.736 207.798 li
145.244 208.086 li
145.244 208.486 li
145.736 208.772 li
146.438 208.772 li
cp
.129412 .101961 .101961 rgb
f
148.575 210.017 mo
149.071 209.734 li
149.071 209.327 li
148.575 209.043 li
147.879 209.043 li
147.384 209.327 li
147.384 209.734 li
147.879 210.017 li
148.575 210.017 li
cp
.788235 .835294 .45098 rgb
f
163.714 215.826 mo
165.637 216.932 li
165.637 220.072 li
163.714 223.401 li
154.333 228.817 li
152.407 227.71 li
152.407 224.572 li
154.333 221.242 li
163.714 215.826 li
cp
.0392157 .0313726 .0313726 rgb
f
153.563 226.489 mo
154.664 227.125 li
154.913 224.93 li
153.563 224.44 li
153.563 226.489 li
cp
.0823529 .243137 .337255 rgb
f
153.563 224.44 mo
154.664 225.074 li
156.665 222.748 li
154.821 222.263 li
153.563 224.44 li
cp
.145098 .341176 .447059 rgb
f
155.919 222.9 mo
157.246 222.715 li
164.288 218.063 li
163.192 217.429 li
154.821 222.263 li
155.919 222.9 li
cp
.25098 .545098 .698039 rgb
f
164.288 218.063 mo
165.548 218.791 li
165.548 220.843 li
164.291 223.016 li
155.919 227.85 li
154.664 227.125 li
154.664 225.074 li
155.919 222.9 li
164.288 218.063 li
cp
.152941 .360784 .466667 rgb
f
157.169 225.658 mo
163.55 229.341 li
169.421 223.939 li
157.169 223.647 li
157.169 225.658 li
.615686 .588235 .560784 rgb
f
163.55 227.331 mo
169.421 223.939 li
163.043 220.255 li
157.169 223.647 li
163.55 227.331 li
.878431 .858824 .843137 rgb
f
165.184 223.297 mo
166.122 222.758 li
164.512 221.828 li
163.577 222.373 li
165.184 223.297 li
cp
.317647 .266667 .243137 rgb
f
161.527 225.412 mo
162.463 224.873 li
160.85 223.939 li
159.915 224.481 li
161.527 225.412 li
cp
f
164.024 228.629 mo
168.99 225.759 li
169.421 225.056 li
169.421 223.939 li
168.458 224.498 li
164.913 227.331 li
163.55 228.448 li
164.024 228.629 li
.188235 .152941 .141176 rgb
f
163.55 229.341 mo
169.421 225.954 li
169.421 225.056 li
163.55 228.448 li
163.55 229.341 li
.933333 .913725 .890196 rgb
f
163.55 227.331 mo
168.461 224.503 li
169.421 225.056 li
163.55 228.448 li
163.55 227.331 li
.796078 .796078 .796078 rgb
f
388.674 301.263 mo
388.674 163.505 li
193.422 50.9903 li
193.223 192.276 li
388.674 301.263 li
.407843 .686275 .745098 rgb
f
257.092 407.318 mo
52.9248 289.445 li
56.0682 287.63 li
56.0682 289.741 li
256.966 405.727 li
256.966 394.199 li
305.994 365.902 li
250.615 333.922 li
305.994 365.902 li
381.757 322.126 li
393.214 328.742 li
257.092 407.318 li
.698039 .698039 .698039 rgb
f
56.0682 289.741 mo
256.966 405.727 li
256.966 394.199 li
106.128 292.099 li
56.0682 278.233 li
56.0682 289.741 li
.823529 .796078 .756863 rgb
f
390.877 328.379 mo
256.966 405.727 li
256.966 394.199 li
282.412 365.902 li
390.877 316.857 li
390.877 328.379 li
cp
.615686 .588235 .560784 rgb
f
390.877 316.857 mo
190 200.905 li
105.142 249.913 li
305.994 365.902 li
390.877 316.857 li
.686275 .662745 .631373 rgb
f
256.966 394.199 mo
56.0682 278.233 li
105.142 249.913 li
305.994 365.902 li
256.966 394.199 li
.878431 .858824 .843137 rgb
f
198.595 350.53 mo
131.676 311.905 li
167.175 291.415 li
234.092 330.065 li
198.595 350.53 li
.615686 .588235 .560784 rgb
f
245.365 320.441 mo
235.198 314.58 li
245.365 308.722 li
255.546 314.58 li
245.365 320.441 li
.227451 .188235 .172549 rgb
f
256.655 326.983 mo
246.504 321.102 li
256.655 315.241 li
266.84 321.102 li
256.655 326.983 li
f
234.092 313.969 mo
178.06 281.618 li
188.24 275.747 li
244.242 308.073 li
234.092 313.969 li
f
267.95 333.519 mo
257.768 327.649 li
267.95 321.768 li
278.121 327.649 li
267.95 333.519 li
f
299.267 351.586 mo
268.91 334.051 li
279.062 328.189 li
309.444 345.723 li
299.267 351.586 li
cp
f
154.485 268.003 mo
144.312 262.152 li
154.485 256.249 li
164.656 262.152 li
154.485 268.003 li
cp
f
165.759 274.51 mo
155.584 268.634 li
165.759 262.755 li
175.942 268.634 li
165.759 274.51 li
cp
f
143.187 261.481 mo
130.06 253.903 li
140.212 248.035 li
153.369 255.591 li
143.187 261.481 li
cp
f
177.076 281.032 mo
166.9 275.164 li
177.076 269.29 li
187.23 275.164 li
177.076 281.032 li
f
257.166 313.678 mo
246.991 307.799 li
257.166 301.93 li
267.347 307.799 li
257.166 313.678 li
f
268.45 320.174 mo
258.271 314.306 li
268.45 308.438 li
278.609 314.306 li
268.45 320.174 li
cp
f
279.737 326.687 mo
269.559 320.847 li
279.737 314.961 li
289.92 320.847 li
279.737 326.687 li
cp
f
311.049 344.788 mo
280.696 327.234 li
290.851 321.398 li
321.234 338.926 li
311.049 344.788 li
cp
f
223.134 294.018 mo
212.946 288.162 li
223.134 282.267 li
233.304 288.162 li
223.134 294.018 li
f
234.564 300.657 mo
224.411 294.749 li
234.564 288.881 li
244.766 294.749 li
234.564 300.657 li
f
245.88 307.152 mo
235.683 301.263 li
245.88 295.417 li
256.028 301.263 li
245.88 307.152 li
f
177.555 267.71 mo
167.399 261.849 li
177.555 255.963 li
187.733 261.849 li
177.555 267.71 li
cp
f
188.864 274.221 mo
178.686 268.353 li
188.864 262.48 li
199.019 268.353 li
188.864 274.221 li
cp
f
200.147 280.754 mo
189.968 274.893 li
200.147 268.993 li
210.334 274.893 li
200.147 280.754 li
f
211.469 287.29 mo
201.281 281.394 li
211.469 275.522 li
221.614 281.394 li
211.469 287.29 li
f
262.66 303.875 mo
252.479 297.989 li
262.66 292.099 li
272.843 297.989 li
262.66 303.875 li
f
273.943 310.389 mo
263.773 304.514 li
273.943 298.638 li
284.096 304.514 li
273.943 310.389 li
f
285.24 316.906 mo
275.087 311.056 li
285.24 305.183 li
295.406 311.056 li
285.24 316.906 li
cp
f
296.613 323.473 mo
286.443 317.63 li
296.613 311.733 li
306.797 317.63 li
296.613 323.473 li
cp
f
322.261 338.295 mo
297.901 324.209 li
308.086 318.348 li
332.478 332.421 li
322.261 338.295 li
cp
f
228.619 284.218 mo
218.468 278.368 li
228.619 272.497 li
238.809 278.368 li
228.619 284.218 li
f
240.06 290.815 mo
229.884 284.968 li
240.06 279.093 li
250.238 284.968 li
240.06 290.815 li
f
251.347 297.346 mo
241.192 291.488 li
251.347 285.638 li
261.549 291.488 li
251.347 297.346 li
f
183.042 257.932 mo
172.889 252.043 li
183.042 246.151 li
193.223 252.043 li
183.042 257.932 li
cp
f
194.352 264.427 mo
184.176 258.553 li
194.352 252.702 li
204.513 258.553 li
194.352 264.427 li
cp
f
205.643 270.981 mo
195.466 265.077 li
205.643 259.192 li
215.793 265.077 li
205.643 270.981 li
cp
f
216.955 277.485 mo
206.777 271.608 li
216.955 265.748 li
227.136 271.608 li
216.955 277.485 li
f
271.106 295.638 mo
260.937 289.788 li
271.106 283.876 li
281.284 289.788 li
271.106 295.638 li
f
282.412 302.151 mo
272.206 296.275 li
282.412 290.404 li
292.567 296.275 li
282.412 302.151 li
f
293.695 308.683 mo
283.52 302.815 li
293.695 296.926 li
303.876 302.815 li
293.695 308.683 li
f
305.089 315.241 mo
294.904 309.398 li
305.089 303.485 li
315.259 309.398 li
305.089 315.241 li
cp
f
316.469 321.821 mo
306.299 315.947 li
316.469 310.092 li
326.653 315.947 li
316.469 321.821 li
cp
f
333.637 331.75 mo
317.788 322.561 li
327.965 316.723 li
343.807 325.849 li
333.637 331.75 li
cp
f
237.092 275.993 mo
226.904 270.108 li
237.092 264.267 li
247.26 270.108 li
237.092 275.993 li
f
248.525 282.613 mo
238.366 276.714 li
248.525 270.852 li
258.703 276.714 li
248.525 282.613 li
f
259.819 289.124 mo
249.663 283.249 li
259.819 277.38 li
269.991 283.249 li
259.819 289.124 li
f
191.503 249.67 mo
181.325 243.809 li
191.503 237.937 li
201.666 243.809 li
191.503 249.67 li
cp
f
180.28 243.193 mo
164.455 234.07 li
174.634 228.188 li
190.457 237.305 li
180.28 243.193 li
cp
f
171.757 251.407 mo
153.113 240.616 li
163.261 234.74 li
181.935 245.529 li
171.757 251.407 li
cp
f
166.264 261.196 mo
141.879 247.102 li
152.024 241.241 li
176.445 255.302 li
166.264 261.196 li
cp
f
202.797 256.215 mo
192.616 250.312 li
202.797 244.461 li
212.946 250.312 li
202.797 256.215 li
cp
f
214.084 262.714 mo
203.924 256.854 li
214.084 250.968 li
224.262 256.854 li
214.084 262.714 li
cp
f
225.42 269.271 mo
215.242 263.39 li
225.42 257.504 li
235.563 263.39 li
225.42 269.271 li
f
276.896 285.831 mo
266.738 279.97 li
276.896 274.11 li
287.08 279.97 li
276.896 285.831 li
f
288.205 292.363 mo
278.02 286.482 li
288.205 280.606 li
298.353 286.482 li
288.205 292.363 li
f
299.496 298.88 mo
289.314 292.987 li
299.496 287.104 li
309.672 292.987 li
299.496 298.88 li
f
310.853 305.466 mo
300.7 299.593 li
310.853 293.718 li
321.035 299.593 li
310.853 305.466 li
cp
f
322.246 312.03 mo
312.069 306.151 li
322.246 300.267 li
332.424 306.151 li
322.246 312.03 li
cp
f
345.013 325.189 mo
323.478 312.711 li
333.637 306.849 li
355.191 319.278 li
345.013 325.189 li
cp
f
351.744 317.255 mo
355.191 317.255 li
355.191 319.278 li
351.744 319.278 li
351.744 317.255 li
cp
f
359.702 312.66 mo
363.136 312.66 li
363.136 314.722 li
359.702 314.722 li
359.702 312.66 li
cp
f
348.316 306.07 mo
351.744 306.07 li
351.744 308.138 li
348.316 308.138 li
348.316 306.07 li
cp
f
340.383 323.829 mo
343.807 323.829 li
343.807 325.849 li
340.383 325.849 li
340.383 323.829 li
cp
f
329.021 330.365 mo
332.478 330.365 li
332.478 332.421 li
329.021 332.421 li
329.021 330.365 li
cp
f
317.809 336.858 mo
321.234 336.858 li
321.234 338.926 li
317.809 338.926 li
317.809 336.858 li
cp
f
306.019 343.678 mo
309.444 343.678 li
309.444 345.723 li
306.019 345.723 li
306.019 343.678 li
cp
f
268.91 331.985 mo
272.333 331.985 li
272.333 334.051 li
268.91 334.051 li
268.91 331.985 li
cp
f
257.768 327.649 mo
261.228 327.649 li
261.228 325.578 li
257.768 325.578 li
257.768 327.649 li
f
274.674 325.578 mo
274.674 327.649 li
278.121 327.649 li
278.121 325.578 li
274.674 325.578 li
cp
f
269.559 320.847 mo
273.019 320.847 li
273.019 318.757 li
269.559 318.757 li
269.559 320.847 li
cp
f
286.482 318.757 mo
286.482 320.847 li
289.92 320.847 li
289.92 318.757 li
286.482 318.757 li
cp
f
286.443 317.63 mo
289.892 317.63 li
289.892 315.56 li
286.443 315.56 li
286.443 317.63 li
cp
f
303.369 315.56 mo
303.369 317.63 li
306.797 317.63 li
306.797 315.56 li
303.369 315.56 li
cp
f
306.299 315.947 mo
309.725 315.947 li
309.725 313.889 li
306.299 313.889 li
306.299 315.947 li
cp
f
323.203 313.889 mo
323.203 315.947 li
326.653 315.947 li
326.653 313.889 li
323.203 313.889 li
cp
f
312.069 306.151 mo
315.515 306.151 li
315.515 304.099 li
312.069 304.099 li
312.069 306.151 li
cp
f
329 304.099 mo
329 306.151 li
332.424 306.151 li
332.424 304.099 li
329 304.099 li
cp
f
294.904 309.398 mo
298.331 309.398 li
298.331 307.328 li
294.904 307.328 li
294.904 309.398 li
cp
f
311.813 307.328 mo
311.813 309.398 li
315.259 309.398 li
315.259 307.328 li
311.813 307.328 li
cp
f
275.087 311.056 mo
278.502 311.056 li
278.502 308.976 li
275.087 308.976 li
275.087 311.056 li
cp
f
291.958 308.976 mo
291.958 311.056 li
295.406 311.056 li
295.406 308.976 li
291.958 308.976 li
cp
f
258.271 314.306 mo
261.728 314.306 li
261.728 312.276 li
258.271 312.276 li
258.271 314.306 li
cp
f
275.174 312.276 mo
275.174 314.306 li
278.609 314.306 li
278.609 312.276 li
275.174 312.276 li
cp
f
246.504 321.102 mo
249.934 321.102 li
249.934 319.079 li
246.504 319.079 li
246.504 321.102 li
f
263.386 319.079 mo
263.386 321.102 li
266.84 321.102 li
266.84 319.079 li
263.386 319.079 li
cp
f
235.198 314.58 mo
238.643 314.58 li
238.643 312.529 li
235.198 312.529 li
235.198 314.58 li
f
252.101 312.529 mo
252.101 314.58 li
255.546 314.58 li
255.546 312.529 li
252.101 312.529 li
cp
f
246.991 307.799 mo
250.416 307.799 li
250.416 305.737 li
246.991 305.737 li
246.991 307.799 li
f
263.893 305.737 mo
263.893 307.799 li
267.347 307.799 li
267.347 305.737 li
263.893 305.737 li
f
252.479 297.989 mo
255.907 297.989 li
255.907 295.937 li
252.479 295.937 li
252.479 297.989 li
f
269.388 295.937 mo
269.388 297.989 li
272.843 297.989 li
272.843 295.937 li
269.388 295.937 li
f
260.937 289.788 mo
264.369 289.788 li
264.369 287.708 li
260.937 287.708 li
260.937 289.788 li
f
277.819 287.708 mo
277.819 289.788 li
281.284 289.788 li
281.284 287.708 li
277.819 287.708 li
f
289.314 292.987 mo
292.768 292.987 li
292.768 290.941 li
289.314 290.941 li
289.314 292.987 li
cp
f
306.215 290.941 mo
306.215 292.987 li
309.672 292.987 li
309.672 290.941 li
306.215 290.941 li
cp
f
278.02 286.482 mo
281.459 286.482 li
281.459 284.426 li
278.02 284.426 li
278.02 286.482 li
f
294.928 284.426 mo
294.928 286.482 li
298.353 286.482 li
298.353 284.426 li
294.928 284.426 li
cp
f
241.192 291.488 mo
244.62 291.488 li
244.62 289.399 li
241.192 289.399 li
241.192 291.488 li
f
258.089 289.399 mo
258.089 291.488 li
261.549 291.488 li
261.549 289.399 li
258.089 289.399 li
f
224.411 294.749 mo
227.817 294.749 li
227.817 292.696 li
224.411 292.696 li
224.411 294.749 li
cp
f
241.309 292.696 mo
241.309 294.749 li
244.766 294.749 li
244.766 292.696 li
241.309 292.696 li
f
212.946 288.162 mo
216.4 288.162 li
216.4 286.077 li
212.946 286.077 li
212.946 288.162 li
f
229.884 286.077 mo
229.884 288.162 li
233.304 288.162 li
233.304 286.077 li
229.884 286.077 li
cp
f
201.281 281.394 mo
204.744 281.394 li
204.744 279.357 li
201.281 279.357 li
201.281 281.394 li
f
218.187 279.357 mo
218.187 281.394 li
221.614 281.394 li
221.614 279.357 li
218.187 279.357 li
f
189.968 274.893 mo
193.422 274.893 li
193.422 272.815 li
189.968 272.815 li
189.968 274.893 li
cp
f
206.871 272.815 mo
206.871 274.893 li
210.334 274.893 li
210.334 272.815 li
206.871 272.815 li
f
178.686 268.353 mo
182.114 268.353 li
182.114 266.3 li
178.686 266.3 li
178.686 268.353 li
cp
f
195.592 266.3 mo
195.592 268.353 li
199.019 268.353 li
199.019 266.3 li
195.592 266.3 li
cp
f
167.399 261.849 mo
170.823 261.849 li
170.823 259.789 li
167.399 259.789 li
167.399 261.849 li
cp
f
184.303 259.789 mo
184.303 261.849 li
187.733 261.849 li
187.733 259.789 li
184.303 259.789 li
cp
f
172.889 252.043 mo
176.317 252.043 li
176.317 249.988 li
172.889 249.988 li
172.889 252.043 li
cp
f
189.773 249.988 mo
189.773 252.043 li
193.223 252.043 li
193.223 249.988 li
189.773 249.988 li
cp
f
184.176 258.553 mo
187.607 258.553 li
187.607 256.508 li
184.176 256.508 li
184.176 258.553 li
cp
f
201.085 256.508 mo
201.085 258.553 li
204.513 258.553 li
204.513 256.508 li
201.085 256.508 li
cp
f
195.466 265.077 mo
198.923 265.077 li
198.923 263.025 li
195.466 263.025 li
195.466 265.077 li
cp
f
212.369 263.025 mo
212.369 265.077 li
215.793 265.077 li
215.793 263.025 li
212.369 263.025 li
cp
f
206.777 271.608 mo
210.224 271.608 li
210.224 269.593 li
206.777 269.593 li
206.777 271.608 li
f
223.683 269.593 mo
223.683 271.608 li
227.136 271.608 li
227.136 269.593 li
223.683 269.593 li
f
226.904 270.108 mo
230.336 270.108 li
230.336 268.052 li
226.904 268.052 li
226.904 270.108 li
f
243.817 268.052 mo
243.817 270.108 li
247.26 270.108 li
247.26 268.052 li
243.817 268.052 li
f
215.242 263.39 mo
218.67 263.39 li
218.67 261.339 li
215.242 261.339 li
215.242 263.39 li
cp
f
232.159 261.339 mo
232.159 263.39 li
235.563 263.39 li
235.563 261.339 li
232.159 261.339 li
f
203.924 256.854 mo
207.36 256.854 li
207.36 254.803 li
203.924 254.803 li
203.924 256.854 li
cp
f
220.84 254.803 mo
220.84 256.854 li
224.262 256.854 li
224.262 254.803 li
220.84 254.803 li
cp
f
238.366 276.714 mo
241.794 276.714 li
241.794 274.686 li
238.366 274.686 li
238.366 276.714 li
f
255.255 274.686 mo
255.255 276.714 li
258.703 276.714 li
258.703 274.686 li
255.255 274.686 li
f
218.468 278.368 mo
221.89 278.368 li
221.89 276.311 li
218.468 276.311 li
218.468 278.368 li
f
235.37 276.311 mo
235.37 278.368 li
238.809 278.368 li
238.809 276.311 li
235.37 276.311 li
f
249.663 283.249 mo
253.078 283.249 li
253.078 281.201 li
249.663 281.201 li
249.663 283.249 li
f
266.566 281.201 mo
266.566 283.249 li
269.991 283.249 li
269.991 281.201 li
266.566 281.201 li
cp
f
266.738 279.97 mo
270.165 279.97 li
270.165 277.92 li
266.738 277.92 li
266.738 279.97 li
f
283.62 277.92 mo
283.62 279.97 li
287.08 279.97 li
287.08 277.92 li
283.62 277.92 li
cp
f
255.428 273.459 mo
258.875 273.459 li
258.875 271.401 li
255.428 271.401 li
255.428 273.459 li
f
272.333 271.401 mo
272.333 273.459 li
275.783 273.459 li
275.783 271.401 li
272.333 271.401 li
cp
f
244.167 266.929 mo
247.595 266.929 li
247.595 264.859 li
244.167 264.859 li
244.167 266.929 li
f
261.075 264.859 mo
261.075 266.929 li
264.476 266.929 li
264.476 264.859 li
261.075 264.859 li
cp
f
232.698 260.318 mo
236.159 260.318 li
236.159 258.253 li
232.698 258.253 li
232.698 260.318 li
f
249.606 258.253 mo
249.606 260.318 li
253.028 260.318 li
253.028 258.253 li
249.606 258.253 li
cp
f
221.033 253.584 mo
224.465 253.584 li
224.465 251.497 li
221.033 251.497 li
221.033 253.584 li
cp
f
237.945 251.497 mo
237.945 253.584 li
241.37 253.584 li
241.37 251.497 li
237.945 251.497 li
cp
f
209.725 247.055 mo
213.146 247.055 li
213.146 245.01 li
209.725 245.01 li
209.725 247.055 li
cp
f
226.626 245.01 mo
226.626 247.055 li
230.051 247.055 li
230.051 245.01 li
226.626 245.01 li
cp
f
198.409 240.534 mo
201.865 240.534 li
201.865 238.48 li
198.409 238.48 li
198.409 240.534 li
cp
f
215.325 238.48 mo
215.325 240.534 li
218.767 240.534 li
218.767 238.48 li
215.325 238.48 li
cp
f
187.126 233.995 mo
190.583 233.995 li
190.583 231.948 li
187.126 231.948 li
187.126 233.995 li
cp
f
204.031 231.948 mo
204.031 233.995 li
207.49 233.995 li
207.49 231.948 li
204.031 231.948 li
cp
f
175.832 227.498 mo
179.263 227.498 li
179.263 225.448 li
175.832 225.448 li
175.832 227.498 li
cp
f
192.747 225.448 mo
192.747 227.498 li
196.166 227.498 li
196.166 225.448 li
192.747 225.448 li
cp
f
181.325 243.809 mo
184.783 243.809 li
184.783 241.742 li
181.325 241.742 li
181.325 243.809 li
cp
f
198.266 241.742 mo
198.266 243.809 li
201.666 243.809 li
201.666 241.742 li
198.266 241.742 li
cp
f
192.616 250.312 mo
196.065 250.312 li
196.065 248.281 li
192.616 248.281 li
192.616 250.312 li
cp
f
209.531 248.281 mo
209.531 250.312 li
212.946 250.312 li
212.946 248.281 li
209.531 248.281 li
cp
f
229.884 284.968 mo
233.339 284.968 li
233.339 282.896 li
229.884 282.896 li
229.884 284.968 li
cp
f
246.817 282.896 mo
246.817 284.968 li
250.238 284.968 li
250.238 282.896 li
246.817 282.896 li
f
272.206 296.275 mo
275.654 296.275 li
275.654 294.228 li
272.206 294.228 li
272.206 296.275 li
f
289.142 294.228 mo
289.142 296.275 li
292.567 296.275 li
292.567 294.228 li
289.142 294.228 li
f
235.7 301.263 mo
239.147 301.263 li
239.147 299.22 li
235.7 299.22 li
235.7 301.263 li
f
252.611 299.22 mo
252.611 301.263 li
256.028 301.263 li
256.028 299.22 li
252.611 299.22 li
f
166.9 275.164 mo
170.323 275.164 li
170.323 273.106 li
166.9 273.106 li
166.9 275.164 li
cp
f
183.801 273.106 mo
183.801 275.164 li
187.23 275.164 li
187.23 273.106 li
183.801 273.106 li
cp
f
155.584 268.634 mo
159.034 268.634 li
159.034 266.599 li
155.584 266.599 li
155.584 268.634 li
cp
f
172.487 266.599 mo
172.487 268.634 li
175.942 268.634 li
175.942 266.599 li
172.487 266.599 li
cp
f
144.312 262.152 mo
147.75 262.152 li
147.75 260.072 li
144.312 260.072 li
144.312 262.152 li
cp
f
161.203 260.072 mo
161.203 262.152 li
164.656 262.152 li
164.656 260.072 li
161.203 260.072 li
cp
f
130.06 253.903 mo
133.513 253.903 li
133.513 251.847 li
130.06 251.847 li
130.06 253.903 li
cp
f
141.879 247.102 mo
145.301 247.102 li
145.301 245.054 li
141.879 245.054 li
141.879 247.102 li
cp
f
173.014 255.302 mo
176.445 255.302 li
176.445 253.256 li
173.014 253.256 li
173.014 255.302 li
cp
f
178.482 245.529 mo
181.935 245.529 li
181.935 243.442 li
178.482 243.442 li
178.482 245.529 li
cp
f
153.113 240.616 mo
156.538 240.616 li
156.538 238.568 li
153.113 238.568 li
153.113 240.616 li
cp
f
164.455 234.07 mo
167.874 234.07 li
167.874 232.005 li
164.455 232.005 li
164.455 234.07 li
cp
f
187.009 237.305 mo
190.457 237.305 li
190.457 235.284 li
187.009 235.284 li
187.009 237.305 li
cp
f
178.06 281.618 mo
181.51 281.618 li
181.51 279.553 li
178.06 279.553 li
178.06 281.618 li
f
240.81 308.073 mo
244.242 308.073 li
244.242 306.015 li
240.81 306.015 li
240.81 308.073 li
cp
f
149.94 253.55 mo
149.94 255.591 li
153.369 255.591 li
153.369 253.55 li
149.94 253.55 li
cp
f
263.773 304.514 mo
267.215 304.514 li
267.215 302.436 li
263.773 302.436 li
263.773 304.514 li
f
280.677 302.436 mo
280.677 304.514 li
284.096 304.514 li
284.096 302.436 li
280.677 302.436 li
f
283.52 302.815 mo
286.977 302.815 li
286.977 300.76 li
283.52 300.76 li
283.52 302.815 li
f
300.423 300.76 mo
300.423 302.815 li
303.876 302.815 li
303.876 300.76 li
300.423 300.76 li
cp
f
300.7 299.593 mo
304.129 299.593 li
304.129 297.522 li
300.7 297.522 li
300.7 299.593 li
cp
f
317.62 297.522 mo
317.62 299.593 li
321.035 299.593 li
321.035 297.522 li
317.62 297.522 li
cp
f
280.696 325.208 mo
284.121 325.208 li
284.121 327.234 li
280.696 327.234 li
280.696 325.208 li
cp
f
297.901 322.156 mo
301.328 322.156 li
301.328 324.209 li
297.901 324.209 li
297.901 322.156 li
cp
f
317.788 320.527 mo
321.234 320.527 li
321.234 322.561 li
317.788 322.561 li
317.788 320.527 li
cp
f
323.478 310.671 mo
326.896 310.671 li
326.896 312.711 li
323.478 312.711 li
323.478 310.671 li
cp
f
346.327 310.635 mo
349.752 310.635 li
349.752 312.66 li
346.327 312.66 li
346.327 310.635 li
cp
f
334.95 304.067 mo
338.389 304.067 li
338.389 306.094 li
334.95 306.094 li
334.95 304.067 li
cp
f
336.933 299.511 mo
340.383 299.511 li
340.383 301.564 li
336.933 301.564 li
336.933 299.511 li
cp
f
323.556 297.471 mo
326.999 297.471 li
326.999 299.538 li
323.556 299.538 li
323.556 297.471 li
cp
f
325.567 292.93 mo
329 292.93 li
329 295.013 li
325.567 295.013 li
325.567 292.93 li
cp
f
312.16 290.901 mo
315.598 290.901 li
315.598 292.93 li
312.16 292.93 li
312.16 290.901 li
cp
f
314.178 286.367 mo
317.62 286.367 li
317.62 288.406 li
314.178 288.406 li
314.178 286.367 li
cp
f
300.775 284.344 mo
304.219 284.344 li
304.219 286.378 li
300.775 286.378 li
300.775 284.344 li
cp
f
302.872 279.849 mo
306.315 279.849 li
306.315 281.901 li
302.872 281.901 li
302.872 279.849 li
cp
f
289.488 277.813 mo
292.916 277.813 li
292.916 279.849 li
289.488 279.849 li
289.488 277.813 li
cp
f
291.575 273.302 mo
295.03 273.302 li
295.03 275.362 li
291.575 275.362 li
291.575 273.302 li
cp
f
278.199 271.298 mo
281.624 271.298 li
281.624 273.354 li
278.199 273.354 li
278.199 271.298 li
cp
f
280.292 266.8 mo
283.745 266.8 li
283.745 268.836 li
280.292 268.836 li
280.292 266.8 li
cp
f
266.918 264.777 mo
270.343 264.777 li
270.343 266.825 li
266.918 266.825 li
266.918 264.777 li
cp
f
268.98 260.273 mo
272.434 260.273 li
272.434 262.341 li
268.98 262.341 li
268.98 260.273 li
cp
f
255.628 258.253 mo
259.056 258.253 li
259.056 260.293 li
255.628 260.293 li
255.628 258.253 li
cp
f
257.566 253.676 mo
260.997 253.676 li
260.997 255.72 li
257.566 255.72 li
257.566 253.676 li
cp
f
244.167 251.643 mo
247.61 251.643 li
247.61 253.704 li
244.167 253.704 li
244.167 251.643 li
cp
f
245.88 246.937 mo
249.332 246.937 li
249.332 248.977 li
245.88 248.977 li
245.88 246.937 li
cp
f
232.499 244.903 mo
235.948 244.903 li
235.948 246.966 li
232.499 246.966 li
232.499 244.903 li
cp
f
234.564 240.409 mo
238.013 240.409 li
238.013 242.447 li
234.564 242.447 li
234.564 240.409 li
cp
f
221.19 238.382 mo
224.607 238.382 li
224.607 240.439 li
221.19 240.439 li
221.19 238.382 li
cp
f
223.28 233.866 mo
226.733 233.866 li
226.733 235.936 li
223.28 235.936 li
223.28 233.866 li
cp
f
209.868 231.855 mo
213.331 231.855 li
213.331 233.907 li
209.868 233.907 li
209.868 231.855 li
cp
f
211.99 227.363 mo
215.446 227.363 li
215.446 229.404 li
211.99 229.404 li
211.99 227.363 li
cp
f
198.595 225.33 mo
202.04 225.33 li
202.04 227.385 li
198.595 227.385 li
198.595 225.33 li
cp
f
200.681 220.851 mo
204.132 220.851 li
204.132 222.907 li
200.681 222.907 li
200.681 220.851 li
cp
f
187.298 218.81 mo
190.743 218.81 li
190.743 220.851 li
187.298 220.851 li
187.298 218.81 li
cp
f
242.883 266.204 mo
232.698 260.318 li
242.883 254.454 li
253.028 260.318 li
242.883 266.204 li
f
254.316 272.804 mo
244.167 266.929 li
254.316 261.061 li
264.476 266.929 li
254.316 272.804 li
f
265.607 279.322 mo
255.428 273.459 li
265.607 267.568 li
275.783 273.459 li
265.607 279.322 li
f
197.3 239.873 mo
187.126 233.995 li
197.3 228.151 li
207.49 233.995 li
197.3 239.873 li
cp
f
208.591 246.402 mo
198.409 240.534 li
208.591 234.638 li
218.767 240.534 li
208.591 246.402 li
cp
f
186.023 233.358 mo
175.832 227.498 li
186.023 221.61 li
196.166 227.498 li
186.023 233.358 li
cp
f
219.877 252.916 mo
209.725 247.055 li
219.877 241.168 li
230.051 247.055 li
219.877 252.916 li
cp
f
231.221 259.445 mo
221.033 253.584 li
231.221 247.719 li
241.37 253.584 li
231.221 259.445 li
f
288.384 279.222 mo
278.199 273.354 li
284.851 269.501 li
295.03 275.362 li
288.384 279.222 li
cp
f
299.666 285.742 mo
289.488 279.849 li
296.141 276.039 li
306.315 281.901 li
299.666 285.742 li
cp
f
310.95 292.238 mo
300.775 286.378 li
307.454 282.546 li
317.62 288.406 li
310.95 292.238 li
cp
f
322.337 298.813 mo
312.16 292.93 li
318.814 289.124 li
329 295.013 li
322.337 298.813 li
cp
f
333.737 305.384 mo
323.556 299.538 li
330.202 295.701 li
340.383 301.564 li
333.737 305.384 li
cp
f
345.117 311.986 mo
334.95 306.094 li
341.593 302.267 li
351.744 308.138 li
345.117 311.986 li
cp
f
356.508 318.547 mo
346.327 312.66 li
352.982 308.866 li
363.136 314.722 li
356.508 318.547 li
cp
f
254.344 259.559 mo
244.167 253.704 li
250.812 249.88 li
260.997 255.72 li
254.344 259.559 li
cp
f
265.781 266.172 mo
255.628 260.293 li
262.255 256.461 li
272.434 262.341 li
265.781 266.172 li
cp
f
277.093 272.708 mo
266.918 266.825 li
273.536 262.993 li
283.745 268.836 li
277.093 272.708 li
cp
f
208.769 233.267 mo
198.595 227.385 li
205.273 223.543 li
215.446 229.404 li
208.769 233.267 li
cp
f
220.052 239.782 mo
209.868 233.917 li
216.563 230.072 li
226.733 235.936 li
220.052 239.782 li
cp
f
197.484 226.744 mo
187.298 220.851 li
193.951 217.026 li
204.132 222.907 li
197.484 226.744 li
cp
f
231.335 246.274 mo
221.19 240.439 li
227.817 236.592 li
238.013 242.447 li
231.335 246.274 li
cp
f
242.679 252.856 mo
232.499 246.966 li
239.147 243.109 li
249.332 248.977 li
242.679 252.856 li
cp
f
245.365 318.405 mo
235.198 312.529 li
245.365 306.694 li
255.546 312.529 li
245.365 318.405 li
.556863 .466667 .447059 rgb
f
256.655 324.932 mo
246.504 319.079 li
256.655 313.21 li
266.84 319.079 li
256.655 324.932 li
f
234.092 311.905 mo
178.06 279.553 li
188.24 273.664 li
244.242 306.015 li
234.092 311.905 li
f
267.95 331.432 mo
257.768 325.578 li
267.95 319.71 li
278.121 325.578 li
267.95 331.432 li
f
299.267 349.525 mo
268.91 331.985 li
279.062 326.109 li
309.444 343.678 li
299.267 349.525 li
cp
f
154.485 265.927 mo
144.312 260.072 li
154.485 254.179 li
164.656 260.072 li
154.485 265.927 li
cp
f
165.759 272.457 mo
155.584 266.599 li
165.759 260.725 li
175.942 266.599 li
165.759 272.457 li
cp
f
143.187 259.438 mo
130.06 251.847 li
140.212 245.982 li
153.369 253.55 li
143.187 259.438 li
cp
f
177.076 278.993 mo
166.9 273.106 li
177.076 267.231 li
187.23 273.106 li
177.076 278.993 li
f
257.166 311.625 mo
246.991 305.737 li
257.166 299.851 li
267.347 305.737 li
257.166 311.625 li
f
268.45 318.118 mo
258.271 312.276 li
268.45 306.393 li
278.609 312.276 li
268.45 318.118 li
cp
f
279.737 324.674 mo
269.559 318.757 li
279.737 312.888 li
289.92 318.757 li
279.737 324.674 li
cp
f
311.049 342.737 mo
280.696 325.208 li
290.851 319.328 li
321.234 336.858 li
311.049 342.737 li
cp
f
223.134 291.956 mo
212.946 286.077 li
223.134 280.224 li
233.304 286.077 li
223.134 291.956 li
f
234.564 298.564 mo
224.411 292.696 li
234.564 286.798 li
244.766 292.696 li
234.564 298.564 li
f
245.88 305.098 mo
235.683 299.22 li
245.88 293.344 li
256.028 299.22 li
245.88 305.098 li
f
177.555 265.64 mo
167.399 259.789 li
177.555 253.903 li
187.733 259.789 li
177.555 265.64 li
cp
f
188.864 272.183 mo
178.686 266.3 li
188.864 260.404 li
199.019 266.3 li
188.864 272.183 li
cp
f
200.147 278.708 mo
189.968 272.815 li
200.147 266.954 li
210.334 272.815 li
200.147 278.708 li
f
211.469 285.204 mo
201.281 279.357 li
211.469 273.484 li
221.614 279.357 li
211.469 285.204 li
f
262.66 301.816 mo
252.479 295.937 li
262.66 290.054 li
272.843 295.937 li
262.66 301.816 li
f
273.943 308.344 mo
263.773 302.436 li
273.943 296.579 li
284.096 302.436 li
273.943 308.344 li
f
285.24 314.836 mo
275.087 308.976 li
285.24 303.103 li
295.406 308.976 li
285.24 314.836 li
cp
f
296.613 321.436 mo
286.443 315.56 li
296.613 309.661 li
306.797 315.56 li
296.613 321.436 li
cp
f
322.261 336.234 mo
297.901 322.156 li
308.086 316.285 li
332.478 330.365 li
322.261 336.234 li
cp
f
228.619 282.16 mo
218.468 276.311 li
228.619 270.431 li
238.809 276.311 li
228.619 282.16 li
f
240.06 288.802 mo
229.884 282.896 li
240.06 277.035 li
250.238 282.896 li
240.06 288.802 li
f
251.347 295.298 mo
241.192 289.399 li
251.347 283.552 li
261.549 289.399 li
251.347 295.298 li
f
183.042 255.855 mo
172.889 249.988 li
183.042 244.118 li
193.223 249.988 li
183.042 255.855 li
cp
f
194.352 262.348 mo
184.176 256.508 li
194.352 250.619 li
204.513 256.508 li
194.352 262.348 li
cp
f
205.643 268.875 mo
195.466 263.025 li
205.643 257.139 li
215.793 263.025 li
205.643 268.875 li
cp
f
216.955 275.429 mo
206.777 269.593 li
216.955 263.683 li
227.136 269.593 li
216.955 275.429 li
f
271.106 293.59 mo
260.937 287.708 li
271.106 281.854 li
281.284 287.708 li
271.106 293.59 li
f
282.412 300.122 mo
272.206 294.228 li
282.412 288.351 li
292.567 294.228 li
282.412 300.122 li
f
293.695 306.611 mo
283.52 300.76 li
293.695 294.871 li
303.876 300.76 li
293.695 306.611 li
f
305.089 313.21 mo
294.904 307.328 li
305.089 301.467 li
315.259 307.328 li
305.089 313.21 li
cp
f
316.469 319.755 mo
306.299 313.889 li
316.469 308.026 li
326.653 313.889 li
316.469 319.755 li
cp
f
333.637 329.695 mo
317.788 320.527 li
327.965 314.643 li
343.807 323.829 li
333.637 329.695 li
cp
f
237.092 273.948 mo
226.904 268.052 li
237.092 262.192 li
247.26 268.052 li
237.092 273.948 li
f
248.525 280.548 mo
238.366 274.686 li
248.525 268.816 li
258.703 274.686 li
248.525 280.548 li
f
259.819 287.065 mo
249.663 281.201 li
259.819 275.308 li
269.991 281.201 li
259.819 287.065 li
f
191.503 247.625 mo
181.325 241.747 li
191.503 235.886 li
201.666 241.742 li
191.503 247.625 li
cp
f
180.28 241.152 mo
164.455 232.005 li
174.634 226.121 li
190.457 235.284 li
180.28 241.152 li
cp
f
171.757 249.314 mo
153.113 238.568 li
163.261 232.678 li
181.935 243.442 li
171.757 249.314 li
cp
f
166.264 259.145 mo
141.879 245.054 li
152.024 239.172 li
176.445 253.256 li
166.264 259.145 li
cp
f
202.797 254.147 mo
192.616 248.281 li
202.797 242.41 li
212.946 248.281 li
202.797 254.147 li
cp
f
214.084 260.65 mo
203.924 254.803 li
214.084 248.917 li
224.262 254.803 li
214.084 260.65 li
cp
f
225.42 267.188 mo
215.242 261.339 li
225.42 255.459 li
235.563 261.339 li
225.42 267.188 li
f
276.896 283.798 mo
266.738 277.92 li
276.896 272.047 li
287.08 277.92 li
276.896 283.798 li
f
288.205 290.298 mo
278.02 284.426 li
288.205 278.561 li
298.353 284.447 li
288.205 290.298 li
cp
f
299.496 296.829 mo
289.314 290.941 li
299.496 285.09 li
309.672 290.941 li
299.496 296.829 li
cp
f
310.853 303.382 mo
300.7 297.522 li
310.853 291.635 li
321.035 297.522 li
310.853 303.382 li
cp
f
322.246 309.988 mo
312.069 304.077 li
322.246 298.221 li
332.424 304.099 li
322.246 309.988 li
cp
f
345.013 323.12 mo
323.478 310.671 li
333.637 304.805 li
355.191 317.255 li
345.013 323.12 li
cp
f
242.883 264.15 mo
232.698 258.253 li
242.883 252.395 li
253.028 258.253 li
242.883 264.15 li
f
254.316 270.749 mo
244.167 264.859 li
254.316 258.998 li
264.476 264.859 li
254.316 270.749 li
f
265.607 277.262 mo
255.428 271.401 li
265.607 265.52 li
275.783 271.401 li
265.607 277.262 li
f
197.3 237.82 mo
187.126 231.948 li
197.3 226.063 li
207.49 231.948 li
197.3 237.82 li
cp
f
208.591 244.332 mo
198.409 238.48 li
208.591 232.593 li
218.767 238.48 li
208.591 244.332 li
cp
f
186.023 231.308 mo
175.832 225.448 li
186.023 219.573 li
196.166 225.448 li
186.023 231.308 li
cp
f
219.877 250.879 mo
209.725 245.01 li
219.877 239.104 li
230.051 245.01 li
219.877 250.879 li
cp
f
231.221 257.415 mo
221.033 251.497 li
231.221 245.653 li
241.37 251.497 li
231.221 257.415 li
cp
f
288.384 277.137 mo
278.199 271.298 li
284.851 267.456 li
295.03 273.302 li
288.384 277.137 li
cp
f
299.666 283.681 mo
289.488 277.813 li
296.141 273.97 li
306.315 279.849 li
299.666 283.681 li
cp
f
310.95 290.202 mo
300.775 284.344 li
307.454 280.495 li
317.62 286.367 li
310.95 290.202 li
cp
f
322.337 296.776 mo
312.16 290.901 li
318.814 287.065 li
329 292.93 li
322.337 296.776 li
cp
f
333.737 303.346 mo
323.556 297.471 li
330.202 293.653 li
340.383 299.511 li
333.737 303.346 li
cp
f
345.117 309.91 mo
334.95 304.067 li
341.593 300.179 li
351.744 306.07 li
345.117 309.91 li
cp
f
356.508 316.485 mo
346.327 310.635 li
352.982 306.806 li
363.136 312.66 li
356.508 316.485 li
cp
f
254.344 257.504 mo
244.167 251.643 li
250.812 247.811 li
260.997 253.676 li
254.344 257.504 li
cp
f
265.781 264.15 mo
255.628 258.253 li
262.255 254.404 li
272.434 260.273 li
265.781 264.15 li
cp
f
277.093 270.63 mo
266.918 264.777 li
273.536 260.939 li
283.745 266.8 li
277.093 270.63 li
cp
f
208.769 231.206 mo
198.595 225.34 li
205.273 221.498 li
215.446 227.363 li
208.769 231.206 li
cp
f
220.052 237.72 mo
209.868 231.855 li
216.563 228.012 li
226.733 233.866 li
220.052 237.72 li
cp
f
197.484 224.674 mo
187.298 218.81 li
193.951 214.983 li
204.132 220.851 li
197.484 224.674 li
cp
f
231.335 244.237 mo
221.19 238.382 li
227.817 234.541 li
238.013 240.409 li
231.335 244.237 li
cp
f
242.679 250.766 mo
232.499 244.903 li
239.147 241.066 li
249.332 246.937 li
242.679 250.766 li
cp
f
390.877 316.857 mo
388.674 233.432 li
390.877 162.225 li
397.075 158.653 li
397.075 313.298 li
390.877 316.857 li
cp
.227451 .188235 .172549 rgb
f
190 46.2722 mo
190 200.905 li
390.877 316.857 li
390.877 162.225 li
386.212 164.939 li
386.212 283.531 li
386.212 290.864 li
196.75 181.438 li
196.75 55.571 li
190 46.2722 li
cp
.384314 .321569 .294118 rgb
f
386.212 290.864 mo
386.212 293.201 li
194.682 182.635 li
194.682 54.3479 li
196.75 55.571 li
196.75 181.438 li
386.212 290.864 li
cp
.227451 .188235 .172549 rgb
f
190 46.2722 mo
196.216 42.6819 li
397.075 158.653 li
390.877 162.225 li
288.029 105.979 li
190 46.2722 li
cp
.490196 .411765 .392157 rgb
f
196.75 55.571 mo
386.212 164.939 li
388.384 165.868 li
390.877 162.225 li
190 46.2722 li
190.947 50.9873 li
196.75 55.571 li
cp
.384314 .321569 .294118 rgb
f
379.499 169.177 mo
376.84 170.708 li
276.151 112.575 li
278.813 111.042 li
379.499 169.177 li
cp
.968627 .721569 .423529 rgb
f
379.499 178.631 mo
376.84 180.166 li
376.84 170.708 li
379.499 169.177 li
379.499 178.631 li
cp
.815686 .407843 .137255 rgb
f
379.499 254.61 mo
376.84 256.142 li
376.84 180.166 li
379.499 178.631 li
379.499 254.61 li
cp
.796078 .796078 .796078 rgb
f
376.84 170.708 mo
276.151 112.575 li
276.151 122.034 li
376.84 180.166 li
376.84 170.708 li
cp
.913725 .545098 .172549 rgb
f
356.874 163.984 mo
355.38 161.412 li
353.285 160.202 li
351.798 161.059 li
351.798 163.482 li
353.285 166.052 li
355.38 167.265 li
356.874 166.407 li
356.874 163.984 li
cp
.682353 .741176 .25098 rgb
f
355.38 161.412 mo
353.285 160.202 li
354.391 159.563 li
356.489 160.777 li
355.663 161.451 li
355.38 161.412 li
cp
.843137 .878431 .34902 rgb
f
356.874 163.984 mo
355.38 161.412 li
356.489 160.777 li
357.973 163.345 li
357.135 164.103 li
356.874 163.984 li
cp
.835294 .803922 .27451 rgb
f
356.874 166.407 mo
356.874 163.984 li
357.973 163.345 li
357.973 165.771 li
356.874 166.407 li
cp
.54902 .607843 .258824 rgb
f
363.899 168.046 mo
362.415 165.472 li
360.313 164.26 li
358.832 165.118 li
358.832 167.544 li
360.313 170.113 li
362.415 171.324 li
363.899 170.466 li
363.899 168.046 li
cp
.47451 .8 .866667 rgb
f
362.415 165.472 mo
360.313 164.26 li
361.427 163.624 li
363.521 164.834 li
362.7 165.505 li
362.415 165.472 li
cp
.709804 .929412 .976471 rgb
f
363.899 168.046 mo
362.415 165.472 li
363.521 164.834 li
365.005 167.406 li
364.166 168.162 li
363.899 168.046 li
cp
.517647 .65098 .976471 rgb
f
363.899 170.466 mo
363.899 168.046 li
365.005 167.406 li
365.005 169.83 li
363.899 170.466 li
cp
.356863 .6 .654902 rgb
f
370.933 172.107 mo
369.447 169.531 li
367.349 168.324 li
365.865 169.178 li
365.865 171.603 li
367.349 174.175 li
369.447 175.385 li
370.933 174.528 li
370.933 172.107 li
cp
.72549 .145098 .101961 rgb
f
369.447 169.531 mo
367.349 168.324 li
368.458 167.683 li
370.551 168.896 li
369.726 169.57 li
369.447 169.531 li
cp
.956863 .352941 .313726 rgb
f
370.933 172.107 mo
369.447 169.531 li
370.551 168.896 li
372.042 171.465 li
371.197 172.218 li
370.933 172.107 li
cp
.72549 .145098 .101961 rgb
f
370.933 174.528 mo
370.933 172.107 li
372.042 171.465 li
372.042 173.891 li
370.933 174.528 li
cp
.576471 .117647 .0823529 rgb
f
276.151 198.01 mo
376.84 256.142 li
376.84 180.166 li
276.151 122.034 li
276.151 198.01 li
cp
.956863 .94902 .937255 rgb
f
371.105 229.011 mo
281.884 177.505 li
281.884 130.023 li
371.105 181.542 li
371.105 229.011 li
cp
.317647 .337255 .478431 rgb
f
365.875 216.477 mo
360.649 219.491 li
356.839 217.287 li
355.429 211.203 li
356.995 207.176 li
362.783 209.189 li
365.875 216.477 li
cp
.976471 .756863 .321569 rgb
f
356.995 207.176 mo
356.839 217.287 li
353.267 215.227 li
348.05 206.188 li
348.05 197.659 li
356.995 207.176 li
cp
.890196 .309804 .329412 rgb
f
348.05 197.659 mo
353.267 194.645 li
360.649 198.907 li
358.7 205.966 li
356.995 207.176 li
348.05 197.659 li
cp
f
356.995 207.176 mo
360.649 198.907 li
365.875 207.951 li
365.875 216.477 li
356.995 207.176 li
cp
.976471 .901961 .466667 rgb
f
365.187 185.859 mo
358.939 182.248 li
358.252 182.645 li
358.252 183.765 li
358.939 184.956 li
365.187 188.566 li
365.875 188.17 li
365.875 187.047 li
365.187 185.859 li
cp
f
365.187 190.395 mo
358.939 186.786 li
358.252 187.183 li
358.252 188.306 li
358.939 189.494 li
365.187 193.104 li
365.875 192.708 li
365.875 191.585 li
365.187 190.395 li
cp
.976471 .756863 .321569 rgb
f
365.187 194.93 mo
358.939 191.324 li
358.252 191.719 li
358.252 192.843 li
358.939 194.031 li
365.187 197.64 li
365.875 197.245 li
365.875 196.121 li
365.187 194.93 li
cp
.890196 .309804 .329412 rgb
f
343.534 209.612 mo
285.439 176.071 li
285.439 175.616 li
343.534 209.152 li
343.534 209.612 li
cp
.247059 .521569 .635294 rgb
f
317.534 171.739 mo
311.738 168.393 li
311.738 190.795 li
317.534 194.145 li
317.534 171.739 li
cp
.976471 .756863 .321569 rgb
f
325.393 169.342 mo
319.592 165.995 li
319.592 195.333 li
325.393 198.682 li
325.393 169.342 li
cp
.890196 .309804 .329412 rgb
f
333.255 168.423 mo
327.455 165.08 li
327.455 199.871 li
333.255 203.217 li
333.255 168.423 li
cp
f
341.111 167.719 mo
335.314 164.374 li
335.314 204.409 li
341.111 207.755 li
341.111 167.719 li
cp
f
293.954 176.369 mo
288.158 173.026 li
288.158 177.179 li
293.954 180.528 li
293.954 176.369 li
cp
.976471 .901961 .466667 rgb
f
301.816 175.064 mo
296.017 171.717 li
296.017 181.717 li
301.816 185.066 li
301.816 175.064 li
cp
.843137 .878431 .34902 rgb
f
309.675 173.388 mo
303.876 170.041 li
303.876 186.259 li
309.675 189.604 li
309.675 173.388 li
cp
.976471 .756863 .321569 rgb
f
370.201 234.562 mo
282.792 184.096 li
281.884 184.621 li
281.884 185.759 li
282.792 187.325 li
370.201 237.792 li
371.105 237.27 li
371.105 236.129 li
370.201 234.562 li
cp
.796078 .796078 .796078 rgb
f
348.277 227.438 mo
282.792 189.629 li
281.884 190.153 li
281.884 191.292 li
282.792 192.858 li
348.277 230.664 li
349.18 230.142 li
349.18 229.009 li
348.277 227.438 li
cp
f
200.739 177.922 mo
196.919 177.25 li
193.867 175.189 li
193.169 171.575 li
195.827 170.34 li
202.429 174.127 li
200.739 177.922 li
cp
.380392 .184314 .203922 rgb
f
192.559 173.866 mo
189.833 174.86 li
185.992 178.616 li
186.369 180.614 li
182.76 187.799 li
185.042 190.603 li
191.834 189.89 li
195.827 184.322 li
198.47 178.3 li
198.47 175.149 li
194.165 172.482 li
192.559 173.866 li
cp
.917647 .756863 .686275 rgb
f
201.605 174.689 mo
198.47 178.3 li
197.278 176.511 li
194.336 174.357 li
192.559 173.866 li
195.773 169.439 li
198.806 169.621 li
202.429 172.656 li
201.605 174.689 li
cp
.956863 .94902 .937255 rgb
f
222.848 119.633 mo
217.996 120.267 li
213.146 125.148 li
208.205 152.645 li
193.169 171.575 li
196.154 171.94 li
199.482 174.333 li
200.739 177.922 li
216.602 161.205 li
226.18 123.916 li
222.848 119.633 li
.152941 .360784 .466667 rgb
f
212.807 165.214 mo
213.381 139.93 li
217.33 128.009 li
215.988 161.809 li
214.097 163.848 li
212.807 165.214 li
cp
.0823529 .243137 .337255 rgb
f
237.146 189.937 mo
234.981 203.509 li
216.602 192.896 li
216.602 184.678 li
228.343 180.707 li
237.146 189.937 li
cp
.188235 .152941 .141176 rgb
f
253.645 188.363 mo
253.645 214.326 li
237.549 204.992 li
235.372 194.075 li
226.747 190.096 li
217.996 182.99 li
217.996 177.127 li
249.461 179.416 li
253.645 188.363 li
cp
.317647 .266667 .243137 rgb
f
241.173 116.355 mo
241.173 119.728 li
241.876 121.918 li
242.682 124.962 li
241.173 130.908 li
237.542 134.041 li
232.135 134.041 li
229.801 133.666 li
226.526 130.662 li
226.18 127.669 li
226.847 121.679 li
232.655 115.59 li
239.307 115.019 li
241.173 116.355 li
.756863 .623529 .564706 rgb
f
231.46 182.391 mo
224.908 180.361 li
222.505 178.268 li
221.943 173.826 li
234.36 176.048 li
234.734 179.724 li
231.46 182.391 li
cp
.129412 .101961 .101961 rgb
f
240.496 129.335 mo
235.028 132.568 li
230.287 132.821 li
227.988 129.953 li
228.281 124.52 li
225.8 124.52 li
220.024 137.832 li
221.943 173.919 li
225.221 176.331 li
231.442 178.104 li
236.672 178.104 li
244.255 131.623 li
242.893 129.714 li
240.496 129.335 li
.956863 .94902 .937255 rgb
f
229.801 124.52 mo
226.648 130.189 li
224.275 139.234 li
223.513 149.787 li
223.513 165.768 li
223.513 186.462 li
221.799 188.363 li
216.984 185.658 li
214.097 181.367 li
214.097 139.612 li
217.33 128.009 li
223.513 121.918 li
229.801 124.52 li
.152941 .360784 .466667 rgb
f
230.287 132.821 mo
226.366 131.265 li
226.648 130.189 li
227.667 128.357 li
227.988 129.953 li
230.287 132.821 li
.666667 .662745 .654902 rgb
f
226.366 131.265 mo
222.599 129.77 li
224.692 125.246 li
227.282 126.446 li
227.667 128.357 li
226.648 130.189 li
226.366 131.265 li
.105882 .25098 .32549 rgb
f
225.706 127.356 mo
223.006 129.46 li
224.875 125.148 li
227.39 125.022 li
227.508 127.448 li
225.706 127.356 li
cp
.854902 .847059 .839216 rgb
f
229.227 125.625 mo
227.988 129.953 li
225.706 127.356 li
227.39 123.723 li
229.227 125.625 li
cp
.956863 .94902 .937255 rgb
f
252.959 129.05 mo
241.876 121.918 li
240.574 127.055 li
235.028 134.283 li
232.723 141.928 li
231.442 151.88 li
231.442 169.673 li
231.46 189.194 li
233.537 192.298 li
239.112 194.075 li
245.201 194.075 li
250.15 193.032 li
254.341 189.316 li
253.027 170.223 li
254.341 150.739 li
252.959 129.05 li
.152941 .360784 .466667 rgb
f
253.837 158.265 mo
253.692 160.407 li
248.883 143.926 li
257.237 151.313 li
253.837 158.265 li
cp
.0823529 .243137 .337255 rgb
f
225.8 100.846 mo
222.306 105.045 li
221.3 110.818 li
221.799 111.705 li
221.546 112.152 li
221.672 116.907 li
222.438 124.323 li
224.853 126.292 li
228.967 126.548 li
235.028 123.439 li
237.4 120.648 li
237.974 118.682 li
240.827 117.157 li
241.684 115.162 li
243.052 110.818 li
240.699 103.145 li
232.17 98.5818 li
225.8 100.846 li
cp
.917647 .756863 .686275 rgb
f
241.929 112.401 mo
240.646 111.548 li
238.545 112.401 li
238.17 114.685 li
236.458 115.59 li
235.551 115.59 li
235.124 111.071 li
235.495 108.362 li
237.782 105.175 li
237.4 103.272 li
235.74 102.603 li
231.841 103.65 li
227.371 104.504 li
225.8 103.843 li
225.8 100.846 li
228.699 97.2722 li
233.861 96.1838 li
239.683 98.0924 li
243.164 101.889 li
244.255 106.985 li
243.495 111.881 li
241.684 115.162 li
241.929 112.401 li
cp
.556863 .294118 .215686 rgb
f
283.197 175.638 mo
283.635 177.707 li
280.818 182.183 li
278.688 183.989 li
277.15 180.307 li
281.266 174.846 li
283.197 175.638 li
cp
.380392 .184314 .203922 rgb
f
286.339 177.793 mo
292.706 178.684 li
294.964 180.236 li
295.246 181.753 li
299.588 188.098 li
296.292 191.078 li
289.793 190.86 li
282.722 185.59 li
281.897 183.989 li
280.528 181.599 li
283.197 177.127 li
286.339 177.793 li
cp
.917647 .756863 .686275 rgb
f
282.148 175.413 mo
286.339 177.793 li
283.72 178.417 li
281.341 181.959 li
281.897 183.989 li
277.646 181.852 li
277.457 178.805 li
280.025 174.846 li
282.148 175.413 li
cp
.956863 .94902 .937255 rgb
f
252.959 129.05 mo
257.698 131.623 li
260.994 136.187 li
263.597 147.54 li
267.852 164.023 li
283.197 175.638 li
280.154 177.175 li
278.505 180.468 li
278.688 183.989 li
260.994 174.496 li
256.938 169.545 li
251.744 150.645 li
248.883 143.926 li
247.52 136.435 li
249.114 131.287 li
252.959 129.05 li
cp
.152941 .360784 .466667 rgb
f
234.734 130.666 mo
230.287 132.821 li
235.159 132.821 li
236.642 131.648 li
234.734 130.666 li
.854902 .847059 .839216 rgb
f
236.611 131.632 mo
234.734 130.666 li
238.573 129.335 li
241.05 125.179 li
240.574 127.055 li
237.437 131.143 li
236.611 131.632 li
.529412 .435294 .396078 rgb
f
235.131 134.149 mo
230.287 132.821 li
235.159 132.821 li
236.642 131.648 li
236.611 131.632 li
237.437 131.143 li
235.131 134.149 li
.666667 .662745 .654902 rgb
f
237.593 134.825 mo
235.131 134.149 li
237.437 131.143 li
240.574 127.055 li
241.05 125.179 li
242.682 122.44 li
241.642 129.05 li
237.593 134.825 li
.105882 .25098 .32549 rgb
f
235.159 132.821 mo
230.287 132.821 li
234.734 130.666 li
236.611 131.632 li
236.642 131.648 li
235.159 132.821 li
.596078 .592157 .584314 rgb
f
237.536 134.283 mo
234.734 130.666 li
239.436 125.658 li
241.459 120.606 li
242.682 122.44 li
241.334 128.45 li
237.536 134.283 li
cp
.956863 .94902 .937255 rgb
f
306.001 295.137 mo
305.995 294.711 li
233.322 252.096 li
230.575 252.103 li
187.141 278.164 li
187.141 278.583 li
259.816 320.183 li
262.563 320.174 li
306.001 295.137 li
.607843 .388235 .215686 rgb
f
305.995 294.711 mo
305.988 293.123 li
233.316 251.532 li
230.569 251.542 li
187.137 276.578 li
187.141 278.164 li
259.816 319.763 li
262.558 319.748 li
305.995 294.711 li
.698039 .541176 .341176 rgb
f
245.433 276.473 mo
236.89 271.587 li
236.316 271.587 li
232.342 273.933 li
220.619 267.222 li
220.616 266.785 li
232.67 259.665 li
233.43 259.659 li
253.602 271.205 li
253.605 271.647 li
245.433 276.473 li
.74902 .623529 .458824 rgb
f
262.31 303.486 mo
255.151 299.39 li
254.765 299.391 li
250.009 302.198 li
236.484 294.394 li
244.195 289.835 li
244.958 289.835 li
265.131 301.375 li
265.132 301.82 li
262.31 303.486 li
f
277.806 305.061 mo
257.637 293.516 li
257.634 293.072 li
269.688 285.956 li
270.451 285.953 li
272.702 287.241 li
265.816 291.304 li
265.816 291.638 li
280.988 300.324 li
281.559 300.317 li
288.443 296.25 li
290.62 297.496 li
290.62 297.938 li
278.569 305.059 li
277.806 305.061 li
f
242.421 285.953 mo
227.251 277.269 li
227.251 276.938 li
232.342 273.933 li
240.788 278.768 li
241.548 278.768 li
245.433 276.473 li
252.057 280.262 li
252.057 280.594 li
242.992 285.948 li
242.421 285.953 li
f
241.548 278.768 mo
240.788 278.768 li
232.342 273.933 li
236.316 271.587 li
236.89 271.587 li
245.433 276.473 li
241.548 278.768 li
.792157 .690196 .552941 rgb
f
288.443 296.25 mo
272.702 287.241 li
274.881 285.956 li
275.455 285.953 li
290.62 294.632 li
290.62 294.963 li
288.443 296.25 li
.74902 .623529 .458824 rgb
f
280.988 300.324 mo
265.816 291.638 li
265.816 291.304 li
272.702 287.241 li
288.443 296.25 li
281.559 300.317 li
280.988 300.324 li
.792157 .690196 .552941 rgb
f
265.22 280.495 mo
264.921 280.495 li
257.008 275.971 li
257.008 275.794 li
261.735 273.007 li
262.034 273.004 li
269.947 277.533 li
269.947 277.701 li
265.22 280.495 li
.74902 .623529 .458824 rgb
f
221.534 285.768 mo
217.634 283.518 li
217.877 283.375 li
221.603 285.506 li
221.603 285.727 li
221.534 285.768 li
f
258.867 309.05 mo
257.999 308.553 li
259.167 307.482 li
257.334 306.424 li
262.31 303.486 li
265.352 305.227 li
265.352 305.448 li
259.252 309.048 li
258.867 309.05 li
f
257.334 306.424 mo
250.009 302.198 li
254.765 299.391 li
255.151 299.39 li
262.31 303.486 li
257.334 306.424 li
.792157 .690196 .552941 rgb
f
217.877 283.375 mo
211.4 279.67 li
211.019 279.67 li
210.992 279.686 li
202.67 274.884 li
209.613 270.787 li
210.163 270.787 li
224.632 279.071 li
224.632 279.385 li
217.877 283.375 li
.74902 .623529 .458824 rgb
f
217.634 283.518 mo
210.992 279.686 li
211.019 279.67 li
211.4 279.67 li
217.877 283.375 li
217.634 283.518 li
.792157 .690196 .552941 rgb
f
80.8242 282.533 mo
74.7684 282.533 li
70.491 280.06 li
70.4868 276.565 li
71.7638 275.829 li
72.1917 279.228 li
75.4746 281.123 li
80.115 281.123 li
83.4006 279.228 li
83.8274 275.828 li
85.1013 276.565 li
85.1013 280.06 li
80.8242 282.533 li
.611765 .6 .588235 rgb
f
84.5961 269.706 mo
83.4006 279.228 li
80.115 281.123 li
79.2024 271.165 li
84.5961 269.706 li
.388235 .180392 .121569 rgb
f
80.6102 272.012 mo
80.115 281.123 li
75.4746 281.123 li
70.9936 269.71 li
80.6102 272.012 li
.498039 .231373 .156863 rgb
f
74.9737 272.012 mo
75.4746 281.123 li
72.1917 279.228 li
70.9936 269.71 li
74.9737 272.012 li
.556863 .294118 .215686 rgb
f
70.9936 266.457 mo
70.9936 269.71 li
74.9737 272.012 li
80.6102 272.012 li
84.5961 269.71 li
84.5961 266.457 li
80.6102 264.156 li
74.9737 264.156 li
70.9936 266.457 li
.0392157 .0313726 .0313726 rgb
f
84.3529 271.643 mo
84.4233 271.082 li
84.3558 271.641 li
84.3529 271.643 li
.611765 .6 .588235 rgb
f
80.5095 273.865 mo
80.6102 272.012 li
83.8827 270.122 li
84.5389 270.125 li
84.4233 271.082 li
84.3529 271.643 li
80.5095 273.865 li
.270588 .12549 .0862745 rgb
f
71.2376 271.649 mo
71.2368 271.648 li
71.0362 270.071 li
71.0389 270.071 li
71.2376 271.649 li
.611765 .6 .588235 rgb
f
80.5077 273.866 mo
75.0774 273.866 li
75.0756 273.865 li
74.9737 272.012 li
80.6102 272.012 li
80.5095 273.865 li
80.5077 273.866 li
.34902 .160784 .109804 rgb
f
75.0756 273.865 mo
71.2376 271.649 li
71.0389 270.071 li
71.6212 270.073 li
74.9737 272.012 li
75.0756 273.865 li
.388235 .203922 .14902 rgb
f
80.6102 272.012 mo
80.6102 272.012 li
74.9737 272.012 li
71.6212 270.073 li
83.8827 270.122 li
80.6102 272.012 li
.027451 .0235294 .0235294 rgb
f
85.0956 269.139 mo
85.0956 270.377 li
80.8242 272.842 li
79.3094 270.695 li
85.0956 269.139 li
cp
.388235 .180392 .121569 rgb
f
80.8167 271.609 mo
80.8242 272.842 li
74.7684 272.842 li
70.491 269.139 li
80.8167 271.609 li
cp
.498039 .231373 .156863 rgb
f
74.7684 271.609 mo
74.7684 272.842 li
70.4868 270.377 li
70.491 269.139 li
74.7684 271.609 li
cp
.556863 .294118 .215686 rgb
f
70.4868 265.644 mo
70.491 269.139 li
74.7684 271.609 li
80.8242 271.609 li
85.1013 269.139 li
85.1013 265.644 li
80.8242 263.172 li
74.7684 263.172 li
70.4868 265.644 li
cp
.796078 .486275 .392157 rgb
f
80.4255 263.725 mo
84.1464 265.873 li
84.1464 267.863 li
80.4255 265.714 li
80.4255 263.725 li
cp
.556863 .294118 .215686 rgb
f
80.4255 265.714 mo
75.1626 265.714 li
75.1626 263.725 li
80.4255 263.725 li
80.4255 265.714 li
cp
.498039 .231373 .156863 rgb
f
75.1626 265.714 mo
71.4432 267.863 li
71.4432 265.873 li
75.1626 263.725 li
75.1626 265.714 li
cp
.388235 .180392 .121569 rgb
f
84.1464 267.863 mo
84.1464 268.908 li
80.4255 271.058 li
75.1626 271.058 li
71.4432 268.908 li
71.4432 267.863 li
75.1626 265.714 li
80.4255 265.714 li
84.1464 267.863 li
cp
.345098 .247059 .207843 rgb
f
74.03 266.936 mo
74.03 267.477 li
74.6921 267.863 li
75.6312 267.863 li
76.2948 267.477 li
76.2948 266.936 li
75.6312 266.551 li
74.6921 266.551 li
74.03 266.936 li
cp
.407843 .32549 .270588 rgb
f
78.8274 269.621 mo
78.8274 270.099 li
79.4121 270.434 li
80.2368 270.434 li
80.8242 270.099 li
80.8242 269.621 li
80.2368 269.287 li
79.4121 269.287 li
78.8274 269.621 li
cp
f
78.2064 266.454 mo
78.2064 266.785 li
78.6135 267.017 li
79.1805 267.017 li
79.5864 266.785 li
79.5864 266.454 li
79.1805 266.221 li
78.6135 266.221 li
78.2064 266.454 li
cp
f
80.7435 268.58 mo
80.7435 268.908 li
81.1449 269.139 li
81.7103 269.139 li
82.113 268.908 li
82.113 268.58 li
81.7103 268.348 li
81.1449 268.348 li
80.7435 268.58 li
cp
f
72.4056 268.259 mo
72.4056 268.666 li
72.8978 268.95 li
73.5966 268.95 li
74.0901 268.666 li
74.0901 268.259 li
73.5966 267.976 li
72.8978 267.976 li
72.4056 268.259 li
cp
f
79.5864 267.193 mo
79.5864 267.595 li
80.0754 267.877 li
80.7786 267.877 li
81.2709 267.595 li
81.2709 267.193 li
80.7786 266.902 li
80.0754 266.902 li
79.5864 267.193 li
cp
f
74.2866 269.549 mo
74.2866 269.875 li
74.6892 270.108 li
75.2562 270.108 li
75.6561 269.875 li
75.6561 269.549 li
75.2562 269.312 li
74.6892 269.312 li
74.2866 269.549 li
cp
f
82.5906 268.219 mo
82.5906 268.416 li
82.8293 268.55 li
83.1648 268.55 li
83.4036 268.416 li
83.4036 268.219 li
83.1648 268.085 li
82.8293 268.085 li
82.5906 268.219 li
cp
f
75.0671 268.647 mo
75.0671 268.84 li
75.303 268.975 li
75.6372 268.975 li
75.8772 268.84 li
75.8772 268.647 li
75.6372 268.505 li
75.303 268.505 li
75.0671 268.647 li
cp
f
77.1473 267.528 mo
77.1473 267.724 li
77.3817 267.859 li
77.7141 267.859 li
77.9529 267.724 li
77.9529 267.528 li
77.7141 267.389 li
77.3817 267.389 li
77.1473 267.528 li
cp
f
76.6083 270.332 mo
76.6083 270.534 li
76.8425 270.667 li
77.1825 270.667 li
77.4153 270.534 li
77.4153 270.332 li
77.1825 270.2 li
76.8425 270.2 li
76.6083 270.332 li
cp
f
79.2156 263.032 mo
79.2156 268.83 li
78.3851 269.312 li
78.092 263.337 li
79.2156 263.032 li
cp
.317647 .2 .0627451 rgb
f
78.3851 263.51 mo
78.3851 269.312 li
77.2043 269.312 li
76.3724 263.032 li
78.3851 263.51 li
cp
.396078 .25098 .0745098 rgb
f
77.2043 263.51 mo
77.2043 269.312 li
76.3724 268.83 li
76.3724 263.032 li
77.2043 263.51 li
cp
.505882 .301961 .101961 rgb
f
76.3724 262.348 mo
76.3724 263.032 li
77.2043 263.51 li
78.3851 263.51 li
79.2156 263.032 li
79.2156 262.348 li
78.3851 261.869 li
77.2043 261.869 li
76.3724 262.348 li
cp
.698039 .427451 .215686 rgb
f
82.2024 253.811 mo
73.3796 253.814 li
67.1337 257.415 li
67.1337 262.515 li
73.3796 266.122 li
82.2024 266.123 li
88.4514 262.518 li
88.4514 257.415 li
82.2024 253.811 li
cp
.258824 .356863 .168627 rgb
f
82.7019 250.684 mo
72.8877 250.684 li
65.9457 254.692 li
65.9529 260.355 li
72.8877 264.362 li
82.7019 264.362 li
89.6351 260.355 li
89.6351 254.692 li
82.7019 250.684 li
cp
.321569 .415686 .227451 rgb
f
83.2014 247.322 mo
72.3879 247.322 li
64.7474 251.738 li
64.7474 257.977 li
72.3879 262.394 li
83.1971 262.394 li
90.842 257.982 li
90.842 251.738 li
83.2014 247.322 li
cp
.368627 .466667 .270588 rgb
f
83.739 243.988 mo
71.8506 243.988 li
63.4421 248.842 li
63.4421 255.702 li
71.8506 260.557 li
83.739 260.56 li
92.1429 255.707 li
92.1429 248.842 li
83.739 243.988 li
cp
.415686 .52549 .309804 rgb
f
62.3934 246.228 mo
62.3934 253.59 li
71.4111 258.802 li
84.1743 258.802 li
93.1962 253.59 li
93.1962 246.228 li
84.1785 241.011 li
71.4111 241.011 li
62.3934 246.228 li
cp
.454902 .576471 .337255 rgb
f
83.739 239.793 mo
71.8506 239.798 li
63.4497 244.647 li
63.4554 251.504 li
71.8506 256.359 li
83.7318 256.359 li
92.1372 251.51 li
92.1372 244.647 li
83.739 239.793 li
cp
.509804 .607843 .356863 rgb
f
83.2014 238.23 mo
72.3879 238.23 li
64.7474 242.642 li
64.7474 248.882 li
72.3879 253.297 li
83.1971 253.297 li
90.842 248.885 li
90.842 242.642 li
83.2014 238.23 li
cp
.541176 .647059 .380392 rgb
f
82.7019 236.938 mo
72.8877 236.939 li
65.9457 240.947 li
65.9529 246.609 li
72.8877 250.615 li
82.7019 250.615 li
89.6351 246.609 li
89.6351 240.947 li
82.7019 236.938 li
cp
.6 .717647 .419608 rgb
f
82.2024 235.575 mo
73.3796 235.575 li
67.1337 239.182 li
67.1337 244.279 li
73.3796 247.886 li
82.2024 247.886 li
88.4514 244.279 li
88.4514 239.182 li
82.2024 235.575 li
cp
.658824 .788235 .458824 rgb
f
81.842 234.666 mo
73.743 234.67 li
68.0184 237.972 li
68.0256 242.643 li
73.743 245.952 li
81.842 245.952 li
87.5637 242.646 li
87.5637 237.972 li
81.842 234.666 li
cp
.705882 .847059 .494118 rgb
f
81.3705 233.529 mo
74.2251 233.529 li
69.1595 236.45 li
69.1638 240.576 li
74.2251 243.496 li
81.3705 243.496 li
86.4285 240.576 li
86.4285 236.45 li
81.3705 233.529 li
cp
.768627 .92549 .537255 rgb
f
244.153 307.43 mo
245.739 305.79 li
248.035 303.947 li
248.316 304.439 li
248.008 306.308 li
246.363 308.292 li
243.896 310.278 li
241.52 313.959 li
239.476 314.67 li
238.402 313.93 li
238.119 313.442 li
240.271 311.059 li
244.153 307.43 li
.188235 .152941 .141176 rgb
f
259.966 317.152 mo
263.251 315 li
265.036 312.175 li
265.321 312.661 li
266.188 315.234 li
264.904 317.277 li
259.804 319.691 li
256.214 321.888 li
253.531 322.374 li
252.059 320.185 li
251.773 319.696 li
254.805 320.013 li
259.966 317.152 li
f
242.197 304.489 mo
244.153 303.414 li
247.412 303.414 li
248.035 303.947 li
247.723 305.816 li
246.079 307.799 li
243.614 309.786 li
241.233 313.47 li
239.194 314.177 li
238.119 313.442 li
238.119 310.266 li
237.835 307.634 li
242.197 304.489 li
.956863 .94902 .937255 rgb
f
240.271 290.637 mo
242.932 305.448 li
240.934 308.566 li
237.589 308.113 li
233.301 293.205 li
240.271 290.637 li
cp
.356863 .6 .654902 rgb
f
257.612 313.449 mo
260.615 313.01 li
263.868 311.948 li
265.036 312.175 li
265.909 314.747 li
264.618 316.785 li
259.52 319.2 li
255.934 321.396 li
253.249 321.888 li
251.773 319.696 li
251.55 316.785 li
253.702 314.705 li
257.612 313.449 li
.956863 .94902 .937255 rgb
f
248.828 301.01 mo
248.828 305.283 li
251.361 316.785 li
256.535 316.785 li
257.669 313.271 li
256.27 298.079 li
251.659 298.706 li
248.828 301.01 li
cp
.47451 .8 .866667 rgb
f
gsave
250.615 333.922 mo
230.915 322.545 li
230.737 320.474 li
233.722 322.196 li
243.614 319.432 li
245.365 320.441 li
246.504 319.786 li
246.504 321.102 li
256.655 326.983 li
257.768 326.34 li
257.768 327.649 li
259.62 328.717 li
250.615 333.922 li
clp
230.737 319.432 mo
259.62 319.432 li
259.62 333.922 li
230.737 333.922 li
cp
.478431 .462745 .439216 rgb
f
grestore
232.317 344.499 mo
220.694 337.789 li
224.945 335.339 li
232.431 339.661 li
234.047 337.357 li
232.431 335.58 li
228.439 333.324 li
234.092 330.065 li
231.429 328.527 li
230.915 322.545 li
250.615 333.922 li
232.317 344.499 li
.611765 .6 .588235 rgb
f
220.694 337.789 mo
210.088 331.665 li
210.088 327.361 li
210.087 327.36 li
210.087 327.357 li
207.153 325.668 li
203.068 323.312 li
202.654 323.55 li
202.491 323.643 li
202.491 322.974 li
202.491 322.971 li
195.47 318.921 li
194.895 319.253 li
194.895 318.582 li
188.582 314.948 li
188.582 314.344 li
224.945 335.339 li
220.694 337.789 li
228.439 333.324 mo
227.522 332.807 li
227.382 328.108 li
231.602 330.543 li
231.429 328.527 li
234.092 330.065 li
228.439 333.324 li
.431373 .411765 .392157 rgb
f
245.365 320.441 mo
243.614 319.432 li
247.126 318.451 li
247.358 318.585 li
246.504 319.079 li
246.504 319.786 li
245.365 320.441 li
.156863 .133333 .121569 rgb
f
256.655 326.983 mo
246.504 321.102 li
249.934 321.102 li
249.934 321.057 li
256.655 324.932 li
257.506 324.443 li
258.621 325.087 li
257.768 325.578 li
257.768 326.34 li
256.655 326.983 li
f
259.62 328.717 mo
257.768 327.649 li
261.228 327.649 li
261.228 327.567 li
261.419 327.677 li
259.62 328.717 li
f
261.228 327.649 mo
257.768 327.649 li
257.768 326.34 li
257.768 325.578 li
261.228 327.567 li
261.228 327.649 li
f
249.934 321.102 mo
246.504 321.102 li
246.504 319.786 li
246.504 319.079 li
249.934 321.057 li
249.934 321.102 li
f
256.655 324.932 mo
249.934 321.057 li
246.504 319.079 li
247.358 318.585 li
253.282 322.005 li
253.531 322.374 li
253.829 322.32 li
257.506 324.443 li
256.655 324.932 li
.388235 .32549 .313725 rgb
f
261.419 327.677 mo
261.228 327.567 li
257.768 325.578 li
258.621 325.087 li
262.263 327.19 li
261.419 327.677 li
f
253.531 322.374 mo
253.282 322.005 li
253.829 322.32 li
253.531 322.374 li
.133333 .105882 .0980392 rgb
f
260.566 323.249 mo
260.241 327.5 li
259.334 328.022 li
259.085 323.652 li
260.566 323.249 li
cp
.227451 .188235 .172549 rgb
f
259.468 323.884 mo
259.334 328.022 li
258.062 328.022 li
256.841 323.249 li
259.468 323.884 li
cp
.305882 .25098 .231373 rgb
f
257.929 323.884 mo
258.062 328.022 li
257.159 327.5 li
256.841 323.249 li
257.929 323.884 li
cp
.384314 .321569 .294118 rgb
f
256.841 322.37 mo
256.841 323.249 li
257.929 323.884 li
259.468 323.884 li
260.566 323.249 li
260.566 322.37 li
259.471 321.732 li
257.929 321.732 li
256.841 322.37 li
cp
.490196 .411765 .392157 rgb
f
234.296 338.441 mo
233.971 342.689 li
233.063 343.21 li
232.816 338.841 li
234.296 338.441 li
cp
.227451 .188235 .172549 rgb
f
233.2 339.077 mo
233.063 343.21 li
231.792 343.21 li
230.569 338.441 li
233.2 339.077 li
cp
.305882 .25098 .231373 rgb
f
231.659 339.077 mo
231.792 343.21 li
230.893 342.689 li
230.569 338.441 li
231.659 339.077 li
cp
.384314 .321569 .294118 rgb
f
230.569 337.556 mo
230.569 338.441 li
231.659 339.077 li
233.2 339.077 li
234.296 338.441 li
234.296 337.556 li
233.201 336.925 li
231.659 336.925 li
230.569 337.556 li
cp
.490196 .411765 .392157 rgb
f
149.424 289.442 mo
149.106 293.686 li
148.197 294.21 li
147.946 289.837 li
149.424 289.442 li
.227451 .188235 .172549 rgb
f
148.325 290.076 mo
148.197 294.21 li
146.924 294.21 li
145.696 289.442 li
148.325 290.076 li
.305882 .25098 .231373 rgb
f
146.79 290.076 mo
146.924 294.21 li
146.024 293.686 li
145.696 289.442 li
146.79 290.076 li
.384314 .321569 .294118 rgb
f
145.696 288.557 mo
145.696 289.442 li
146.79 290.076 li
148.325 290.076 li
149.424 289.442 li
149.424 288.557 li
148.331 287.922 li
146.79 287.922 li
145.696 288.557 li
.490196 .411765 .392157 rgb
f
232.431 339.661 mo
144.675 288.992 li
144.675 285.998 li
232.431 335.58 li
234.047 337.357 li
232.431 339.661 li
.384314 .321569 .294118 rgb
f
261.583 322.807 mo
232.431 339.661 li
232.431 335.58 li
261.583 319.813 li
261.583 322.807 li
cp
.227451 .188235 .172549 rgb
f
149.556 288.816 mo
144.675 285.998 li
139.078 251.264 li
148.421 250.659 li
149.556 288.816 li
.556863 .294118 .215686 rgb
f
155.773 271.042 mo
153.14 271.759 li
149.149 267.948 li
150.89 268.224 li
155.313 268.435 li
155.773 271.042 li
cp
.388235 .180392 .121569 rgb
f
155.773 271.042 mo
150.89 268.224 li
173.688 252.103 li
178.569 254.924 li
169.396 265.272 li
155.773 271.042 li
cp
.796078 .486275 .392157 rgb
f
155.773 271.042 mo
154.03 270.77 li
148.421 250.659 li
143.959 254.082 li
149.556 288.816 li
178.706 271.965 li
180.52 256.527 li
178.569 254.924 li
155.773 271.042 li
.388235 .180392 .121569 rgb
f
143.959 254.082 mo
139.078 251.264 li
143.538 247.843 li
148.421 250.659 li
143.959 254.082 li
cp
.796078 .486275 .392157 rgb
f
231.602 334.739 mo
258.518 319.178 li
258.514 314.976 li
231.602 330.543 li
231.602 334.739 li
cp
.388235 .180392 .121569 rgb
f
201.595 287.023 mo
200.663 289.234 li
200.974 291.304 li
203.071 291.304 li
206.302 289.164 li
210.663 288.157 li
211.914 286.684 li
211.534 285.664 li
208.68 285.354 li
205.733 284.589 li
201.595 287.023 li
cp
.188235 .152941 .141176 rgb
f
200.008 278.75 mo
201.595 287.023 li
204.602 286.57 li
206.128 284.643 li
205.394 274.898 li
200.008 278.75 li
cp
.854902 .847059 .839216 rgb
f
210.326 287.76 mo
212.329 287.949 li
214.405 287.497 li
215.727 287.949 li
215.956 290.176 li
211.686 292.596 li
208.211 294.789 li
205.639 294.521 li
205.425 292.38 li
205.961 290.482 li
210.326 287.76 li
cp
.317647 .266667 .243137 rgb
f
204.885 276.274 mo
205.223 282.245 li
205.961 290.482 li
209.307 290.205 li
210.663 288.157 li
210.438 281.33 li
211.534 269.854 li
204.885 276.274 li
cp
.956863 .94902 .937255 rgb
f
233.722 322.196 mo
155.691 277.171 li
181.134 262.458 li
259.167 307.482 li
247.242 318.418 li
233.722 322.196 li
.556863 .294118 .215686 rgb
f
192.502 266.394 mo
200.824 265.205 li
204.374 265.205 li
206.302 266.394 li
206.978 268.435 li
191.792 272.401 li
192.502 266.394 li
cp
.854902 .847059 .839216 rgb
f
178.867 247.105 mo
176.944 246.503 li
174.791 248.258 li
170.77 262.59 li
172.753 264.641 li
178.475 265.205 li
178.867 247.105 li
cp
.976471 .407843 .419608 rgb
f
176.944 258.97 mo
174.451 263.561 li
176.944 260.731 li
176.944 258.97 li
cp
.717647 .27451 .278431 rgb
f
188.834 249.42 mo
188.834 251.982 li
185.995 252.134 li
181.763 249.638 li
182.667 245.897 li
186.296 246.127 li
188.834 249.42 li
cp
.917647 .756863 .686275 rgb
f
176.434 272.625 mo
176.434 276.803 li
181.008 282.168 li
190.526 285.118 li
199.293 280.13 li
204.885 276.274 li
208.737 275.596 li
211.534 269.854 li
208.812 267.074 li
199.597 268.495 li
191.792 271.476 li
185.036 270.371 li
176.434 272.625 li
cp
.956863 .94902 .937255 rgb
f
182.499 247.864 mo
183.976 249.638 li
188.902 251.037 li
193.097 254 li
195.284 260.668 li
193.832 263.164 li
192.813 269.4 li
193.892 274.385 li
193.301 277.273 li
187.258 278.069 li
181.197 276.707 li
176.434 272.625 li
178.132 267.074 li
174.791 254.61 li
176.263 248.71 li
178.867 247.105 li
182.613 247.105 li
182.499 247.864 li
cp
.976471 .564706 .572549 rgb
f
195.284 235.697 mo
195.284 237.606 li
194.345 240.07 li
193.097 237.094 li
194.511 234.544 li
195.284 235.697 li
cp
.498039 .231373 .156863 rgb
f
194.511 235.511 mo
195.284 239.728 li
194.899 240.357 li
195.674 242.507 li
194.796 243.07 li
193.747 247.326 li
191.168 247.326 li
189.326 244.405 li
191.225 236.303 li
194.511 235.511 li
cp
.917647 .756863 .686275 rgb
f
194.511 235.759 mo
194.648 236.567 li
193.301 238.304 li
193.301 239.661 li
192.152 243.178 li
192.152 246.049 li
192.833 248.656 li
190.412 248.278 li
190.793 249.263 li
186.18 249.638 li
182.289 248.201 li
181.726 247.447 li
181.535 247.714 li
180.363 245.709 li
180.363 244.2 li
179.912 244.498 li
180.174 239.435 li
182.367 234.455 li
186.674 231.655 li
191.436 232.033 li
195.023 233.734 li
195.284 235.697 li
194.511 235.759 li
cp
.576471 .34902 .25098 rgb
f
194.511 235.759 mo
190.34 233.888 li
185.086 234.638 li
190.223 234.487 li
194.511 235.759 li
cp
.505882 .305882 .219608 rgb
f
209.871 251.489 mo
209.871 250.394 li
211.608 248.735 li
212.893 247.105 li
213.309 247.714 li
212.968 248.696 li
214.405 248.39 li
215.99 247.523 li
217.276 247.714 li
218.071 248.39 li
217.501 250.889 li
215.046 253.266 li
211.726 253.759 li
209.871 251.489 li
cp
.917647 .756863 .686275 rgb
f
189.798 259.009 mo
190.34 255.116 li
192.299 253.985 li
194.19 254.022 li
202.279 260.614 li
209.871 251.489 li
211.462 252.168 li
211.854 254.549 li
204.712 266.226 li
202.671 267.074 li
190.944 260.936 li
189.798 259.009 li
cp
.976471 .407843 .419608 rgb
f
232.733 295.514 mo
240.271 290.637 li
240.271 287.598 li
238.912 284.536 li
231.316 285.727 li
229.787 293.205 li
229.787 295.08 li
232.733 295.514 li
cp
.356863 .6 .654902 rgb
f
232.733 286.335 mo
235.394 286.763 li
236.152 286.335 li
237.589 285.814 li
236.471 282.343 li
233.112 282.343 li
232.733 286.335 li
cp
.917647 .756863 .686275 rgb
f
225.62 259.388 mo
224.654 261.396 li
221.587 263.927 li
227.935 268.195 li
230.968 268.045 li
231.45 264.459 li
232.024 262.918 li
232.733 260.979 li
227.162 257.768 li
225.62 259.388 li
cp
f
218.565 263.248 mo
214.939 262.918 li
212.065 267.099 li
213.958 272.091 li
218.565 267.503 li
218.565 263.248 li
cp
.760784 .243137 .180392 rgb
f
231.11 294.604 mo
237.079 293.205 li
250.075 293.205 li
254.38 293.205 li
256.27 298.079 li
252.646 301.71 li
249.167 301.177 li
232.733 307.528 li
225.136 308.812 li
215.918 304.581 li
212.746 299.126 li
212.746 296.218 li
231.11 294.604 li
cp
.47451 .8 .866667 rgb
f
235.225 271.145 mo
231.11 266.989 li
226.009 263.286 li
222.731 262.98 li
218.565 263.248 li
214.633 266.574 li
213.653 273.071 li
213.58 285.389 li
212.369 295.777 li
217.432 301.71 li
229.069 300.878 li
232.166 294.76 li
232.62 289.167 li
235.434 281.533 li
235.225 271.145 li
cp
.956863 .94902 .937255 rgb
f
235.434 258.024 mo
234.209 260.425 li
232.024 262.918 li
232.091 261.207 li
231.855 258.499 li
233.443 256.851 li
235.434 258.024 li
cp
.917647 .756863 .686275 rgb
f
225.817 252.887 mo
225.136 252.887 li
224.654 255.01 li
224.94 256.823 li
225.62 256.994 li
225.817 252.887 li
cp
f
236.172 255.916 mo
236.436 256.523 li
234.586 259.301 li
233.754 259.24 li
233.226 257.768 li
234.942 255.559 li
236.172 255.916 li
cp
f
232.24 247.15 mo
228.164 247.605 li
225.669 251.308 li
225.136 254.857 li
225.439 259.276 li
228.202 260.979 li
232.091 261.207 li
233.754 259.24 li
235.402 256.209 li
236.172 255.916 li
237.079 252.364 li
236.587 250.249 li
235.413 248.514 li
236.55 248.36 li
232.24 247.15 li
cp
.188235 .152941 .141176 rgb
f
248.604 291.015 mo
251.361 290.637 li
253.21 292.49 li
253.854 294.76 li
253.402 295.777 li
252.608 295.135 li
250.677 295.777 li
249.921 295.514 li
248.604 291.015 li
cp
.917647 .756863 .686275 rgb
f
232.317 272.123 mo
230.505 275.982 li
233.226 281.384 li
243.275 293.473 li
249.921 295.514 li
251.361 293.776 li
249.24 291.433 li
246.447 287.352 li
240.25 278.434 li
237.757 272.768 li
235.225 271.145 li
232.317 272.123 li
cp
.760784 .243137 .180392 rgb
f
226.049 292.942 mo
148.015 247.908 li
151.036 245.627 li
229.066 290.65 li
228.192 294.789 li
226.049 292.942 li
cp
.796078 .486275 .392157 rgb
f
231.602 330.543 mo
153.565 285.515 li
148.015 247.908 li
226.049 292.941 li
229.066 301.013 li
231.602 330.543 li
.556863 .294118 .215686 rgb
f
233.722 322.196 mo
229.066 290.65 li
226.049 292.942 li
231.602 330.543 li
259.167 314.601 li
259.167 307.482 li
233.722 322.196 li
cp
.388235 .180392 .121569 rgb
f
227.553 333.846 mo
149.556 288.816 li
144.318 273.496 li
143.959 254.082 li
226.415 295.691 li
227.553 333.846 li
.556863 .294118 .215686 rgb
f
221.953 299.113 mo
143.959 254.082 li
148.421 250.659 li
226.415 295.691 li
221.953 299.113 li
cp
.796078 .486275 .392157 rgb
f
232.431 336.666 mo
227.553 333.846 li
221.953 299.113 li
231.299 298.507 li
232.431 336.666 li
cp
.556863 .294118 .215686 rgb
f
238.652 318.89 mo
236.013 319.609 li
232.027 315.796 li
233.768 316.074 li
238.192 316.282 li
238.652 318.89 li
cp
f
238.652 318.89 mo
233.768 316.074 li
256.566 299.951 li
261.444 302.769 li
252.271 313.121 li
238.652 318.89 li
cp
.796078 .486275 .392157 rgb
f
238.652 318.89 mo
236.905 318.614 li
231.299 298.507 li
226.834 301.931 li
232.431 336.666 li
261.583 319.813 li
263.398 304.378 li
261.444 302.769 li
238.652 318.89 li
cp
.388235 .180392 .121569 rgb
f
226.834 301.931 mo
221.953 299.113 li
226.415 295.691 li
231.299 298.507 li
226.834 301.931 li
cp
.796078 .486275 .392157 rgb
f
143.124 294.831 mo
122.102 306.967 li
204.057 354.28 li
225.077 342.147 li
143.124 294.831 li
.945098 .878431 .713726 rgb
f
204.057 357.705 mo
122.102 310.388 li
122.102 306.967 li
204.057 354.28 li
204.057 357.705 li
.913725 .752941 .529412 rgb
f
225.077 342.147 mo
204.057 354.276 li
204.057 357.705 li
225.077 345.566 li
225.077 342.147 li
cp
.756863 .596078 .34902 rgb
f
143.124 264.976 mo
122.102 277.112 li
125.877 279.286 li
146.897 267.15 li
143.124 264.976 li
.945098 .878431 .713726 rgb
f
125.877 309.147 mo
122.102 306.967 li
122.102 277.112 li
125.877 279.286 li
125.877 309.147 li
.913725 .752941 .529412 rgb
f
146.897 267.15 mo
125.877 279.285 li
125.877 309.147 li
146.897 297.011 li
146.897 267.15 li
.756863 .596078 .34902 rgb
f
161.451 324.044 mo
159.718 323.043 li
161.451 322.039 li
161.451 324.044 li
.658823 .611765 .498039 rgb
f
129.031 302.813 mo
125.877 296.415 li
132.985 300.529 li
129.031 302.813 li
.529412 .415686 .243137 rgb
f
141.918 314.747 mo
127.311 307.994 li
127.311 309.004 li
141.138 316.988 li
141.918 314.747 li
cp
.854902 .847059 .839216 rgb
f
128.106 309.125 mo
135.432 313.356 li
135.432 313.035 li
128.106 308.809 li
128.106 309.125 li
cp
.129412 .101961 .101961 rgb
f
136.277 313.524 mo
136.277 313.842 li
138.108 314.898 li
138.108 314.58 li
136.277 313.524 li
cp
f
141.138 316.988 mo
151.085 311.24 li
151.085 310.228 li
143.569 312.96 li
141.138 315.978 li
141.138 316.988 li
f
141.422 316.271 mo
141.422 316.38 li
151.087 310.795 li
151.087 310.685 li
141.422 316.271 li
0 0 0 rgb
f
141.469 316.798 mo
141.376 316.852 li
141.376 315.843 li
141.469 315.789 li
141.469 316.798 li
cp
f
137.259 302.248 mo
127.311 307.994 li
131.159 309.522 li
138.775 314.152 li
142.195 315.371 li
151.085 310.228 li
137.259 302.248 li
.47451 .8 .866667 rgb
f
128.369 307.388 mo
127.311 307.994 li
141.138 315.978 li
142.195 315.371 li
128.369 307.388 li
cp
.956863 .94902 .937255 rgb
f
141.918 313.373 mo
127.311 306.619 li
127.311 307.628 li
141.138 315.614 li
141.918 313.373 li
cp
.854902 .847059 .839216 rgb
f
128.106 307.753 mo
135.432 311.983 li
135.432 311.659 li
128.106 307.432 li
128.106 307.753 li
cp
.129412 .101961 .101961 rgb
f
136.277 312.151 mo
136.277 312.471 li
138.108 313.524 li
138.108 313.206 li
136.277 312.151 li
cp
f
141.138 315.614 mo
151.085 309.865 li
151.085 308.857 li
143.569 311.586 li
141.138 314.605 li
141.138 315.614 li
f
141.422 314.897 mo
141.422 315.008 li
151.087 309.423 li
151.087 309.311 li
141.422 314.897 li
0 0 0 rgb
f
141.469 315.423 mo
141.376 315.48 li
141.376 314.466 li
141.469 314.413 li
141.469 315.423 li
cp
f
137.259 300.874 mo
127.311 306.619 li
131.159 308.148 li
138.775 312.778 li
142.195 313.996 li
151.085 308.857 li
137.259 300.874 li
.956863 .352941 .313726 rgb
f
128.369 306.012 mo
127.311 306.619 li
141.138 314.605 li
142.195 313.996 li
128.369 306.012 li
cp
.956863 .94902 .937255 rgb
f
141.918 311.987 mo
127.311 305.235 li
127.311 306.244 li
141.138 314.227 li
141.918 311.987 li
cp
.854902 .847059 .839216 rgb
f
128.106 306.365 mo
135.432 310.596 li
135.432 310.275 li
128.106 306.048 li
128.106 306.365 li
cp
.129412 .101961 .101961 rgb
f
136.277 310.763 mo
136.277 311.085 li
138.108 312.14 li
138.108 311.822 li
136.277 310.763 li
cp
f
141.138 314.227 mo
151.085 308.479 li
151.085 307.47 li
143.569 310.199 li
141.138 313.216 li
141.138 314.227 li
f
141.422 313.512 mo
141.422 313.618 li
151.087 308.037 li
151.087 307.924 li
141.422 313.512 li
0 0 0 rgb
f
141.469 314.037 mo
141.376 314.091 li
141.376 313.082 li
141.469 313.027 li
141.469 314.037 li
cp
f
137.259 299.486 mo
127.311 305.235 li
131.159 306.761 li
138.775 311.39 li
142.195 312.61 li
151.085 307.47 li
137.259 299.486 li
.968627 .67451 .317647 rgb
f
128.369 304.624 mo
127.311 305.235 li
141.138 313.216 li
142.195 312.61 li
128.369 304.624 li
cp
.956863 .94902 .937255 rgb
f
141.918 310.559 mo
127.311 303.806 li
127.311 304.816 li
141.138 312.8 li
141.918 310.559 li
.854902 .847059 .839216 rgb
f
128.106 304.939 mo
135.432 309.168 li
135.432 308.848 li
128.106 304.619 li
128.106 304.939 li
cp
.129412 .101961 .101961 rgb
f
136.277 309.336 mo
136.277 309.654 li
138.108 310.713 li
138.108 310.392 li
136.277 309.336 li
cp
f
141.138 312.8 mo
151.085 307.052 li
151.085 306.043 li
143.569 308.772 li
141.138 311.791 li
141.138 312.8 li
f
141.422 312.08 mo
141.422 312.192 li
151.087 306.607 li
151.087 306.497 li
141.422 312.08 li
0 0 0 rgb
f
141.469 312.611 mo
141.376 312.661 li
141.376 311.652 li
141.469 311.601 li
141.469 312.611 li
cp
f
137.259 298.06 mo
127.311 303.806 li
131.159 305.337 li
138.775 309.963 li
142.195 311.18 li
151.085 306.043 li
137.259 298.06 li
.788235 .835294 .45098 rgb
f
128.368 303.197 mo
127.311 303.806 li
141.138 311.791 li
142.195 311.18 li
128.368 303.197 li
.956863 .94902 .937255 rgb
f
143.219 311.402 mo
143.218 311.154 li
150.243 307.095 li
150.457 307.219 li
143.219 311.402 li
143.218 311.042 mo
143.216 310.591 li
143.215 310.591 li
149.754 306.812 li
150.148 307.04 li
143.218 311.042 li
.0901961 .0705882 .0705882 rgb
f
143.218 311.154 mo
143.218 311.042 li
150.148 307.04 li
150.243 307.095 li
143.218 311.154 li
0 0 0 rgb
f
143.215 310.591 mo
129.387 302.608 li
135.946 298.819 li
149.754 306.812 li
143.215 310.591 li
.54902 .584314 .313725 rgb
f
156.451 323.138 mo
141.844 316.385 li
141.844 317.397 li
155.673 325.382 li
156.451 323.138 li
.854902 .847059 .839216 rgb
f
142.642 317.519 mo
149.965 321.746 li
149.965 321.425 li
142.642 317.198 li
142.642 317.519 li
cp
.129412 .101961 .101961 rgb
f
150.812 321.915 mo
150.812 322.233 li
152.641 323.292 li
152.641 322.971 li
150.812 321.915 li
cp
f
151.791 310.634 mo
141.844 316.385 li
145.692 317.911 li
153.307 322.539 li
156.729 323.759 li
165.618 318.619 li
151.791 310.634 li
.776471 .635294 .788235 rgb
f
142.9 315.774 mo
141.844 316.385 li
155.673 324.371 li
156.729 323.759 li
142.9 315.774 li
.956863 .94902 .937255 rgb
f
156.451 321.764 mo
141.844 315.012 li
141.844 316.022 li
155.673 324.005 li
156.451 321.764 li
.854902 .847059 .839216 rgb
f
142.642 316.143 mo
149.965 320.372 li
149.965 320.051 li
142.642 315.823 li
142.642 316.143 li
cp
.129412 .101961 .101961 rgb
f
150.812 320.541 mo
150.812 320.859 li
152.641 321.915 li
152.641 321.6 li
150.812 320.541 li
cp
f
151.791 309.264 mo
141.844 315.012 li
145.692 316.539 li
153.307 321.169 li
156.729 322.388 li
165.618 317.245 li
151.791 309.264 li
.854902 .596078 .211765 rgb
f
142.9 314.402 mo
141.844 315.012 li
155.673 322.996 li
156.729 322.388 li
142.9 314.402 li
.956863 .94902 .937255 rgb
f
156.451 320.377 mo
141.844 313.624 li
141.844 314.635 li
155.673 322.618 li
156.451 320.377 li
.854902 .847059 .839216 rgb
f
142.642 314.755 mo
149.965 318.982 li
149.965 318.664 li
142.642 314.437 li
142.642 314.755 li
cp
.129412 .101961 .101961 rgb
f
150.812 319.15 mo
150.812 319.471 li
152.641 320.53 li
152.641 320.208 li
150.812 319.15 li
cp
f
151.791 307.877 mo
141.844 313.624 li
145.692 315.15 li
153.307 319.782 li
156.729 320.998 li
165.618 315.86 li
151.791 307.877 li
.407843 .686275 .745098 rgb
f
142.9 313.011 mo
141.844 313.624 li
155.673 321.609 li
156.729 320.998 li
142.9 313.011 li
.956863 .94902 .937255 rgb
f
156.451 318.95 mo
141.844 312.197 li
141.844 313.206 li
155.673 321.191 li
156.451 318.95 li
.854902 .847059 .839216 rgb
f
142.642 313.331 mo
149.965 317.558 li
149.965 317.24 li
142.642 313.01 li
142.642 313.331 li
cp
.129412 .101961 .101961 rgb
f
150.812 317.724 mo
150.812 318.045 li
152.641 319.104 li
152.641 318.783 li
150.812 317.724 li
cp
f
151.791 306.448 mo
141.844 312.197 li
145.692 313.723 li
153.307 318.354 li
156.729 319.571 li
165.618 314.434 li
151.791 306.448 li
.760784 .243137 .180392 rgb
f
142.9 311.587 mo
141.844 312.197 li
155.673 320.177 li
156.729 319.571 li
142.9 311.587 li
.956863 .94902 .937255 rgb
f
gsave
155.673 324.369 mo
155.673 324.009 li
156.216 323.695 li
155.673 324.369 li
clp
155.673 323.695 mo
156.216 323.695 li
156.216 324.369 li
155.673 324.369 li
cp
.666667 .662745 .654902 rgb
f
grestore
155.673 322.992 mo
155.673 322.618 li
155.675 322.613 li
155.907 322.479 li
155.907 322.479 li
155.912 322.476 li
156.243 322.285 li
155.673 322.992 li
.666667 .662745 .654902 rgb
f
155.673 322.618 mo
155.673 322.614 li
155.675 322.613 li
155.673 322.618 li
.596078 .592157 .584314 rgb
f
155.673 321.606 mo
155.673 321.192 li
156.298 320.831 li
155.673 321.606 li
.666667 .662745 .654902 rgb
f
156.988 318.543 mo
143.919 310.999 li
150.457 307.219 li
163.788 314.936 li
163.791 314.935 li
163.791 314.937 li
163.791 315.096 li
158.103 317.16 li
156.988 318.543 li
.529412 .168627 .12549 rgb
f
167.339 309.721 mo
158.32 325.345 li
157.86 325.079 li
157.86 314.665 li
166.882 309.455 li
167.339 309.721 li
cp
.615686 .588235 .560784 rgb
f
167.339 320.138 mo
158.32 325.345 li
158.32 314.929 li
167.339 309.721 li
167.339 320.138 li
cp
.454902 .576471 .337255 rgb
f
156.825 315.261 mo
157.86 314.665 li
158.32 314.929 li
157.816 316.388 li
157.457 315.904 li
156.825 315.261 li
cp
.317647 .266667 .243137 rgb
f
157.696 320.377 mo
157.282 325.945 li
156.825 325.681 li
156.825 315.261 li
157.282 315.529 li
157.696 320.377 li
cp
.188235 .152941 .141176 rgb
f
158.32 325.345 mo
157.282 325.945 li
157.282 315.529 li
158.32 314.929 li
158.32 325.345 li
cp
.0392157 .0313726 .0313726 rgb
f
168.062 310.079 mo
159.038 325.703 li
158.584 325.439 li
158.581 315.023 li
167.603 309.814 li
168.062 310.079 li
cp
.615686 .588235 .560784 rgb
f
168.062 320.494 mo
159.038 325.703 li
159.038 315.286 li
168.062 310.079 li
168.062 320.494 li
cp
.647059 .14902 .117647 rgb
f
157.545 315.622 mo
158.581 315.023 li
159.038 315.286 li
158.534 316.745 li
158.177 316.263 li
157.545 315.622 li
cp
.317647 .266667 .243137 rgb
f
158.417 320.734 mo
158.002 326.302 li
157.545 326.038 li
157.545 315.622 li
158.002 315.885 li
158.417 320.734 li
cp
.188235 .152941 .141176 rgb
f
159.038 325.703 mo
158.002 326.302 li
158.002 315.885 li
159.038 315.286 li
159.038 325.703 li
cp
.0392157 .0313726 .0313726 rgb
f
168.615 310.731 mo
159.593 326.355 li
159.133 326.091 li
159.133 315.676 li
168.155 310.464 li
168.615 310.731 li
cp
.615686 .588235 .560784 rgb
f
168.615 321.147 mo
159.593 326.355 li
159.593 315.935 li
168.615 310.731 li
168.615 321.147 li
cp
.533333 .776471 .772549 rgb
f
158.096 316.273 mo
159.133 315.676 li
159.593 315.935 li
159.088 317.397 li
158.727 316.914 li
158.096 316.273 li
cp
.317647 .266667 .243137 rgb
f
158.969 321.386 mo
158.554 326.955 li
158.096 326.69 li
158.096 316.273 li
158.554 316.539 li
158.969 321.386 li
cp
.188235 .152941 .141176 rgb
f
159.593 326.355 mo
158.554 326.955 li
158.554 316.539 li
159.593 315.935 li
159.593 326.355 li
cp
.0392157 .0313726 .0313726 rgb
f
169.336 311.148 mo
160.315 326.772 li
159.858 326.509 li
159.858 316.092 li
168.879 310.885 li
169.336 311.148 li
cp
.615686 .588235 .560784 rgb
f
169.336 321.565 mo
160.315 326.772 li
160.315 316.356 li
169.336 311.148 li
169.336 321.565 li
cp
.976471 .607843 .231373 rgb
f
164.71 322.962 mo
160.914 325.153 li
160.913 325.917 li
164.71 323.722 li
164.71 322.962 li
cp
.956863 .94902 .937255 rgb
f
167.552 316.225 mo
167.552 318.75 li
166.005 321.425 li
163.824 322.685 li
162.28 321.796 li
162.277 319.273 li
163.824 316.599 li
166.005 315.339 li
167.552 316.225 li
cp
.760784 .243137 .180392 rgb
f
168.255 316.413 mo
161.574 320.273 li
161.574 321.611 li
168.255 317.755 li
168.255 316.413 li
cp
.188235 .152941 .141176 rgb
f
168.401 313.71 mo
168.401 314.758 li
167.76 315.868 li
166.856 316.388 li
166.217 316.022 li
166.217 314.973 li
166.856 313.864 li
167.76 313.342 li
168.401 313.71 li
cp
.960784 .890196 .462745 rgb
f
158.823 316.691 mo
159.858 316.092 li
160.315 316.356 li
159.808 317.815 li
159.454 317.334 li
158.823 316.691 li
cp
.317647 .266667 .243137 rgb
f
159.694 321.806 mo
159.28 327.373 li
158.823 327.108 li
158.823 316.691 li
159.28 316.956 li
159.694 321.806 li
cp
.188235 .152941 .141176 rgb
f
160.315 326.772 mo
159.28 327.373 li
159.28 316.956 li
160.315 316.356 li
160.315 326.772 li
cp
.0392157 .0313726 .0313726 rgb
f
170.209 311.365 mo
161.188 326.99 li
160.731 326.727 li
160.731 316.307 li
169.753 311.101 li
170.209 311.365 li
cp
.615686 .588235 .560784 rgb
f
170.209 321.783 mo
161.188 326.99 li
161.188 316.574 li
170.209 311.365 li
170.209 321.783 li
cp
.454902 .576471 .337255 rgb
f
159.694 316.909 mo
160.731 316.307 li
161.188 316.574 li
160.686 318.03 li
160.325 317.551 li
159.694 316.909 li
cp
.317647 .266667 .243137 rgb
f
160.567 322.022 mo
160.151 327.586 li
159.694 327.323 li
159.694 316.909 li
160.151 317.173 li
160.567 322.022 li
cp
.188235 .152941 .141176 rgb
f
161.188 326.99 mo
160.151 327.586 li
160.151 317.173 li
161.188 316.574 li
161.188 326.99 li
cp
.0392157 .0313726 .0313726 rgb
f
160.413 317.262 mo
161.452 316.668 li
161.906 316.931 li
161.405 318.389 li
161.045 317.908 li
160.413 317.262 li
cp
.317647 .266667 .243137 rgb
f
161.285 322.379 mo
160.87 327.947 li
160.413 327.682 li
160.413 317.262 li
160.87 317.527 li
161.285 322.379 li
cp
.188235 .152941 .141176 rgb
f
161.906 327.348 mo
160.87 327.947 li
160.87 317.527 li
161.906 316.931 li
161.906 327.348 li
cp
.0392157 .0313726 .0313726 rgb
f
171.48 322.789 mo
162.461 328 li
162.461 317.583 li
171.48 312.373 li
171.48 322.789 li
cp
.533333 .776471 .772549 rgb
f
160.964 317.919 mo
162.006 317.32 li
162.461 317.583 li
161.956 319.039 li
161.599 318.56 li
160.964 317.919 li
cp
.317647 .266667 .243137 rgb
f
161.84 323.031 mo
161.423 328.599 li
160.964 328.332 li
160.964 317.919 li
161.423 318.182 li
161.84 323.031 li
cp
.188235 .152941 .141176 rgb
f
162.461 328 mo
161.423 328.599 li
161.423 318.182 li
162.461 317.583 li
162.461 328 li
cp
.0392157 .0313726 .0313726 rgb
f
161.752 318.112 mo
162.791 317.513 li
163.25 317.773 li
162.744 319.235 li
162.384 318.757 li
161.752 318.112 li
cp
.317647 .266667 .243137 rgb
f
162.625 323.224 mo
162.209 328.792 li
161.752 328.531 li
161.752 318.112 li
162.209 318.379 li
162.625 323.224 li
cp
.188235 .152941 .141176 rgb
f
163.25 328.193 mo
162.209 328.792 li
162.209 318.379 li
163.25 317.773 li
163.25 328.193 li
cp
.0392157 .0313726 .0313726 rgb
f
162.473 318.471 mo
163.51 317.872 li
163.97 318.134 li
163.463 319.591 li
163.104 319.111 li
162.473 318.471 li
cp
.317647 .266667 .243137 rgb
f
163.346 323.583 mo
162.93 329.149 li
162.473 328.889 li
162.473 318.471 li
162.93 318.733 li
163.346 323.583 li
cp
.188235 .152941 .141176 rgb
f
163.967 328.549 mo
162.93 329.149 li
162.93 318.733 li
163.97 318.134 li
163.967 328.549 li
cp
.0392157 .0313726 .0313726 rgb
f
163.028 319.121 mo
164.064 318.522 li
164.521 318.789 li
164.017 320.245 li
163.657 319.766 li
163.028 319.121 li
cp
.317647 .266667 .243137 rgb
f
163.9 324.234 mo
163.482 329.801 li
163.028 329.538 li
163.028 319.121 li
163.482 319.385 li
163.9 324.234 li
cp
.188235 .152941 .141176 rgb
f
164.521 329.202 mo
163.482 329.801 li
163.482 319.385 li
164.521 318.789 li
164.521 329.202 li
cp
.0392157 .0313726 .0313726 rgb
f
146.899 280.855 mo
125.877 292.99 li
163.788 314.936 li
184.81 302.801 li
146.899 280.855 li
.945098 .878431 .713726 rgb
f
163.788 318.358 mo
125.877 296.415 li
125.877 292.99 li
163.788 314.936 li
163.788 318.358 li
cp
.913725 .752941 .529412 rgb
f
129.285 286.207 mo
125.877 279.286 li
133.572 283.729 li
129.387 286.146 li
129.388 286.147 li
129.285 286.207 li
.529412 .415686 .243137 rgb
f
163.791 308.864 mo
159.787 306.546 li
163.79 304.231 li
163.791 308.069 li
163.791 308.864 li
.658823 .611765 .498039 rgb
f
141.918 298.288 mo
127.311 291.532 li
127.311 292.548 li
141.138 300.529 li
141.918 298.288 li
cp
.854902 .847059 .839216 rgb
f
128.106 292.666 mo
135.432 296.894 li
135.432 296.576 li
128.106 292.348 li
128.106 292.666 li
cp
.129412 .101961 .101961 rgb
f
136.277 297.064 mo
136.277 297.386 li
138.108 298.442 li
138.108 298.121 li
136.277 297.064 li
cp
f
141.138 300.529 mo
151.085 294.781 li
151.085 293.769 li
143.569 296.501 li
141.138 299.519 li
141.138 300.529 li
f
141.422 299.809 mo
141.422 299.919 li
151.087 294.339 li
151.087 294.225 li
141.422 299.809 li
0 0 0 rgb
f
141.469 300.339 mo
141.376 300.396 li
141.376 299.383 li
141.469 299.33 li
141.469 300.339 li
cp
f
137.259 285.786 mo
127.311 291.532 li
131.159 293.063 li
138.775 297.694 li
142.195 298.912 li
151.085 293.769 li
137.259 285.786 li
.47451 .8 .866667 rgb
f
128.369 290.926 mo
127.311 291.532 li
141.138 299.519 li
142.195 298.912 li
128.369 290.926 li
cp
.956863 .94902 .937255 rgb
f
141.918 296.914 mo
127.311 290.161 li
127.311 291.172 li
141.138 299.155 li
141.918 296.914 li
cp
.854902 .847059 .839216 rgb
f
128.106 291.292 mo
135.432 295.524 li
135.432 295.203 li
128.106 290.976 li
128.106 291.292 li
cp
.129412 .101961 .101961 rgb
f
136.277 295.694 mo
136.277 296.012 li
138.108 297.065 li
138.108 296.75 li
136.277 295.694 li
cp
f
141.138 299.155 mo
151.085 293.409 li
151.085 292.399 li
143.569 295.127 li
141.138 298.145 li
141.138 299.155 li
f
141.422 298.438 mo
141.422 298.546 li
151.087 292.965 li
151.087 292.852 li
141.422 298.438 li
0 0 0 rgb
f
141.469 298.965 mo
141.376 299.019 li
141.376 298.007 li
141.469 297.957 li
141.469 298.965 li
cp
f
137.259 284.412 mo
127.311 290.161 li
131.159 291.689 li
138.775 296.316 li
142.195 297.54 li
151.085 292.399 li
137.259 284.412 li
.956863 .352941 .313726 rgb
f
128.369 289.555 mo
127.311 290.161 li
141.138 298.145 li
142.195 297.54 li
128.369 289.555 li
cp
.956863 .94902 .937255 rgb
f
141.918 295.527 mo
127.311 288.774 li
127.311 289.785 li
141.138 297.767 li
141.918 295.527 li
cp
.854902 .847059 .839216 rgb
f
128.106 289.909 mo
135.432 294.135 li
135.432 293.818 li
128.106 289.589 li
128.106 289.909 li
cp
.129412 .101961 .101961 rgb
f
136.277 294.304 mo
136.277 294.625 li
138.108 295.681 li
138.108 295.363 li
136.277 294.304 li
cp
f
141.138 297.767 mo
151.085 292.02 li
151.085 291.011 li
143.569 293.737 li
141.138 296.758 li
141.138 297.767 li
f
141.422 297.053 mo
141.422 297.16 li
151.087 291.575 li
151.087 291.463 li
141.422 297.053 li
0 0 0 rgb
f
141.469 297.578 mo
141.376 297.632 li
141.376 296.621 li
141.469 296.569 li
141.469 297.578 li
cp
f
137.259 283.024 mo
127.311 288.774 li
131.159 290.3 li
138.775 294.932 li
142.195 296.151 li
151.085 291.011 li
137.259 283.024 li
.968627 .67451 .317647 rgb
f
128.369 288.165 mo
127.311 288.774 li
141.138 296.758 li
142.195 296.151 li
128.369 288.165 li
cp
.956863 .94902 .937255 rgb
f
141.918 294.1 mo
127.311 287.347 li
127.311 288.36 li
141.138 296.341 li
141.918 294.1 li
.854902 .847059 .839216 rgb
f
128.106 288.481 mo
135.432 292.709 li
135.432 292.388 li
128.106 288.16 li
128.106 288.481 li
cp
.129412 .101961 .101961 rgb
f
136.277 292.877 mo
136.277 293.195 li
138.108 294.254 li
138.108 293.933 li
136.277 292.877 li
cp
f
141.138 296.341 mo
151.085 290.593 li
151.085 289.581 li
143.569 292.313 li
141.138 295.331 li
141.138 296.341 li
f
141.422 295.624 mo
141.422 295.728 li
151.087 290.148 li
151.087 290.04 li
141.422 295.624 li
0 0 0 rgb
f
141.469 296.152 mo
141.376 296.205 li
141.376 295.192 li
141.469 295.139 li
141.469 296.152 li
cp
f
137.259 281.601 mo
127.311 287.347 li
131.159 288.875 li
138.775 293.504 li
142.195 294.721 li
151.085 289.581 li
137.259 281.601 li
.427451 .313726 .411765 rgb
f
128.368 286.738 mo
127.311 287.347 li
141.138 295.331 li
142.195 294.721 li
128.368 286.738 li
.956863 .94902 .937255 rgb
f
133.573 283.73 mo
133.572 283.729 li
136.534 282.019 li
136.534 282.019 li
133.573 283.73 li
.529412 .415686 .243137 rgb
f
129.388 286.147 mo
129.387 286.146 li
133.572 283.729 li
133.573 283.73 li
129.388 286.147 li
.368627 .290196 .168627 rgb
f
143.219 294.943 mo
143.218 294.691 li
150.85 290.285 li
151.066 290.409 li
143.919 294.538 li
143.219 294.943 li
143.218 294.586 mo
143.216 294.133 li
143.215 294.132 li
150.359 290.001 li
150.757 290.231 li
143.218 294.586 li
.0901961 .0705882 .0705882 rgb
f
143.218 294.691 mo
143.218 294.586 li
150.757 290.231 li
150.85 290.285 li
143.218 294.691 li
0 0 0 rgb
f
143.215 294.132 mo
129.388 286.147 li
133.573 283.73 li
136.534 282.019 li
150.359 290.001 li
143.215 294.132 li
.298039 .219608 .286274 rgb
f
156.451 306.679 mo
141.844 299.926 li
141.844 300.935 li
155.673 308.922 li
156.451 306.679 li
.854902 .847059 .839216 rgb
f
142.642 301.06 mo
149.965 305.287 li
149.965 304.964 li
142.642 300.739 li
142.642 301.06 li
cp
.129412 .101961 .101961 rgb
f
150.812 305.454 mo
150.812 305.776 li
152.641 306.833 li
152.641 306.512 li
150.812 305.454 li
cp
f
151.791 294.178 mo
141.844 299.926 li
145.692 301.452 li
153.307 306.083 li
156.729 307.3 li
165.618 302.161 li
151.791 294.178 li
.776471 .635294 .788235 rgb
f
142.9 299.316 mo
141.844 299.926 li
155.673 307.909 li
156.729 307.3 li
142.9 299.316 li
.956863 .94902 .937255 rgb
f
156.451 305.305 mo
141.844 298.552 li
141.844 299.562 li
155.673 307.549 li
156.451 305.305 li
.854902 .847059 .839216 rgb
f
142.642 299.686 mo
149.965 303.913 li
149.965 303.592 li
142.642 299.365 li
142.642 299.686 li
cp
.129412 .101961 .101961 rgb
f
150.812 304.082 mo
150.812 304.399 li
152.641 305.459 li
152.641 305.138 li
150.812 304.082 li
cp
f
151.791 292.802 mo
141.844 298.552 li
145.692 300.08 li
153.307 304.709 li
156.729 305.926 li
165.618 300.786 li
151.791 292.802 li
.854902 .596078 .211765 rgb
f
142.9 297.94 mo
141.844 298.552 li
155.673 306.537 li
156.729 305.926 li
142.9 297.94 li
.956863 .94902 .937255 rgb
f
156.451 303.918 mo
141.844 297.165 li
141.844 298.177 li
155.673 306.16 li
156.451 303.918 li
.854902 .847059 .839216 rgb
f
142.642 298.296 mo
149.965 302.526 li
149.965 302.205 li
142.642 297.978 li
142.642 298.296 li
cp
.129412 .101961 .101961 rgb
f
150.812 302.695 mo
150.812 303.014 li
152.641 304.072 li
152.641 303.75 li
150.812 302.695 li
cp
f
155.673 306.16 mo
165.618 300.411 li
165.618 299.401 li
158.103 302.13 li
155.673 305.148 li
155.673 306.16 li
f
155.956 305.44 mo
155.956 305.548 li
165.622 299.965 li
165.622 299.854 li
155.956 305.44 li
0 0 0 rgb
f
151.791 291.415 mo
141.844 297.165 li
145.692 298.691 li
153.307 303.324 li
156.729 304.539 li
165.618 299.401 li
151.791 291.415 li
.407843 .686275 .745098 rgb
f
142.9 296.555 mo
141.844 297.165 li
155.673 305.148 li
156.729 304.539 li
142.9 296.555 li
.956863 .94902 .937255 rgb
f
156.451 302.489 mo
141.844 295.738 li
141.844 296.75 li
155.673 304.731 li
156.451 302.489 li
.854902 .847059 .839216 rgb
f
142.642 296.872 mo
149.965 301.096 li
149.965 300.778 li
142.642 296.551 li
142.642 296.872 li
cp
.129412 .101961 .101961 rgb
f
150.812 301.268 mo
150.812 301.587 li
152.641 302.645 li
152.641 302.323 li
150.812 301.268 li
cp
f
155.673 304.731 mo
165.618 298.987 li
165.618 297.972 li
158.103 300.704 li
155.673 303.721 li
155.673 304.731 li
f
155.956 304.013 mo
155.956 304.121 li
165.622 298.539 li
165.622 298.427 li
155.956 304.013 li
0 0 0 rgb
f
151.791 289.99 mo
141.844 295.738 li
145.692 297.264 li
153.307 301.895 li
156.729 303.112 li
165.618 297.972 li
151.791 289.99 li
.211765 .576471 .572549 rgb
f
142.9 295.128 mo
141.844 295.738 li
155.673 303.721 li
156.729 303.112 li
142.9 295.128 li
.956863 .94902 .937255 rgb
f
155.673 307.908 mo
155.673 307.549 li
155.674 307.548 li
155.907 307.413 li
155.907 307.413 li
155.922 307.404 li
156.216 307.234 li
155.673 307.908 li
.666667 .662745 .654902 rgb
f
155.673 307.549 mo
155.673 307.548 li
155.674 307.548 li
155.673 307.549 li
155.673 306.54 mo
155.673 306.537 li
155.678 306.534 li
155.673 306.54 li
.596078 .592157 .584314 rgb
f
155.673 306.537 mo
155.673 306.16 li
156.243 305.831 li
155.678 306.534 li
155.673 306.537 li
.666667 .662745 .654902 rgb
f
143.919 294.538 mo
143.919 294.538 li
151.066 290.409 li
151.066 290.409 li
143.92 294.538 li
.0627451 .0509804 .0509804 rgb
f
155.673 306.16 mo
155.673 305.148 li
155.907 305.013 li
155.907 306.018 li
155.997 305.973 li
155.997 305.524 li
156.916 304.994 li
156.243 305.831 li
155.673 306.16 li
155.997 305.416 mo
155.997 304.961 li
156.729 304.539 li
157.76 303.943 li
157.079 304.791 li
155.997 305.416 li
159.167 303.13 mo
165.618 299.401 li
165.618 299.857 li
161.281 302.363 li
159.167 303.13 li
161.793 302.177 mo
165.618 299.968 li
165.618 300.121 li
163.788 301.177 li
163.791 301.178 li
163.791 301.452 li
161.793 302.177 li
.0901961 .0705882 .0705882 rgb
f
155.997 305.524 mo
155.997 305.416 li
157.079 304.791 li
156.916 304.994 li
155.997 305.524 li
161.281 302.363 mo
165.618 299.857 li
165.618 299.968 li
161.793 302.177 li
161.281 302.363 li
0 0 0 rgb
f
156.729 304.539 mo
156.729 304.539 li
156.367 304.33 li
165.259 299.194 li
165.618 299.401 li
159.167 303.13 li
158.103 303.516 li
157.76 303.943 li
156.729 304.539 li
.286274 .478431 .521569 rgb
f
155.673 305.148 mo
155.673 304.731 li
155.907 304.596 li
155.907 304.596 li
155.924 304.586 li
156.367 304.33 li
156.729 304.539 li
155.997 304.961 li
155.997 304.956 li
155.907 305.01 li
155.907 305.013 li
155.673 305.148 li
.666667 .662745 .654902 rgb
f
155.673 304.731 mo
155.673 303.721 li
155.907 303.586 li
155.907 304.596 li
155.673 304.731 li
155.924 304.586 mo
155.997 304.542 li
155.997 304.098 li
165.385 298.676 li
165.618 298.81 li
165.618 298.987 li
165.258 299.194 li
165.259 299.194 li
156.367 304.33 li
155.924 304.586 li
155.997 303.989 mo
155.997 303.535 li
156.729 303.112 li
156.811 303.065 li
157.749 302.523 li
157.748 302.523 li
164.892 298.392 li
165.289 298.62 li
155.997 303.989 li
.0901961 .0705882 .0705882 rgb
f
155.997 304.098 mo
155.997 303.989 li
165.289 298.62 li
165.385 298.676 li
155.997 304.098 li
0 0 0 rgb
f
156.729 303.112 mo
156.729 303.112 li
156.811 303.065 li
156.729 303.112 li
157.748 302.523 mo
143.919 294.538 li
151.066 290.409 li
164.892 298.392 li
157.748 302.523 li
.14902 .403922 .4 rgb
f
155.673 303.721 mo
155.907 303.586 li
155.907 303.586 li
155.673 303.721 li
155.997 303.535 mo
155.997 303.535 li
156.729 303.112 li
156.729 303.112 li
155.997 303.535 li
.666667 .662745 .654902 rgb
f
184.81 289.045 mo
163.788 301.177 li
167.56 303.357 li
188.582 291.225 li
184.81 289.045 li
.945098 .878431 .713726 rgb
f
188.582 291.225 mo
167.56 303.354 li
167.56 333.211 li
188.582 321.075 li
188.582 291.225 li
.756863 .596078 .34902 rgb
f
176.412 321.157 mo
173.547 315.396 li
173.547 314.249 li
179.308 310.139 li
187.404 314.814 li
186.615 315.27 li
186.615 315.792 li
186.156 315.531 li
184.887 316.26 li
184.887 316.791 li
184.428 316.53 li
183.168 317.259 li
183.168 317.785 li
182.709 317.52 li
181.44 318.258 li
181.44 318.778 li
180.99 318.519 li
179.721 319.248 li
179.721 319.77 li
179.262 319.509 li
177.993 320.247 li
177.993 320.769 li
177.534 320.508 li
176.412 321.157 li
171.194 310.663 mo
167.562 303.36 li
167.562 303.358 li
175.705 308.059 li
171.194 310.663 li
.529412 .415686 .243137 rgb
f
181.109 326.548 mo
181.109 332.798 li
179.839 333.532 li
179.839 327.279 li
181.109 326.548 li
cp
.776471 .556863 .290196 rgb
f
179.388 327.543 mo
179.388 333.796 li
178.117 334.525 li
178.117 328.272 li
179.388 327.543 li
cp
f
170.834 330.683 mo
177.388 334.464 li
176.203 336.28 li
169.654 331.367 li
170.834 330.683 li
.960784 .890196 .462745 rgb
f
177.388 334.464 mo
177.388 335.598 li
176.203 336.28 li
176.203 335.145 li
177.388 334.464 li
.776471 .556863 .290196 rgb
f
176.203 335.145 mo
176.203 336.28 li
169.654 332.498 li
169.654 331.367 li
176.203 335.145 li
.866667 .721569 .356863 rgb
f
170.642 324.485 mo
177.662 328.534 li
176.392 335.523 li
169.378 325.218 li
170.642 324.485 li
cp
.960784 .890196 .462745 rgb
f
176.392 329.27 mo
176.392 335.523 li
169.378 331.467 li
169.378 325.218 li
176.392 329.27 li
cp
.866667 .721569 .356863 rgb
f
175.765 329.822 mo
175.765 334.693 li
170.004 331.361 li
170.004 326.495 li
175.765 329.822 li
cp
.760784 .243137 .180392 rgb
f
185.322 331.086 mo
191.874 334.87 li
190.689 336.686 li
184.141 331.77 li
185.322 331.086 li
.960784 .890196 .462745 rgb
f
191.874 334.87 mo
191.874 336.002 li
190.689 336.686 li
190.689 335.551 li
191.874 334.87 li
.776471 .556863 .290196 rgb
f
190.689 335.551 mo
190.689 336.686 li
184.141 332.902 li
184.141 331.77 li
190.689 335.551 li
.866667 .721569 .356863 rgb
f
202.491 322.974 mo
195.471 318.924 li
194.895 319.257 li
194.895 319.253 li
195.47 318.921 li
202.491 322.971 li
202.491 322.974 li
.301961 .286274 .27451 rgb
f
183.601 332.081 mo
190.151 335.861 li
188.966 337.681 li
182.417 332.763 li
183.601 332.081 li
.960784 .890196 .462745 rgb
f
190.151 335.861 mo
190.151 336.997 li
188.966 337.681 li
188.966 336.544 li
190.151 335.861 li
.776471 .556863 .290196 rgb
f
188.966 336.544 mo
188.966 337.681 li
182.417 333.897 li
182.417 332.763 li
188.966 336.544 li
.866667 .721569 .356863 rgb
f
183.406 325.887 mo
190.427 329.933 li
189.157 336.919 li
182.143 326.615 li
183.406 325.887 li
cp
.960784 .890196 .462745 rgb
f
190.427 329.933 mo
190.427 336.19 li
189.157 336.919 li
189.157 330.666 li
190.427 329.933 li
.776471 .556863 .290196 rgb
f
189.157 330.666 mo
189.157 336.919 li
182.143 332.866 li
182.143 326.615 li
189.157 330.666 li
.866667 .721569 .356863 rgb
f
188.525 331.218 mo
188.525 336.09 li
182.767 332.762 li
182.767 327.896 li
188.525 331.218 li
cp
.760784 .243137 .180392 rgb
f
181.875 333.077 mo
188.427 336.858 li
187.243 338.677 li
180.694 333.758 li
181.875 333.077 li
.960784 .890196 .462745 rgb
f
188.427 336.858 mo
188.427 337.993 li
187.243 338.677 li
187.243 337.542 li
188.427 336.858 li
.227451 .376471 .388235 rgb
f
187.243 337.542 mo
187.243 338.677 li
180.694 334.892 li
180.694 333.758 li
187.243 337.542 li
.211765 .576471 .572549 rgb
f
181.683 326.883 mo
188.702 330.928 li
187.433 337.917 li
180.419 327.609 li
181.683 326.883 li
.533333 .776471 .772549 rgb
f
188.702 330.928 mo
188.702 337.183 li
187.433 337.917 li
187.433 331.663 li
188.702 330.928 li
.227451 .376471 .388235 rgb
f
187.433 331.663 mo
187.433 337.917 li
180.419 333.862 li
180.419 327.609 li
187.433 331.663 li
.211765 .576471 .572549 rgb
f
186.804 332.217 mo
186.804 337.086 li
181.044 333.755 li
181.044 328.889 li
186.804 332.217 li
cp
.760784 .243137 .180392 rgb
f
180.149 334.072 mo
186.701 337.852 li
185.518 339.672 li
178.969 334.753 li
180.149 334.072 li
.960784 .890196 .462745 rgb
f
186.701 337.852 mo
186.701 338.99 li
185.518 339.672 li
185.518 338.535 li
186.701 337.852 li
.776471 .556863 .290196 rgb
f
185.518 338.535 mo
185.518 339.672 li
178.969 335.891 li
178.969 334.753 li
185.518 338.535 li
.866667 .721569 .356863 rgb
f
185.518 339.066 mo
185.518 339.066 li
185.518 338.8 li
185.71 338.911 li
186.294 338.574 li
186.294 338.619 li
185.518 339.066 li
.541176 .388235 .203922 rgb
f
185.518 339.066 mo
185.256 338.915 li
185.256 338.648 li
185.518 338.8 li
185.518 339.066 li
183.987 338.182 mo
178.969 335.281 li
178.969 335.011 li
183.987 337.915 li
183.987 338.182 li
.603922 .501961 .25098 rgb
f
179.962 327.878 mo
186.977 331.927 li
185.71 338.911 li
178.696 328.606 li
179.962 327.878 li
.960784 .890196 .462745 rgb
f
186.977 331.927 mo
186.977 338.18 li
185.71 338.911 li
185.71 332.656 li
186.977 331.927 li
.776471 .556863 .290196 rgb
f
185.71 332.656 mo
185.71 338.911 li
178.696 334.854 li
178.696 328.606 li
185.71 332.656 li
.866667 .721569 .356863 rgb
f
185.078 333.211 mo
185.078 338.081 li
179.32 334.75 li
179.32 329.884 li
185.078 333.211 li
cp
.760784 .243137 .180392 rgb
f
178.425 335.068 mo
184.979 338.848 li
183.797 340.668 li
177.247 335.748 li
178.425 335.068 li
.960784 .890196 .462745 rgb
f
184.979 338.848 mo
184.979 339.982 li
183.797 340.668 li
183.797 339.529 li
184.979 338.848 li
.454902 .576471 .337255 rgb
f
183.797 339.529 mo
183.797 340.668 li
177.247 336.883 li
177.247 335.748 li
183.797 339.529 li
.6 .678431 .384314 rgb
f
177.247 335.748 mo
177.247 335.679 li
177.388 335.598 li
177.388 335.552 li
177.488 335.609 li
177.247 335.748 li
.658823 .611765 .498039 rgb
f
177.247 335.679 mo
177.247 335.47 li
177.388 335.552 li
177.388 335.598 li
177.247 335.679 li
.541176 .388235 .203922 rgb
f
183.797 339.529 mo
177.247 335.748 li
177.488 335.609 li
183.797 339.254 li
183.987 339.144 li
183.987 339.42 li
183.797 339.529 li
.670588 .619608 .321569 rgb
f
183.797 340.066 mo
183.797 340.066 li
183.797 339.529 li
183.987 339.42 li
183.987 339.904 li
184.979 339.332 li
184.979 339.36 li
184.979 339.377 li
183.797 340.066 li
.317647 .403922 .235294 rgb
f
183.797 340.066 mo
177.247 336.276 li
177.247 335.748 li
183.797 339.529 li
183.797 340.066 li
.419608 .47451 .266667 rgb
f
178.236 328.87 mo
185.256 332.919 li
183.987 339.904 li
176.974 329.602 li
178.236 328.87 li
cp
.788235 .835294 .45098 rgb
f
185.256 332.919 mo
185.256 339.172 li
183.987 339.904 li
183.987 333.654 li
185.256 332.919 li
.454902 .576471 .337255 rgb
f
183.987 333.654 mo
183.987 339.904 li
176.974 335.851 li
176.974 329.602 li
183.987 333.654 li
cp
.6 .678431 .384314 rgb
f
183.356 334.206 mo
183.356 339.074 li
177.598 335.744 li
177.598 330.88 li
183.356 334.206 li
cp
.211765 .576471 .572549 rgb
f
201.538 330.5 mo
208.091 334.282 li
206.903 336.102 li
200.354 331.183 li
201.538 330.5 li
.960784 .890196 .462745 rgb
f
208.091 334.282 mo
208.091 335.419 li
206.903 336.102 li
206.903 334.966 li
208.091 334.282 li
.776471 .556863 .290196 rgb
f
206.903 334.966 mo
206.903 336.102 li
200.354 332.317 li
200.354 331.183 li
206.903 334.966 li
.866667 .721569 .356863 rgb
f
199.812 331.496 mo
206.367 335.277 li
205.181 337.096 li
198.631 332.18 li
199.812 331.496 li
.960784 .890196 .462745 rgb
f
206.367 335.277 mo
206.367 336.418 li
205.181 337.096 li
205.181 335.96 li
206.367 335.277 li
.976471 .541176 .105882 rgb
f
205.181 335.96 mo
205.181 337.096 li
198.631 333.311 li
198.631 332.18 li
205.181 335.96 li
.968627 .67451 .317647 rgb
f
199.621 325.303 mo
206.639 329.349 li
205.369 336.337 li
198.359 326.034 li
199.621 325.303 li
.968627 .803922 .560784 rgb
f
206.639 329.349 mo
206.639 335.602 li
205.369 336.337 li
205.369 330.083 li
206.639 329.349 li
.976471 .541176 .105882 rgb
f
205.369 330.083 mo
205.369 336.337 li
198.359 332.281 li
198.359 326.034 li
205.369 330.083 li
.968627 .67451 .317647 rgb
f
198.088 332.494 mo
204.641 336.272 li
203.456 338.091 li
196.91 333.173 li
198.088 332.494 li
.960784 .890196 .462745 rgb
f
204.641 336.272 mo
204.641 337.41 li
203.456 338.091 li
203.456 336.954 li
204.641 336.272 li
.976471 .541176 .105882 rgb
f
203.456 336.954 mo
203.456 338.091 li
196.91 334.307 li
196.91 333.173 li
203.456 336.954 li
.968627 .67451 .317647 rgb
f
197.896 326.295 mo
204.917 330.346 li
203.647 337.329 li
196.633 327.025 li
197.896 326.295 li
.968627 .803922 .560784 rgb
f
204.917 330.346 mo
204.917 336.597 li
203.647 337.329 li
203.647 331.076 li
204.917 330.346 li
.976471 .541176 .105882 rgb
f
203.647 331.076 mo
203.647 337.329 li
196.633 333.276 li
196.633 327.025 li
203.647 331.076 li
.968627 .67451 .317647 rgb
f
203.018 331.631 mo
203.018 336.502 li
197.257 333.172 li
197.257 328.306 li
203.018 331.631 li
.760784 .243137 .180392 rgb
f
196.365 333.487 mo
202.919 337.265 li
201.734 339.09 li
195.184 334.171 li
196.365 333.487 li
.960784 .890196 .462745 rgb
f
202.919 337.265 mo
202.919 338.406 li
201.734 339.09 li
201.734 337.949 li
202.919 337.265 li
.227451 .376471 .388235 rgb
f
201.734 337.949 mo
201.734 339.09 li
195.184 335.305 li
195.184 334.171 li
201.734 337.949 li
.211765 .576471 .572549 rgb
f
196.173 327.291 mo
203.193 331.339 li
201.923 338.327 li
194.911 328.022 li
196.173 327.291 li
.533333 .776471 .772549 rgb
f
203.193 331.339 mo
203.193 337.593 li
201.923 338.327 li
201.923 332.07 li
203.193 331.339 li
.227451 .376471 .388235 rgb
f
201.923 332.07 mo
201.923 338.327 li
194.911 334.271 li
194.911 328.022 li
201.923 332.07 li
.211765 .576471 .572549 rgb
f
201.296 332.624 mo
201.296 337.496 li
195.535 334.165 li
195.535 329.296 li
201.296 332.624 li
.760784 .243137 .180392 rgb
f
194.642 334.482 mo
201.196 338.264 li
200.011 340.083 li
193.459 335.164 li
194.642 334.482 li
.960784 .890196 .462745 rgb
f
201.196 338.264 mo
201.196 339.4 li
200.011 340.083 li
200.011 338.945 li
201.196 338.264 li
.0392157 .0313726 .0313726 rgb
f
200.011 338.945 mo
200.011 340.083 li
193.459 336.297 li
193.459 335.164 li
200.011 338.945 li
.188235 .152941 .141176 rgb
f
194.449 328.285 mo
201.47 332.337 li
200.2 339.319 li
193.186 329.018 li
194.449 328.285 li
.317647 .266667 .243137 rgb
f
201.47 332.337 mo
201.47 338.587 li
200.2 339.319 li
200.2 333.065 li
201.47 332.337 li
.0392157 .0313726 .0313726 rgb
f
200.2 333.065 mo
200.2 339.319 li
193.186 335.267 li
193.186 329.018 li
200.2 333.065 li
.188235 .152941 .141176 rgb
f
199.572 333.622 mo
199.572 338.491 li
193.812 335.163 li
193.812 330.297 li
199.572 333.622 li
.760784 .243137 .180392 rgb
f
192.918 335.476 mo
199.472 339.259 li
198.287 341.078 li
191.738 336.162 li
192.918 335.476 li
.960784 .890196 .462745 rgb
f
199.472 339.259 mo
199.472 340.392 li
198.287 341.078 li
198.287 339.943 li
199.472 339.259 li
.227451 .376471 .388235 rgb
f
198.287 339.943 mo
198.287 341.078 li
191.738 337.293 li
191.738 336.162 li
198.287 339.943 li
.211765 .576471 .572549 rgb
f
192.726 329.281 mo
199.746 333.33 li
198.477 340.315 li
191.464 330.01 li
192.726 329.281 li
.533333 .776471 .772549 rgb
f
199.746 333.33 mo
199.746 339.582 li
198.477 340.315 li
198.477 334.058 li
199.746 333.33 li
.227451 .376471 .388235 rgb
f
198.477 334.058 mo
198.477 340.315 li
191.464 336.261 li
191.464 330.01 li
198.477 334.058 li
.211765 .576471 .572549 rgb
f
197.849 334.618 mo
197.849 339.483 li
192.088 336.157 li
192.088 331.29 li
197.849 334.618 li
.760784 .243137 .180392 rgb
f
gsave
200.011 340.083 mo
200.011 340.083 li
201.196 339.4 li
201.196 338.791 li
201.196 338.779 li
201.734 339.09 li
202.919 338.406 li
202.919 337.799 li
202.919 337.78 li
202.919 337.799 li
202.919 338.406 li
201.734 339.09 li
201.196 338.791 li
201.196 339.4 li
200.011 340.083 li
203.456 338.091 mo
203.456 338.091 li
204.641 337.41 li
204.641 336.803 li
204.641 336.785 li
205.181 337.096 li
206.367 336.418 li
206.367 335.811 li
206.367 335.792 li
206.367 335.811 li
206.367 336.418 li
205.181 337.096 li
204.641 336.803 li
204.641 337.41 li
203.456 338.091 li
clp
200.011 335.792 mo
206.367 335.792 li
206.367 340.083 li
200.011 340.083 li
cp
.658823 .611765 .498039 rgb
f
grestore
210.088 333.493 mo
210.087 333.492 li
210.087 331.665 li
210.088 331.665 li
210.088 333.493 li
.431373 .411765 .392157 rgb
f
210.088 331.665 mo
210.087 331.665 li
210.087 327.36 li
210.088 327.361 li
210.088 331.665 li
207.153 325.668 mo
203.067 323.316 li
202.654 323.55 li
203.068 323.312 li
207.153 325.668 li
.301961 .286274 .27451 rgb
f
208.629 335.109 mo
208.175 334.844 li
208.629 335.106 li
209.808 334.422 li
209.808 333.819 li
209.808 333.772 li
210.07 333.622 li
209.811 333.773 li
209.811 333.818 li
209.811 334.424 li
208.629 335.109 li
210.087 333.612 mo
210.087 333.492 li
210.088 333.493 li
210.088 333.611 li
210.087 333.612 li
.658823 .611765 .498039 rgb
f
206.903 336.102 mo
206.903 335.492 li
208.089 334.818 li
208.089 334.794 li
208.091 334.796 li
208.091 335.419 li
206.903 336.102 li
.541176 .388235 .203922 rgb
f
206.903 336.102 mo
206.903 336.102 li
206.367 335.788 li
206.367 335.792 li
206.367 335.76 li
206.639 335.602 li
206.639 335.342 li
206.901 335.493 li
206.903 335.492 li
206.903 336.102 li
.603922 .501961 .25098 rgb
f
205.181 337.096 mo
205.181 336.493 li
206.367 335.811 li
206.367 336.418 li
205.181 337.096 li
.682353 .376471 .0745098 rgb
f
205.181 337.096 mo
204.641 336.785 li
204.641 336.756 li
204.917 336.597 li
204.917 336.34 li
205.181 336.493 li
205.181 337.096 li
.67451 .470588 .223529 rgb
f
205.181 336.493 mo
205.181 336.493 li
205.181 336.228 li
205.369 336.337 li
206.367 335.76 li
206.367 335.792 li
206.367 335.811 li
205.181 336.493 li
.47451 .262745 .0509804 rgb
f
205.181 336.493 mo
204.917 336.34 li
204.917 336.075 li
205.181 336.228 li
205.181 336.493 li
.470588 .329412 .156863 rgb
f
205.369 336.337 mo
205.369 334.608 li
206.639 335.342 li
206.639 335.602 li
206.367 335.76 li
205.369 336.337 li
.682353 .376471 .0745098 rgb
f
205.369 336.337 mo
205.181 336.228 li
204.917 336.075 li
204.917 334.347 li
205.369 334.608 li
205.369 336.337 li
.67451 .470588 .223529 rgb
f
203.456 338.091 mo
203.456 337.489 li
204.641 336.803 li
204.641 337.41 li
203.456 338.091 li
.682353 .376471 .0745098 rgb
f
203.456 338.091 mo
203.456 338.091 li
202.919 337.779 li
202.919 337.78 li
202.919 337.751 li
203.193 337.593 li
203.193 337.336 li
203.456 337.489 li
203.456 338.091 li
.67451 .470588 .223529 rgb
f
203.456 337.489 mo
203.456 337.489 li
203.456 337.219 li
203.647 337.329 li
204.641 336.756 li
204.641 336.785 li
204.641 336.803 li
203.456 337.489 li
.47451 .262745 .0509804 rgb
f
203.456 337.489 mo
203.193 337.336 li
203.193 337.067 li
203.456 337.219 li
203.456 337.489 li
.470588 .329412 .156863 rgb
f
203.647 337.329 mo
203.647 334.871 li
204.741 335.502 li
204.741 334.245 li
204.917 334.347 li
204.917 336.075 li
204.917 336.34 li
204.917 336.597 li
204.641 336.756 li
203.647 337.329 li
.682353 .376471 .0745098 rgb
f
203.647 337.329 mo
203.456 337.219 li
203.193 337.067 li
203.193 334.609 li
203.647 334.871 li
203.647 337.329 li
.67451 .470588 .223529 rgb
f
201.734 339.09 mo
201.734 338.481 li
202.919 337.799 li
202.919 338.406 li
201.734 339.09 li
.156863 .262745 .270588 rgb
f
201.734 339.09 mo
201.196 338.779 li
201.196 338.745 li
201.47 338.587 li
201.47 338.328 li
201.734 338.481 li
201.734 339.09 li
.14902 .403922 .4 rgb
f
201.734 338.481 mo
201.734 338.481 li
201.734 338.217 li
201.923 338.327 li
202.919 337.751 li
202.919 337.78 li
202.919 337.799 li
201.734 338.481 li
.109804 .184314 .188235 rgb
f
201.734 338.481 mo
201.47 338.328 li
201.47 338.065 li
201.734 338.217 li
201.734 338.481 li
.105882 .282353 .278431 rgb
f
201.923 338.327 mo
201.923 333.877 li
203.193 334.609 li
203.193 337.067 li
203.193 337.336 li
203.193 337.593 li
202.919 337.751 li
201.923 338.327 li
.156863 .262745 .270588 rgb
f
201.923 338.327 mo
201.734 338.217 li
201.47 338.065 li
201.47 333.616 li
201.923 333.877 li
201.923 338.327 li
.14902 .403922 .4 rgb
f
200.011 340.083 mo
200.011 339.477 li
201.196 338.791 li
201.196 339.4 li
200.011 340.083 li
.027451 .0235294 .0235294 rgb
f
200.011 340.083 mo
200.011 340.083 li
199.472 339.771 li
199.472 339.772 li
199.472 339.74 li
199.746 339.582 li
199.746 339.324 li
200.011 339.477 li
200.011 340.083 li
.133333 .105882 .0980392 rgb
f
200.011 339.477 mo
200.011 339.477 li
200.011 339.209 li
200.2 339.319 li
201.196 338.745 li
201.196 338.779 li
201.196 338.791 li
200.011 339.477 li
.0196078 .0156863 .0156863 rgb
f
200.011 339.477 mo
199.746 339.324 li
199.746 339.056 li
200.011 339.209 li
200.011 339.477 li
.0941176 .0745098 .0666667 rgb
f
200.2 333.065 mo
198.578 332.129 li
198.765 332.019 li
198.765 331.416 li
198.765 331.4 li
198.981 331.525 li
198.981 332.181 li
200.358 332.975 li
200.2 333.065 li
.223529 .184314 .168627 rgb
f
200.2 339.319 mo
200.2 333.065 li
200.358 332.975 li
201.47 333.616 li
201.47 338.065 li
201.47 338.328 li
201.47 338.587 li
201.196 338.745 li
200.2 339.319 li
.027451 .0235294 .0235294 rgb
f
200.2 339.319 mo
200.011 339.209 li
199.746 339.056 li
199.746 333.33 li
198.125 332.395 li
198.578 332.129 li
200.2 333.065 li
200.2 339.319 li
.133333 .105882 .0980392 rgb
f
198.287 341.078 mo
198.287 340.471 li
199.472 339.79 li
199.472 340.392 li
198.287 341.078 li
.156863 .262745 .270588 rgb
f
198.287 341.078 mo
197.746 340.765 li
197.746 340.159 li
198.287 340.471 li
198.287 341.078 li
197.506 340.114 mo
197.022 339.835 li
197.038 339.75 li
197.588 340.068 li
197.506 340.114 li
.14902 .403922 .4 rgb
f
198.287 340.471 mo
198.287 340.471 li
198.287 340.205 li
198.477 340.315 li
199.472 339.74 li
199.472 339.772 li
199.472 339.79 li
198.287 340.471 li
.109804 .184314 .188235 rgb
f
198.287 340.471 mo
197.746 340.159 li
197.746 339.976 li
197.588 340.068 li
197.038 339.75 li
197.081 339.508 li
198.287 340.205 li
198.287 340.471 li
.105882 .282353 .278431 rgb
f
198.477 334.058 mo
196.86 333.125 li
197.046 333.018 li
197.046 332.415 li
197.046 332.4 li
197.586 332.712 li
198.125 332.395 li
199.746 333.33 li
198.477 334.058 li
.372549 .541176 .541176 rgb
f
198.477 340.315 mo
198.477 334.058 li
199.746 333.33 li
199.746 339.056 li
199.746 339.324 li
199.746 339.582 li
199.472 339.74 li
198.477 340.315 li
.156863 .262745 .270588 rgb
f
198.477 340.315 mo
198.287 340.205 li
197.081 339.508 li
197.158 339.084 li
197.849 339.483 li
197.849 335.27 li
198.02 334.325 li
196.4 333.39 li
196.86 333.125 li
198.477 334.058 li
198.477 340.315 li
.14902 .403922 .4 rgb
f
197.849 339.483 mo
197.158 339.084 li
197.849 335.27 li
197.849 339.483 li
.529412 .168627 .12549 rgb
f
191.196 336.472 mo
197.746 340.253 li
196.562 342.073 li
190.015 337.153 li
191.196 336.472 li
.960784 .890196 .462745 rgb
f
197.746 340.253 mo
197.746 341.388 li
196.562 342.073 li
196.562 340.936 li
197.746 340.253 li
.0392157 .0313726 .0313726 rgb
f
196.562 340.936 mo
196.562 342.073 li
190.015 338.289 li
190.015 337.153 li
196.562 340.936 li
.188235 .152941 .141176 rgb
f
197.746 340.765 mo
197.746 340.765 li
197.746 340.253 li
197.506 340.114 li
197.588 340.068 li
197.746 340.159 li
197.746 340.765 li
.105882 .282353 .278431 rgb
f
197.746 340.159 mo
197.588 340.068 li
197.746 339.976 li
197.746 340.159 li
.0745098 .196078 .196078 rgb
f
196.853 340.768 mo
196.909 340.457 li
197.506 340.114 li
197.746 340.253 li
196.853 340.768 li
.670588 .619608 .321569 rgb
f
196.562 341.467 mo
196.562 341.467 li
196.562 341.2 li
196.755 341.312 li
196.853 340.768 li
197.746 340.253 li
197.746 340.765 li
197.746 340.785 li
196.562 341.467 li
.027451 .0235294 .0235294 rgb
f
196.562 341.467 mo
196.022 341.156 li
196.022 340.971 li
195.862 341.063 li
195.314 340.746 li
195.357 340.504 li
196.562 341.2 li
196.562 341.467 li
.133333 .105882 .0980392 rgb
f
191.004 330.276 mo
198.02 334.325 li
196.755 341.312 li
189.741 331.007 li
191.004 330.276 li
.317647 .266667 .243137 rgb
f
198.02 334.325 mo
198.02 340.578 li
196.755 341.312 li
196.755 335.059 li
198.02 334.325 li
cp
.0392157 .0313726 .0313726 rgb
f
196.755 335.059 mo
196.755 341.312 li
189.741 337.258 li
189.741 331.007 li
196.755 335.059 li
.188235 .152941 .141176 rgb
f
196.122 335.61 mo
196.122 340.482 li
190.365 337.153 li
190.365 332.284 li
196.122 335.61 li
.760784 .243137 .180392 rgb
f
189.47 337.467 mo
196.022 341.246 li
194.839 343.066 li
188.289 338.149 li
189.47 337.467 li
.960784 .890196 .462745 rgb
f
196.022 341.246 mo
196.022 342.383 li
194.839 343.066 li
194.839 341.93 li
196.022 341.246 li
.776471 .556863 .290196 rgb
f
194.839 341.93 mo
194.839 343.066 li
188.289 339.283 li
188.289 338.149 li
194.839 341.93 li
.866667 .721569 .356863 rgb
f
196.022 341.761 mo
196.022 341.761 li
196.022 341.246 li
195.784 341.109 li
195.862 341.063 li
196.022 341.156 li
196.022 341.761 li
.133333 .105882 .0980392 rgb
f
196.022 341.156 mo
195.862 341.063 li
196.022 340.971 li
196.022 341.156 li
.0941176 .0745098 .0666667 rgb
f
195.129 341.762 mo
195.185 341.455 li
195.784 341.109 li
196.022 341.246 li
195.129 341.762 li
.670588 .619608 .321569 rgb
f
194.839 342.462 mo
194.839 342.462 li
194.839 342.194 li
195.031 342.305 li
195.129 341.762 li
196.022 341.246 li
196.022 341.761 li
196.022 341.779 li
194.839 342.462 li
.541176 .388235 .203922 rgb
f
194.839 342.462 mo
194.3 342.151 li
194.3 341.965 li
194.14 342.058 li
193.305 341.576 li
193.305 341.308 li
194.839 342.194 li
194.839 342.462 li
.603922 .501961 .25098 rgb
f
189.28 331.271 mo
196.298 335.32 li
195.031 342.305 li
188.017 332.002 li
189.28 331.271 li
.960784 .890196 .462745 rgb
f
196.298 335.32 mo
196.298 341.573 li
195.031 342.305 li
195.031 336.055 li
196.298 335.32 li
cp
.776471 .556863 .290196 rgb
f
195.031 336.055 mo
195.031 342.305 li
188.017 338.252 li
188.017 332.002 li
195.031 336.055 li
.866667 .721569 .356863 rgb
f
194.402 336.607 mo
194.402 341.476 li
188.642 338.145 li
188.642 333.279 li
194.402 336.607 li
.760784 .243137 .180392 rgb
f
187.747 338.463 mo
194.3 342.241 li
193.116 344.063 li
186.567 339.144 li
187.747 338.463 li
.960784 .890196 .462745 rgb
f
194.3 342.241 mo
194.3 343.378 li
193.116 344.063 li
193.116 342.925 li
194.3 342.241 li
.776471 .556863 .290196 rgb
f
193.116 342.925 mo
193.116 344.063 li
186.567 340.278 li
186.567 339.144 li
193.116 342.925 li
.866667 .721569 .356863 rgb
f
194.3 342.754 mo
194.3 342.754 li
194.3 342.241 li
194.061 342.103 li
194.14 342.058 li
194.3 342.151 li
194.3 342.754 li
.603922 .501961 .25098 rgb
f
194.3 342.151 mo
194.14 342.058 li
194.3 341.965 li
194.3 342.151 li
.419608 .34902 .176471 rgb
f
193.305 342.816 mo
193.305 342.542 li
194.061 342.103 li
194.3 342.241 li
193.305 342.816 li
.670588 .619608 .321569 rgb
f
193.116 343.46 mo
193.116 343.46 li
193.116 343.191 li
193.305 343.3 li
193.305 342.816 li
194.3 342.241 li
194.3 342.754 li
194.3 342.773 li
193.116 343.46 li
.541176 .388235 .203922 rgb
f
193.116 343.46 mo
192.577 343.148 li
192.577 342.959 li
192.413 343.053 li
186.567 339.672 li
186.567 339.404 li
193.116 343.191 li
193.116 343.46 li
.603922 .501961 .25098 rgb
f
187.554 332.264 mo
194.575 336.316 li
193.305 343.3 li
186.294 332.998 li
187.554 332.264 li
cp
.960784 .890196 .462745 rgb
f
194.575 336.316 mo
194.575 342.566 li
193.305 343.3 li
193.305 337.047 li
194.575 336.316 li
cp
.776471 .556863 .290196 rgb
f
193.305 337.047 mo
193.305 343.3 li
186.294 339.247 li
186.294 332.998 li
193.305 337.047 li
.866667 .721569 .356863 rgb
f
192.677 337.6 mo
192.677 342.469 li
186.918 339.141 li
186.918 334.275 li
192.677 337.6 li
.760784 .243137 .180392 rgb
f
186.026 339.458 mo
192.577 343.238 li
191.392 345.058 li
184.846 340.14 li
186.026 339.458 li
.960784 .890196 .462745 rgb
f
192.577 343.238 mo
192.577 344.374 li
191.392 345.058 li
191.392 343.921 li
192.577 343.238 li
.227451 .376471 .388235 rgb
f
191.392 343.921 mo
191.392 345.058 li
184.846 341.271 li
184.846 340.14 li
191.392 343.921 li
.211765 .576471 .572549 rgb
f
192.577 343.751 mo
192.577 343.751 li
192.577 343.238 li
192.335 343.099 li
192.413 343.053 li
192.577 343.148 li
192.577 343.751 li
.603922 .501961 .25098 rgb
f
192.577 343.148 mo
192.413 343.053 li
192.577 342.959 li
192.577 343.148 li
.419608 .34902 .176471 rgb
f
184.846 340.14 mo
184.846 340.059 li
184.979 339.982 li
184.979 339.939 li
185.087 340.001 li
184.846 340.14 li
.658823 .611765 .498039 rgb
f
184.846 340.059 mo
184.846 339.862 li
184.979 339.939 li
184.979 339.982 li
184.846 340.059 li
.317647 .403922 .235294 rgb
f
191.392 343.921 mo
184.846 340.14 li
185.087 340.001 li
191.392 343.643 li
192.335 343.099 li
192.577 343.238 li
191.392 343.921 li
.670588 .619608 .321569 rgb
f
191.392 344.451 mo
191.392 344.451 li
191.392 343.921 li
192.577 343.238 li
192.577 343.751 li
192.577 343.77 li
191.392 344.451 li
.156863 .262745 .270588 rgb
f
191.392 344.451 mo
184.846 340.668 li
184.846 340.14 li
191.392 343.921 li
191.392 344.451 li
.14902 .403922 .4 rgb
f
185.831 333.261 mo
192.851 337.31 li
191.582 344.296 li
184.569 333.992 li
185.831 333.261 li
cp
.533333 .776471 .772549 rgb
f
192.851 337.31 mo
192.851 343.564 li
191.582 344.296 li
191.582 338.041 li
192.851 337.31 li
cp
.227451 .376471 .388235 rgb
f
191.582 338.041 mo
191.582 344.296 li
184.569 340.24 li
184.569 333.992 li
191.582 338.041 li
cp
.211765 .576471 .572549 rgb
f
190.951 338.598 mo
190.951 343.464 li
185.196 340.14 li
185.196 335.27 li
190.951 338.598 li
cp
.976471 .756863 .321569 rgb
f
199.429 350.302 mo
193.714 347 li
194.051 346.807 li
193.251 346.344 li
193.526 346.185 li
193.526 346.344 li
194.41 346.851 li
194.752 347.05 li
194.752 346.772 li
201.066 343.125 li
201.065 342.733 li
206.802 346.044 li
199.429 350.302 li
.658823 .611765 .498039 rgb
f
201.066 343.125 mo
194.513 346.911 li
193.529 344.976 li
201.063 341.763 li
201.066 343.125 li
.960784 .890196 .462745 rgb
f
194.513 346.911 mo
193.526 346.344 li
193.529 344.976 li
194.513 345.544 li
194.513 346.911 li
.866667 .721569 .356863 rgb
f
194.513 345.544 mo
193.529 344.976 li
200.083 341.197 li
201.063 341.763 li
194.513 345.544 li
.960784 .890196 .462745 rgb
f
201.064 342.04 mo
201.063 341.765 li
201.301 341.902 li
201.064 342.04 li
.658823 .611765 .498039 rgb
f
194.752 347.05 mo
194.41 346.851 li
194.513 346.911 li
194.752 346.772 li
194.752 347.05 li
.458824 .427451 .34902 rgb
f
194.513 346.911 mo
194.513 345.544 li
201.062 341.764 li
201.063 341.765 li
201.064 342.04 li
194.754 345.68 li
194.752 346.772 li
194.513 346.911 li
.670588 .619608 .321569 rgb
f
194.513 346.911 mo
194.41 346.851 li
194.051 346.643 li
194.053 345.279 li
194.513 345.544 li
194.513 346.911 li
.603922 .501961 .25098 rgb
f
194.513 345.544 mo
194.513 345.544 li
194.053 345.279 li
194.053 345.276 li
200.606 341.501 li
201.062 341.764 li
194.513 345.544 li
.670588 .619608 .321569 rgb
f
206.525 346.058 mo
199.509 350.113 li
194.096 345.522 li
206.525 344.598 li
206.525 346.058 li
cp
.776471 .556863 .290196 rgb
f
199.509 350.113 mo
194.093 346.985 li
194.096 345.522 li
199.509 348.648 li
199.509 350.113 li
cp
.866667 .721569 .356863 rgb
f
199.509 348.648 mo
194.096 345.522 li
201.113 341.476 li
206.525 344.598 li
199.509 348.648 li
cp
.960784 .890196 .462745 rgb
f
199.343 347.823 mo
195.127 345.39 li
200.888 342.067 li
205.106 344.5 li
199.343 347.823 li
cp
.760784 .243137 .180392 rgb
f
221.301 310.111 mo
200.279 322.243 li
204.057 324.423 li
225.077 312.291 li
221.301 310.111 li
cp
.945098 .878431 .713726 rgb
f
204.057 354.28 mo
200.279 352.101 li
200.279 322.243 li
204.057 324.423 li
204.057 354.28 li
cp
.913725 .752941 .529412 rgb
f
225.077 312.291 mo
204.057 324.423 li
204.057 354.28 li
225.077 342.147 li
225.077 312.291 li
cp
.756863 .596078 .34902 rgb
f
143.124 261.556 mo
122.102 273.688 li
204.057 321.002 li
225.077 308.872 li
143.124 261.556 li
.945098 .878431 .713726 rgb
f
204.057 324.423 mo
122.102 277.112 li
122.102 273.688 li
204.057 321.002 li
204.057 324.423 li
cp
.913725 .752941 .529412 rgb
f
225.077 308.872 mo
204.057 321 li
204.057 324.423 li
210.088 322.978 li
225.077 312.291 li
225.077 308.872 li
cp
.756863 .596078 .34902 rgb
f
191.966 306.169 mo
182.392 300.639 li
191.966 295.112 li
201.545 300.639 li
191.966 306.169 li
.658823 .611765 .498039 rgb
f
191.966 305.904 mo
182.846 300.639 li
182.846 279.692 li
201.089 279.692 li
191.966 305.904 li
cp
.384314 .321569 .294118 rgb
f
191.574 285.934 mo
190.065 285.061 li
190.065 284.377 li
191.574 285.247 li
191.574 285.934 li
cp
.933333 .913725 .890196 rgb
f
191.966 284.957 mo
182.846 279.692 li
191.966 274.427 li
201.089 279.692 li
191.966 284.957 li
cp
.490196 .411765 .392157 rgb
f
201.089 300.639 mo
191.966 305.904 li
191.966 284.957 li
201.089 279.692 li
201.089 300.639 li
cp
.227451 .188235 .172549 rgb
f
189.132 294.217 mo
191.31 297.992 li
191.31 301.681 li
188.886 303.08 li
185.689 301.235 li
183.513 297.464 li
183.513 293.772 li
185.934 292.373 li
189.132 294.217 li
cp
f
190.975 298.077 mo
190.975 301.489 li
190.393 301.824 li
189.754 298.06 li
190.975 298.077 li
cp
.0392157 .0313726 .0313726 rgb
f
185.934 292.76 mo
188.886 294.465 li
188.146 295.628 li
185.352 293.097 li
185.934 292.76 li
cp
.317647 .266667 .243137 rgb
f
188.886 294.465 mo
190.975 298.077 li
190.393 298.416 li
189.127 297.332 li
188.307 294.8 li
188.886 294.465 li
cp
.129412 .101961 .101961 rgb
f
183.263 297.711 mo
185.352 301.328 li
188.307 303.03 li
190.393 301.824 li
190.393 298.416 li
188.307 294.8 li
185.352 293.097 li
183.263 294.301 li
183.263 297.711 li
cp
.188235 .152941 .141176 rgb
f
188.456 302.144 mo
188.103 302.347 li
185.556 300.878 li
183.751 297.76 li
183.751 294.817 li
184.109 294.613 li
184.109 297.554 li
185.909 300.674 li
188.456 302.144 li
cp
0 0 0 rgb
f
189.902 298.367 mo
189.902 301.309 li
188.456 302.144 li
185.909 300.674 li
184.109 297.554 li
184.109 294.613 li
185.556 293.776 li
188.103 295.249 li
189.902 298.367 li
cp
.129412 .101961 .101961 rgb
f
187.813 297.856 mo
187.813 298.467 li
187.708 298.53 li
187.594 297.853 li
187.813 297.856 li
cp
.615686 .588235 .560784 rgb
f
186.905 296.897 mo
187.44 297.204 li
187.303 297.411 li
186.801 296.957 li
186.905 296.897 li
cp
.878431 .858824 .843137 rgb
f
187.44 297.204 mo
187.813 297.856 li
187.708 297.916 li
187.482 297.721 li
187.336 297.264 li
187.44 297.204 li
cp
.686275 .662745 .631373 rgb
f
186.426 297.789 mo
186.801 298.438 li
187.336 298.745 li
187.708 298.53 li
187.708 297.916 li
187.336 297.264 li
186.801 296.957 li
186.426 297.172 li
186.426 297.789 li
cp
.823529 .796078 .756863 rgb
f
189.132 284.447 mo
191.31 288.217 li
191.31 291.91 li
188.886 293.312 li
185.689 291.465 li
183.513 287.693 li
183.513 283.999 li
185.934 282.603 li
189.132 284.447 li
cp
.227451 .188235 .172549 rgb
f
190.975 288.311 mo
190.975 291.72 li
190.393 292.055 li
189.754 288.286 li
190.975 288.311 li
cp
.0392157 .0313726 .0313726 rgb
f
185.934 282.988 mo
188.886 284.693 li
188.146 285.856 li
185.352 283.323 li
185.934 282.988 li
cp
.317647 .266667 .243137 rgb
f
188.886 284.693 mo
190.975 288.311 li
190.393 288.645 li
189.127 287.561 li
188.307 285.028 li
188.886 284.693 li
cp
.129412 .101961 .101961 rgb
f
183.263 287.939 mo
185.352 291.556 li
188.307 293.258 li
190.393 292.055 li
190.393 288.645 li
188.307 285.028 li
185.352 283.323 li
183.263 284.529 li
183.263 287.939 li
cp
.188235 .152941 .141176 rgb
f
188.456 292.373 mo
188.103 292.58 li
185.556 291.11 li
183.751 287.986 li
183.751 285.046 li
184.109 284.839 li
184.109 287.782 li
185.909 290.904 li
188.456 292.373 li
cp
0 0 0 rgb
f
189.902 288.597 mo
189.902 291.54 li
188.456 292.373 li
185.909 290.904 li
184.109 287.782 li
184.109 284.839 li
185.556 284.008 li
188.103 285.478 li
189.902 288.597 li
cp
.129412 .101961 .101961 rgb
f
187.813 288.081 mo
187.813 288.697 li
187.708 288.76 li
187.594 288.078 li
187.813 288.081 li
cp
.615686 .588235 .560784 rgb
f
186.905 287.129 mo
187.44 287.432 li
187.303 287.643 li
186.801 287.186 li
186.905 287.129 li
cp
.878431 .858824 .843137 rgb
f
187.44 287.432 mo
187.813 288.081 li
187.708 288.143 li
187.482 287.949 li
187.336 287.494 li
187.44 287.432 li
cp
.686275 .662745 .631373 rgb
f
186.426 288.015 mo
186.801 288.667 li
187.336 288.973 li
187.708 288.76 li
187.708 288.143 li
187.336 287.494 li
186.801 287.186 li
186.426 287.401 li
186.426 288.015 li
cp
.823529 .796078 .756863 rgb
f
207.52 314.884 mo
198.401 309.622 li
198.401 288.672 li
216.644 288.672 li
207.52 314.884 li
cp
.384314 .321569 .294118 rgb
f
207.13 294.916 mo
205.621 294.043 li
205.621 293.359 li
207.13 294.229 li
207.13 294.916 li
cp
.933333 .913725 .890196 rgb
f
207.52 293.941 mo
198.401 288.672 li
207.52 283.408 li
216.644 288.672 li
207.52 293.941 li
cp
.490196 .411765 .392157 rgb
f
216.644 309.622 mo
207.52 314.884 li
207.52 293.941 li
216.644 288.672 li
216.644 309.622 li
cp
.227451 .188235 .172549 rgb
f
204.688 303.2 mo
206.868 306.972 li
206.868 310.666 li
204.442 312.062 li
201.246 310.216 li
199.069 306.446 li
199.069 302.752 li
201.49 301.353 li
204.688 303.2 li
cp
f
206.531 307.063 mo
206.531 310.471 li
205.95 310.805 li
205.311 307.039 li
206.531 307.063 li
cp
.0392157 .0313726 .0313726 rgb
f
201.49 301.741 mo
204.442 303.446 li
203.7 304.61 li
200.909 302.076 li
201.49 301.741 li
cp
.317647 .266667 .243137 rgb
f
204.442 303.446 mo
206.531 307.063 li
205.95 307.399 li
204.684 306.314 li
203.861 303.784 li
204.442 303.446 li
cp
.129412 .101961 .101961 rgb
f
198.82 306.692 mo
200.909 310.307 li
203.861 312.012 li
205.95 310.805 li
205.95 307.399 li
203.861 303.784 li
200.909 302.076 li
198.82 303.282 li
198.82 306.692 li
cp
.188235 .152941 .141176 rgb
f
204.016 311.123 mo
203.657 311.33 li
201.113 309.86 li
199.311 306.742 li
199.311 303.799 li
199.665 303.595 li
199.665 306.537 li
201.467 309.654 li
204.016 311.123 li
cp
0 0 0 rgb
f
205.459 307.35 mo
205.459 310.291 li
204.016 311.123 li
201.467 309.654 li
199.665 306.537 li
199.665 303.595 li
201.113 302.759 li
203.657 304.228 li
205.459 307.35 li
cp
.129412 .101961 .101961 rgb
f
203.369 306.835 mo
203.369 307.449 li
203.264 307.512 li
203.15 306.833 li
203.369 306.835 li
cp
.615686 .588235 .560784 rgb
f
202.465 305.876 mo
202.996 306.187 li
202.86 306.393 li
202.358 305.939 li
202.465 305.876 li
cp
.878431 .858824 .843137 rgb
f
202.996 306.187 mo
203.369 306.835 li
203.264 306.896 li
203.039 306.699 li
202.892 306.244 li
202.996 306.187 li
cp
.686275 .662745 .631373 rgb
f
201.983 306.768 mo
202.358 307.417 li
202.892 307.725 li
203.264 307.512 li
203.264 306.896 li
202.892 306.244 li
202.358 305.939 li
201.983 306.154 li
201.983 306.768 li
cp
.823529 .796078 .756863 rgb
f
204.688 293.429 mo
206.868 297.203 li
206.868 300.896 li
204.442 302.292 li
201.246 300.446 li
199.069 296.675 li
199.069 292.981 li
201.49 291.585 li
204.688 293.429 li
cp
.227451 .188235 .172549 rgb
f
206.531 297.292 mo
206.531 300.699 li
205.95 301.035 li
205.311 297.269 li
206.531 297.292 li
cp
.0392157 .0313726 .0313726 rgb
f
201.49 291.973 mo
204.442 293.673 li
203.7 294.839 li
200.909 292.306 li
201.49 291.973 li
cp
.317647 .266667 .243137 rgb
f
204.442 293.673 mo
206.531 297.292 li
205.95 297.628 li
204.684 296.541 li
203.861 294.011 li
204.442 293.673 li
cp
.129412 .101961 .101961 rgb
f
198.82 296.922 mo
200.909 300.538 li
203.861 302.24 li
205.95 301.035 li
205.95 297.628 li
203.861 294.011 li
200.909 292.306 li
198.82 293.511 li
198.82 296.922 li
cp
.188235 .152941 .141176 rgb
f
204.016 301.353 mo
203.657 301.559 li
201.113 300.09 li
199.311 296.971 li
199.311 294.025 li
199.665 293.825 li
199.665 296.765 li
201.467 299.886 li
204.016 301.353 li
cp
0 0 0 rgb
f
205.459 297.578 mo
205.459 300.522 li
204.016 301.353 li
201.467 299.886 li
199.665 296.765 li
199.665 293.825 li
201.113 292.987 li
203.657 294.458 li
205.459 297.578 li
cp
.129412 .101961 .101961 rgb
f
203.369 297.064 mo
203.369 297.679 li
203.264 297.739 li
203.15 297.058 li
203.369 297.064 li
cp
.615686 .588235 .560784 rgb
f
202.465 296.109 mo
202.996 296.415 li
202.86 296.623 li
202.358 296.169 li
202.465 296.109 li
cp
.878431 .858824 .843137 rgb
f
202.996 296.415 mo
203.369 297.064 li
203.264 297.125 li
203.039 296.929 li
202.892 296.476 li
202.996 296.415 li
cp
.686275 .662745 .631373 rgb
f
201.983 296.998 mo
202.358 297.649 li
202.892 297.957 li
203.264 297.739 li
203.264 297.125 li
202.892 296.476 li
202.358 296.169 li
201.983 296.384 li
201.983 296.998 li
cp
.823529 .796078 .756863 rgb
f
258.854 385.794 mo
252.8 385.794 li
248.525 383.318 li
248.519 379.826 li
249.795 379.09 li
250.223 382.487 li
253.506 384.384 li
258.149 384.384 li
261.432 382.487 li
261.859 379.089 li
263.131 379.826 li
263.131 383.318 li
258.854 385.794 li
.611765 .6 .588235 rgb
f
262.627 372.966 mo
261.432 382.487 li
258.149 384.384 li
257.234 374.422 li
262.627 372.966 li
.388235 .180392 .121569 rgb
f
258.643 375.27 mo
258.149 384.384 li
253.506 384.384 li
249.025 372.969 li
258.643 375.27 li
.498039 .231373 .156863 rgb
f
253.003 375.27 mo
253.506 384.384 li
250.223 382.487 li
249.025 372.969 li
253.003 375.27 li
.556863 .294118 .215686 rgb
f
249.025 369.718 mo
249.025 372.969 li
253.003 375.27 li
258.643 375.27 li
262.627 372.969 li
262.627 369.718 li
258.643 367.414 li
253.003 367.414 li
249.025 369.718 li
.0392157 .0313726 .0313726 rgb
f
262.384 374.9 mo
262.425 374.575 li
262.386 374.899 li
262.384 374.9 li
.611765 .6 .588235 rgb
f
258.543 377.124 mo
258.643 375.27 li
261.914 373.381 li
262.57 373.384 li
262.425 374.575 li
262.384 374.9 li
258.543 377.124 li
.270588 .12549 .0862745 rgb
f
258.542 377.124 mo
253.109 377.124 li
253.105 377.122 li
253.003 375.27 li
258.643 375.27 li
258.543 377.124 li
258.542 377.124 li
.34902 .160784 .109804 rgb
f
249.176 374.167 mo
249.069 373.332 li
249.071 373.332 li
249.176 374.167 li
.611765 .6 .588235 rgb
f
253.105 377.122 mo
249.271 374.91 li
249.176 374.167 li
249.071 373.332 li
249.657 373.335 li
253.003 375.27 li
253.105 377.122 li
.388235 .203922 .14902 rgb
f
258.643 375.27 mo
258.643 375.27 li
253.003 375.27 li
249.657 373.335 li
261.914 373.381 li
258.643 375.27 li
.027451 .0235294 .0235294 rgb
f
263.13 372.398 mo
263.13 373.637 li
258.854 376.104 li
257.344 373.953 li
263.13 372.398 li
cp
.388235 .180392 .121569 rgb
f
258.85 374.87 mo
258.854 376.104 li
252.8 376.104 li
248.525 372.398 li
258.85 374.87 li
cp
.498039 .231373 .156863 rgb
f
252.8 374.87 mo
252.8 376.104 li
248.519 373.637 li
248.525 372.398 li
252.8 374.87 li
cp
.556863 .294118 .215686 rgb
f
248.519 368.905 mo
248.525 372.398 li
252.8 374.87 li
258.854 374.87 li
263.131 372.398 li
263.131 368.905 li
258.854 366.43 li
252.8 366.43 li
248.519 368.905 li
cp
.796078 .486275 .392157 rgb
f
258.457 366.984 mo
262.177 369.131 li
262.177 371.122 li
258.457 368.974 li
258.457 366.984 li
cp
.556863 .294118 .215686 rgb
f
258.457 368.974 mo
253.195 368.974 li
253.195 366.984 li
258.457 366.984 li
258.457 368.974 li
cp
.498039 .231373 .156863 rgb
f
253.195 368.974 mo
249.477 371.122 li
249.477 369.131 li
253.195 366.984 li
253.195 368.974 li
cp
.388235 .180392 .121569 rgb
f
262.177 371.122 mo
262.177 372.169 li
258.457 374.318 li
253.195 374.318 li
249.477 372.169 li
249.477 371.122 li
253.195 368.974 li
258.457 368.974 li
262.177 371.122 li
cp
.345098 .247059 .207843 rgb
f
252.064 370.195 mo
252.064 370.735 li
252.725 371.122 li
253.665 371.122 li
254.329 370.735 li
254.329 370.195 li
253.665 369.812 li
252.725 369.812 li
252.064 370.195 li
cp
.407843 .32549 .270588 rgb
f
256.862 372.88 mo
256.862 373.357 li
257.445 373.693 li
258.271 373.693 li
258.854 373.357 li
258.854 372.88 li
258.271 372.546 li
257.445 372.546 li
256.862 372.88 li
cp
f
256.239 369.715 mo
256.239 370.047 li
256.648 370.275 li
257.212 370.275 li
257.619 370.047 li
257.619 369.715 li
257.212 369.481 li
256.648 369.481 li
256.239 369.715 li
cp
f
258.778 371.841 mo
258.778 372.169 li
259.177 372.398 li
259.741 372.398 li
260.144 372.169 li
260.144 371.841 li
259.741 371.607 li
259.177 371.607 li
258.778 371.841 li
cp
f
250.437 371.517 mo
250.437 371.924 li
250.931 372.209 li
251.629 372.209 li
252.125 371.924 li
252.125 371.517 li
251.629 371.235 li
250.931 371.235 li
250.437 371.517 li
cp
f
257.619 370.451 mo
257.619 370.854 li
258.108 371.136 li
258.81 371.136 li
259.302 370.854 li
259.302 370.451 li
258.81 370.162 li
258.108 370.162 li
257.619 370.451 li
cp
f
252.321 372.808 mo
252.321 373.133 li
252.724 373.369 li
253.289 373.369 li
253.688 373.133 li
253.688 372.808 li
253.289 372.571 li
252.724 372.571 li
252.321 372.808 li
cp
f
260.624 371.478 mo
260.624 371.674 li
260.862 371.81 li
261.198 371.81 li
261.437 371.674 li
261.437 371.478 li
261.198 371.343 li
260.862 371.343 li
260.624 371.478 li
cp
f
253.1 371.905 mo
253.1 372.102 li
253.334 372.235 li
253.67 372.235 li
253.909 372.102 li
253.909 371.905 li
253.67 371.766 li
253.334 371.766 li
253.1 371.905 li
cp
f
255.182 370.789 mo
255.182 370.983 li
255.414 371.12 li
255.745 371.12 li
255.984 370.983 li
255.984 370.789 li
255.745 370.647 li
255.414 370.647 li
255.182 370.789 li
cp
f
254.641 373.593 mo
254.641 373.792 li
254.875 373.925 li
255.215 373.925 li
255.447 373.792 li
255.447 373.593 li
255.215 373.458 li
254.875 373.458 li
254.641 373.593 li
cp
f
257.249 366.292 mo
257.249 372.091 li
256.419 372.571 li
256.124 366.595 li
257.249 366.292 li
cp
.317647 .2 .0627451 rgb
f
256.419 366.77 mo
256.419 372.571 li
255.236 372.571 li
254.405 366.292 li
256.419 366.77 li
cp
.396078 .25098 .0745098 rgb
f
255.236 366.77 mo
255.236 372.571 li
254.405 372.091 li
254.405 366.292 li
255.236 366.77 li
cp
.505882 .301961 .101961 rgb
f
254.405 365.607 mo
254.405 366.292 li
255.236 366.77 li
256.419 366.77 li
257.249 366.292 li
257.249 365.607 li
256.419 365.128 li
255.236 365.128 li
254.405 365.607 li
cp
.698039 .427451 .215686 rgb
f
260.237 357.073 mo
251.411 357.073 li
245.166 360.676 li
245.166 365.773 li
251.411 369.38 li
260.237 369.383 li
266.483 365.776 li
266.483 360.676 li
260.237 357.073 li
cp
.258824 .356863 .168627 rgb
f
260.733 353.942 mo
250.919 353.942 li
243.978 357.951 li
243.984 363.613 li
250.919 367.621 li
260.733 367.621 li
267.665 363.613 li
267.665 357.951 li
260.733 353.942 li
cp
.321569 .415686 .227451 rgb
f
261.236 350.58 mo
250.421 350.58 li
242.782 354.998 li
242.782 361.237 li
250.421 365.652 li
261.23 365.652 li
268.876 361.243 li
268.876 354.998 li
261.236 350.58 li
cp
.368627 .466667 .270588 rgb
f
261.772 347.246 mo
249.882 347.246 li
241.476 352.101 li
241.476 358.96 li
249.882 363.817 li
261.772 363.82 li
270.176 358.968 li
270.176 352.101 li
261.772 347.246 li
cp
.415686 .52549 .309804 rgb
f
240.425 349.486 mo
240.425 356.848 li
249.445 362.063 li
262.205 362.063 li
271.229 356.848 li
271.229 349.486 li
262.213 344.271 li
249.445 344.271 li
240.425 349.486 li
cp
.454902 .576471 .337255 rgb
f
261.772 343.054 mo
249.882 343.057 li
241.484 347.905 li
241.487 354.762 li
249.882 359.617 li
261.764 359.617 li
270.171 354.77 li
270.171 347.905 li
261.772 343.054 li
cp
.509804 .607843 .356863 rgb
f
261.236 341.491 mo
250.421 341.491 li
242.782 345.901 li
242.782 352.14 li
250.421 356.555 li
261.23 356.555 li
268.876 352.146 li
268.876 345.901 li
261.236 341.491 li
cp
.541176 .647059 .380392 rgb
f
260.733 340.196 mo
250.919 340.2 li
243.978 344.205 li
243.984 349.868 li
250.919 353.873 li
260.733 353.873 li
267.665 349.868 li
267.665 344.205 li
260.733 340.196 li
cp
.6 .717647 .419608 rgb
f
260.237 338.836 mo
251.411 338.836 li
245.166 342.443 li
245.166 347.538 li
251.411 351.147 li
260.237 351.147 li
266.483 347.538 li
266.483 342.443 li
260.237 338.836 li
cp
.658824 .788235 .458824 rgb
f
259.876 337.924 mo
251.776 337.928 li
246.051 341.232 li
246.06 345.904 li
251.776 349.21 li
259.876 349.21 li
265.598 345.907 li
265.598 341.232 li
259.876 337.924 li
cp
.705882 .847059 .494118 rgb
f
259.403 336.79 mo
252.258 336.79 li
247.192 339.708 li
247.198 343.835 li
252.258 346.754 li
259.403 346.754 li
264.46 343.835 li
264.46 339.708 li
259.403 336.79 li
cp
.768627 .92549 .537255 rgb
f
183.861 331.866 mo
183.861 331.857 li
183.096 332.298 li
182.556 331.983 li
182.556 332.01 li
182.556 332.613 li
181.377 333.297 li
180.837 332.982 li
180.837 333.009 li
180.837 333.612 li
179.649 334.296 li
179.118 333.99 li
179.118 333.999 li
179.118 334.602 li
177.93 335.286 li
177.39 334.971 li
177.39 334.998 li
176.202 335.673 li
169.65 331.893 li
169.65 331.092 li
176.202 334.872 li
176.391 334.764 li
176.391 334.395 li
171.378 331.506 li
171.378 330.633 li
171.099 330.471 li
171.099 325.404 li
167.562 327.447 li
167.562 333.207 li
163.791 331.038 li
163.791 328.446 li
163.512 328.284 li
163.512 328.041 li
163.251 328.194 li
162.792 327.933 li
162.792 327.42 li
162.459 327.996 li
162.009 327.735 li
162.009 327.294 li
161.91 327.348 li
161.451 327.087 li
161.451 322.038 li
155.673 325.386 li
155.673 324.369 li
156.213 323.694 li
155.673 324.009 li
155.673 322.992 li
156.24 322.281 li
155.916 322.479 li
155.907 322.479 li
155.673 322.614 li
155.673 321.606 li
156.294 320.832 li
155.673 321.192 li
155.673 320.175 li
158.103 317.16 li
163.791 315.099 li
163.791 314.937 li
163.791 304.227 li
155.673 308.925 li
155.673 307.908 li
156.213 307.233 li
155.925 307.404 li
155.907 307.413 li
155.673 307.548 li
155.673 306.54 li
158.103 303.516 li
163.791 301.455 li
163.791 301.176 li
164.088 301.347 li
165.618 300.789 li
165.618 301.239 li
165.618 301.356 li
165.618 301.797 li
165.24 302.013 li
165.537 302.184 li
165.618 302.157 li
165.618 302.229 li
167.562 303.354 li
167.562 312.759 li
184.806 302.805 li
184.806 306.216 li
173.547 314.253 li
173.547 322.812 li
174.087 322.497 li
174.555 322.767 li
174.555 322.236 li
175.815 321.498 li
176.274 321.759 li
176.274 321.237 li
177.534 320.508 li
177.993 320.769 li
177.993 320.247 li
179.262 319.509 li
179.721 319.77 li
179.721 319.248 li
180.99 318.519 li
181.44 318.78 li
181.44 318.258 li
182.709 317.52 li
183.168 317.781 li
183.168 317.259 li
184.428 316.53 li
184.887 316.791 li
184.887 316.26 li
186.156 315.531 li
186.615 315.792 li
186.615 315.27 li
187.875 314.541 li
194.895 318.582 li
194.895 319.257 li
195.471 318.924 li
202.491 322.974 li
202.491 323.64 li
203.067 323.316 li
210.087 327.357 li
210.087 333.612 li
209.808 333.774 li
209.808 333.819 li
209.808 334.422 li
208.629 335.106 li
208.089 334.791 li
208.089 334.818 li
206.901 335.493 li
204.741 334.242 li
204.741 335.502 li
198.981 332.181 li
198.981 331.524 li
198.765 331.398 li
198.765 331.416 li
198.765 332.019 li
197.586 332.712 li
197.046 332.397 li
197.046 332.415 li
197.046 333.018 li
195.858 333.702 li
195.318 333.387 li
195.318 333.405 li
195.318 334.017 li
194.139 334.701 li
193.599 334.386 li
193.599 334.404 li
193.599 335.007 li
192.411 335.691 li
191.853 335.367 li
190.881 335.925 li
183.861 331.866 li
197.946 309.618 mo
207.522 304.092 li
217.098 309.618 li
207.522 315.153 li
197.946 309.618 li
155.907 305.01 mo
155.997 304.956 li
155.997 305.973 li
155.907 306.018 li
155.907 305.01 li
155.907 303.579 mo
155.997 303.525 li
155.997 304.542 li
155.907 304.596 li
155.907 303.579 li
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 450 ]ct
[62.16 0 0 35.76 155.28 113.76 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 259 
/H 149 
/M[259 0 0 -149 0 149 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 259 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 259 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 259 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
k9g--k3:%Ys/>^%s"OHQmi_lh0FA.J3b%54pL=(TrW)O5"u%_<$9DX*gcGHrrf6/Sr;buqb2E;iq,.>n
-RSlomhuBX-O9u30N.$epJUr;rW)O."t(c(#V].Si@t*^r_)Edr;bu8b-q>"r_*,]s!7UEmhuBU,R=Z,
/5,+VpIkH1rW)O."sbH"#V8VAjt-0Vr\s'gr;cg5!(l>;bjbc)W2TN$s"OHQmi_lh0FA.J3b%54oj[kR
rW)[9r@e?]$9DX*lT4Mrrf65Ur;cg0!.*eCdGXo[s.&m_s!RgHmhuBX-O9u30N.$eoht`9rW)[2r?h^R
#V].Sn1a/^r_)Kfr;cg0!/9Qjf!b:\s*si;s!7UEmhuBU,R=Z,/5,+Voh56/rW)[2r?MLO#V8VAodo5V
r\s-i!#PV7rYPQ*!#Ob]h=9t(s/>d's"OEPnKA)j0FA.J3b%54o4%YPrW)g=q_8"1s'kgciB$sulXp21
rW)p1rd"PWjhTm6lJV]4qGR>@rW)I,"t(c(#V[r1jtQC)r?qREq\o>Zr\4@Ms"N4^r_)Qh!##82rY#3a
!#"CKkI0K\s*sl<s!7RDnJVTW,R=Z,/5,+Vo1T$-rW)g6q]u1m!\?u;g+<4^m3VfLrW)m5r^m%gjlu4'
hXLTEqdTLXrW)O5"u%_<$9C4WjuW0Er]:!3rW)m?r@e4*r]:!eg,f4nm:QD3rW)m0rd+MCjhUKGg#)k#
qbmA?rW)O."t(c(#V[r1jtQI+r\49urW)p9!#kb_r\4:Kg+`M!m:H>2rW)m0re::NjbNW>e@#@,qb-l5
rW)O."sbH"#V7N"jt-0ur[e!n!!*$!r>PSZr[e"@g+<4^s#0?nr;cg5r^m%grtjb\rpe;(s/>g(r@n3N
p*'Dh":>Js3b%54p1!t]!BO]g0`D(L0`F-2@bNmBNrP=4BDhi0')m4U!<3\o_#M3ni;]>E;Z/!B!;7?1
-Nj\\0JHDe0_\HF;Z&3K;Z/!B!;e/C0`4i&0`F`FP43)^!<*W1L&D#O''k>LLWd.+J,;n;,lRf;)ZCub
#RDt49BIf'9D_B[/-&?A,lRf@,lT@m9A1rr2uPZ,-N*rD(]Hu+(]FF6(BBi^l-&VsW;L-'0`D(J+oF"o
$N<'d@cf`H@fAFf;>rTV@e_YV3r3=@3r_8?Nr>16BDhi0')m1W')hn1&cc\+^rt[9SGZ:`-iO,A)Z1r_
#lZLX;W]\.;Z8BL7/ek?;YVX=0`"]+0`!L&9Dt%GB)M`/')mRb')hn1&ca9<LX*@-[f:jT9Dp.8!;RQ2
,QJ,L/-&?*/GMm;/H.j4/-&?<,lT@k9BIeu/H.U+2YSNu(]FF6(]Hu+(]FF5(]Tl\l.,=unc,Qc@f8"[
!<")<0`F-4@cf`J@fAFg0`4fI3WNXe0`F-.@d?)E3rY0;PP8\i')hn1')m1W')hn0')u_)^tR`;i;]>F
;Z/!B!<!i5-iPh!;W]\0;Z8BM-i?C30E>#K-iPgp;XcC+0`F`CP4rPg')hn1')mRb')hn0')s<:LYoQ-
[f:jT9Dp.8!<!i5,lT@o9BIf%9E$LB,lBk*/-&?@,lT@i9D'ju/H.R.o_UQD-3+k]!<!`58c8Yg(]Kd%
!8m&&n`THBW;C'&0`;"L0`F-2@cf`L@fAFc0`4fI3rUi53qd%Z3oN.!NWAYIPP\tm')hn0')m4U!<*W1
C&e7k_!9k;i;]>E;Z/!A!;n5D0`4i20`4iJ0`*6q7/en>-iYmo;ZAH+0`F]Fn,&:FAcNJC!<!Q0L&D#N
')j3X!8iS#[b\ClJ,;n;,lI`@,lT@m9BIf'9E$L>,lBk*/H-pp/GVs<9A1rr2u`IH2Z>'%!<*f68H9S+
!<*f6Qi\'(!8Zo5n^d71W;C&u0`O31@cf`M@fAF`0`4fJ3r3=]@bNmBNrJVHPQ#4n!<*W1H2nTW!<*W1
C'#"J!8YHfi6gK_SGQ4Y-iYms;W]\3;Z8BF-i?C40`P&C;VEi(9E+DWP5](l!<*W1K`Dbb!<*W1-3=e[
!8WD1[`l2[J,;n5,l]Fl9BIf(9E$L;,lKn.4tJ8U9A1rr2uN=J2Z>'%!<*f68H9S+!<!]8R$\]h!!!ho
l20_gnc,Qc@eqeX3r*7K3rc/X@fJLd0`N<r0`Nj);>rWK@bNmBNr8JJPQ#4n!<*W1H2nTW!<!N3C2+C\
!!!Yo_"PRei;]>F;Yhd?0_nW10`R[B;ZAHK-NYY6)Z;&]7/en4;VEi(9Dn8YP5](l!<*W1K`Dbb!<!N3
-70B)!!!YtL[g/C[f:jT9DTq5/GVs&/H:5!9E-R?,l\e],lBk*/G)Th/H.U+oE2+n-5ZX]rYPQ*!#PS6
rYGX'Ql#]$rtjAQc11i(s/>j)r\4=4pL<DKs/>tfraPaYq]Ynlr)*GSp0uf<s#U.>r:0rhWFlkC!<*W1
H2nTV!<*T4C2+C[!<3\b^s_0;i;]>F;Z8'C0_\K10`R[Ci;QXO-i4h\-i?C30_SE'0`!L&9Dn5\Vl+,>
rW)p1re1=br;cg0![]6,r;cj1fn\1fosXmMr(I#7r[de:l7Dsbs0ho"q]u%Wr?V;)r[db9jt-0Vr\sfJ
!ii7:r;cg5r^m%grYPR$r;cg5!/fFnh=9t(s/><oloP0FrUKnsr%Rjgr@n.Hs#Tm`lT4Mrrf6sJ!i`.3
r;cg0rd+MCrY#3Fr;cg0!--Z,io'+[s.&ISlnJI0rS[]Rr$V4Wr?qM2s"O1Fn1a/^r_*4Y!iMq/r;cg0
re::NrY#2Wr;cg0!0#QckI0K\s*sE/ln&0drO2`!r$;"Tr?V;)s"*n;odo5Vr\slLri5nsrYPQ*!#PV7
rYPR$!#PV7rYPQkf'2VmhXUWEmpbZFs/>kcs'ks]o-+&d!)`_=!'9j`qE!Rrrf7$Lri,hrrY#3V!##82
rY#3F!##82rY#3Mf"gn8g#2n#mo&O,s.'#Fs&/hDo,@QT!(?f)!&4.Fs"N4^r_*:[rho\prY#3a!##82
rY#2W!##82rY#3heqa%/e@,C,mn<%!s*ssTs%E>:o,@QQ!'^B#!%dt>r_(rrr\joNWiH!trYPQ*!#PV7
r>,O&Ql#`%r>,QnMAH9_kl?M#l2U:unc,QX@dcAXW;?#e@U_#F!:h<30`E3s3]^aG@bNmBNWSdNWVlhr
')m1W')hn0&cuf_')hn0&d*,n&chI;!,C`5rkQ_8s.&UWmkFd3qVVKS;C<glnf%HS!#kkUs"O4Gg+`M!
!q3%br;cg0re1=brW)m0![]6,rW)m0",r0O!:bgE54+.$LWd.+J+62#/H:4r[KK5r,U<B\)Z:r\)ZMA`
9A1rr2Z_VKrW)m5r^m%grYPR$r;cg5!fDjOrW)KQ!l9YIo]br2bOGS2nm_,Ms/>__"Cbgo0EChjqB>hl
rZM8&pgVr<"S%M4fFn/`r=]*Ur;cg0rbDB3rXo9PE>&6Nn\>3nC23R[mD-p'!1`UXnM(!5ptu9Q;C<gl
r#55Hr[7[`!&41Gg+WZf92!hKrW)m0re::NrY#2Wr;cg0!fW'NrW)JD!a.]NreK]mbI.D#nk8L(s*sgP
"A;B5,QR<PrZqI]!%dn<g+3<62`Cim(B=I7(]I#)!<*f6R/I$a(]K<j!!!i*klAQuLZ[jOnb;SRW:XQi
3WQ,PnH<<10JELq+oa7q+oaV!@ba!M3]cg$Nn=sE!<*W1HMmjC')lYE!<*W1EW#k;'(Na;R/Ld^^tR`;
i;]>>;XuLASG(kD;Gnki!:Lj+-iP%a0_nW*0`!I-i8@8Z&c_q2')mU`!<*W1-N*rD')mjg!!!Z%LB(KU
53@XX[dCO'J+QD)/-(1n[KK5r,U<BY)ZM)^)ZMAa9BIeu/.8np2qf&J!#MZ88Jh@+rYPR$!#PV7rYPQk
!#PV7rYP+hs2"Vgk3;$uk4/JMp1!YTs/>V\"Cbgo0ECMas"OEqs#U!clT4Mrrp^9H&c_nEWMt1VrW)p1
rb;EGrW)p1rc%oNrW)p1n\G0lr+bB0lepa[s.&d\oJ$<8p##sN;C<glmMc*QrYkejqGQf:lS/=r#hBUg
!"u3-KbF@brY#2W!##82rY#3h!##82rY"aVs&o7`k(iH7gp[64p.P$/s*s^M"A;B5,QR6Ns!7R^s"+">
odo5VrjDm^(BFH7!#PV7r>,O&Ql#`%r>,NmMAQ6lr>,I4n`g(iqhO:tp[Qf(s/>^%p,`5PoC2rm@PBJ9
mNMTar?2/%qI9:^iB$u.!n\+cri#l1rW)m0!buH_rW)m0!c`2mrW)m0!1`Sps-W[ujhUfPd,=qopepf>
s.&]="B&,F-NNQQs!Ra`!&47Is"N4^rnmk/&chp/!##82r=T/Y-5-:Xr=T0jN"Z*ir=T*[nV@-Iq`a+s
bI7G#pe1<3s*sXK"A;B5,QR6Ns!7O]!%e(Ar_(rrrjDh!rMoerrYPR$r;cg5regXSrYPR4n`g%hqM4G%
qWZ5os/>a&pcAGRnaQ`k@PBJ9m32K`rZV;&qdS8?rp^!ZrMf_qrY#3Fr;cg0rc.l:rY#4#n\G-kqJ,Q9
ot\f0s.&m_pb;`<n_aOJ;C<glm2H!PrYkejqbl-%rnmeFrMTSorY#2Wr;cg0rf$dUrY#3[nV@*HqEFV.
n;#5rs*si;palGpn[8Qn9-bb_nf%EEs!7R^s"+%?g+<63!q`Lmr;cg5rg<WarYPQkr;cg5r2B/Mrk\Ab
rTWV3bOPV2qdT@^s/>GW"Cbgo0EChjp*'GirZM8&qdS8?rp^'\WN#grrY#3Fr;cg0rc.l:rY#.!n\G-k
q.]nEk.o0us.&saq(Vi=nDFFI;C<glr#5)Ds!Rda!&4:Jg+`Na!q3%br;cg0r[.RDrY#3hr;cg0r."6l
r`T4aq`a.tbI7G#qb-`9s*sOH"A;B5,QR0Ls!7R^!%e"?g+<63!SS@h!<*f6QiIs%!<*f6M?"Il!<*f2
W:B-N_=r`Il/(sunc,Qd@f&4dW:'0Y@U_#F!:1m/0`E6q3rEIB3r_8?nH%8TrW)p1rb;EGrW)p1rc%oN
rW)p1qOI)krL!=ok.p$8l/;T3rDNMHs.&N8"B&,F-NNKOs!Rdas"O@Ki@t*^rnmh.')hn1')j3X')hn1
')mgi')hn1')I+JL](BM53@Xa[cFmsJ,N%;/H:4f[KK5r,U<BV)ZM)^)ZMAd9BIeu/H3'[g(s_hrYGX'
Ql#]$rYGWnMAQ6lr>5:.n`g"gp4qbon+#6(s/>s,rAstWm-t3f@PBJ9lQQ9^rZV;&rF5(Rn2gR="5"4d
!<*T4C2+C[!<*T4EH)Wj!<!Q+SFODnR.b:V_"?R;i;]>I;Z/<LSF#/:;Gnki!:(R'-iP%a0`=o=0^CFl
huhOC!!*!2![]6,r;cg0!fW'NrW)m0q1%pirE8hXjbNZ?e$f:+s%E;As*sCD"A;B5,QR-Ks!7R^s"++A
odo5VrjE'c(B=FOWiDHb!<*f6MZ!PS(\alul28BjLZ[k$n]gS.W2O/d3iK"BnH<<10JEM#+Tg*?i;"Pr
0`E6q3rNOa3oN.!nH[\Z!!!Y2WG;A3rY#3Mr;cg0pRLchr0[.ll+m;6bMWSpS5M$pS=Jm&"B&,F-NNiY
!mAdAq&98\rYkejrDNYLgbA`c#M'Lf!"u3--N*rD')mjg!<*W*J+8<l=nOuHL\Z_K[K_529.VWDJ*OHF
91pNU!;7<4_84b!)ZM)^)?MH@9E%T</H3'Zg(sbgWW3k7!<*f6MZ!PS(\O`sl28BhL\9p&l-&VqW9NgT
@U_#F!;@Z7deP'd0`E6q3rWUB3r\XNfFe2`W;mS1!<*W1EW#n:'(qdb_#0SkCAPa5^rt[7SE\r7;Gnki
!;@E0bPW:X)ZM2a)ZMMj;VEi(hu_IB!</kr')hn1')mjg!<*W(J+8<l=n=iWLZjN:[f(^?[KK5r,U<Ba
)Z7GI)ZM)^)ZMAf9A1rr[K,t!WW3k7!<!]8MM`5L!<*f+W:B-L_=r``LZRd*nH<<10JEM$+oKagYPKFB
0`<-p3rWUB3r\XLo)>Tg')hn0&d!&m')hn1'(_X`_#'MsCA;Q*^p2f#;Gnki!;mc5)Z7bYWVRP5-iFq`
0`Fu(0`Ku1n,B3b')hn0&d"#N')hn1'(^VCL\k6G537R)[KK5r,U<Ba)Z7DOU&#]-,lJV]/H/;r/H3'Z
g8_1O!<*c9MM`5K!<*f*W:B-L_=<<Bl0%T]nH<<10JEM$+oB[fYPKFB0`E6q3r`[E3r_8?nH.@BWVlhr
&d!&m')_h0'(VR__#'MhC?<7ti5jgZ;Gnki!;@E/b5eO<)ZM2a)ZMMk;W0>+0`Ku3eu,GE!<*T4N/SDJ
!<*W%J+8<k=n+];L[hgj[KK5r,U<Ba)Z.>NU&#]-,lS_^/H8B*/G1Rn[K5(urW)p6regXSrYPV)nu2*C
qSDZVk3;X1^@D54s"OHQp`]O_!3c2As"OEq!]je"lT4Mrrp^$A')hn1')lnL!<*W2i:<E._"sGfC?E>0
i47eG;ZA-E!;IK0b5eO;)ZM2a)?MTj;XcC+0`Ku2ee7r^rY#3hr;cg0s0hKJnV?sDn35ui['p!-s!7UE
p_s%G!293,s!7R^!\?u;odo5VrjE!a(B=FO(]K9l(]FF6(]<gpW:B-K_=!*Gl2'YQnbuu!0E;+I+oKag
SbXH/0`E3s3auRp3oN.!nHIPX!!!WErc%oNrW)p1r8@1:n\G!gmV;=.ot\#or_`eF!!)a3r6#)+q&98\
rYbnn;Go2&gbA`c"kF:d!"oqDMuXLi!<*W/[e#"=L\b0A550j%LUOYj9*-@=!;@E0_#TPl)ZM)^)?MH_
9A1rr[KkM&!!!h8WYbX7r>5;"or.EFq8)KSrTWS2\FKQ-s"OHQp`]R`!1ip/#9bcT+UU8>@bNmBnH[\Z
!!!Y2W=o11r=\qaopkQfq3^Vc!,CW2\D[?as!RgHp_s(R!1*U&q\fYd-Q37E;Gu4&rnn%4&c_nEVl(1,
!<!Q+[e5.?L\Y*F55RP*LUael9E-:;!;IK2_#_B5p_j>^,T6q>92!tirjDm^(Dm(Nr;cg5p$qdTn`fkc
q1nTtjlsAHrF5d\rrDm=ruq?h!1im."u%_<$9DX*g,f6'!n\+uri,hrrY"n^pRLchq3_.rmqUt"]&<Nb
s!RgHru1_PrQ>2,p_j>a-O9u3;Gu4&rnmk/&eb2Ar;cg0osXUEnV@!Es&n\PjbLFUrC[,9![IaGp_s+I
!0?mn"sbH"#V8VAg+<63!;-8jr;cg5o'uLRn`fhbl\FWen+"ZmrF5d\rrDa9!7LQa"u%_<$9DX*gcGHr
rp^!Zri,hrrY"e[pmglipmCA^k.pWIaPd"ps!RgHp)3qSp)4,_-O9u3;GuI-qCqp,!:Tobr;cg0o!\=C
nV?mBlTXHdq6n2LrCd/9rrDa2!5\@I"sbH"#V8VAjt-0VrjDj](]=@5([ghiW:B-I_<Ha;klC7fnbckr
0`M.=+U0VS$48h'@d?)E3r\XMfFn,_rY"YWqOI)kpmC;\lG3A6^#8fds!RgHlP]sT-O9u3;H!!<lS/=r
!S.n^!<*W![ebLDL\P$:54=:%LV:.o9E-:;!:(O-,U<X$/5&Y//ESM_[KG5"!!)s6lganOn`feal%err
n`dgYr*o[[rrD@."u%_<$9DX*qE!Rrrp^*C&c_q1''nKRSFODhR-AA^_!JkOi;?LQ-iX24)@.]<#RE+^
;D9f[0`Ku4ee.r_r=\G)r."6lpK?`Es+fcm^UF&5s!7UElPfdKrs/ZW92!tirjE!a(B=FO([(>fW:B-H
_<csTLZRd:nbZeq0`M.?+U9/E0FA.J@Ue%Prp^0E&c_nE''J3PSFODhR.4qcC?<7Ii;6FP-iX2;)Z(EW
-RT0*0N(g&0`Ku6ee.r_&eaB9rdXHnpK@2Rnil/j_7'56s!7UEpDW`D"sbH"#V8VAg+<63"54Ok!9E\M
W:B-G_>K)SLZ[j<nbQ_p0`M.O+n6][0JEh@3auRP3r\XOfFe/ajP^'.n\Fjck%a%o_Vk8g![f>q!!)C)
"t(c(#V].Sg+`Na"4e(b!9CTgJ+8<k=o;Fb53@X;[ereu9E-:;!::[/,U<X$/5&Xi/H3'YnJC-Rn`fb`
jG2m^q!lW!qI9IYrrDF0"u%_<$9DX*gcGHrrp^$I'&_^<_"O/VC?E>1i5jjQ;ZA-E!::[/-RT0*0N(g-
0`!L&huU8!i3r02p0$H?kD'%m`4#M8s!7UEm2?0S,R=Z,92"Cuodp*NhXU.#otf^EmHOH2`prk6s"OHQ
mNDcg0FA.J@UeXan2gR=hVdq>opFfTo"an5`o-Yjs!RgHmMZ9W-O9u3;H!!<lS/=rhR;s0oi^?>pP83m
`jY\9s!7UEmMZ9T,R=Z,92"q/jt-M?hXU.#otfXCror\3amoD0q-s@XrrDI1"u%_<$9DX*qE!Rr!iW'f
hVdq>opFfTs(^]3al*2hq,75?rrDI*#U^u*#V].S0JM99!h>e=hR;s0oi^NCqEF%sagV5!q+L`5rrDI*
s!7UM!\?u;g+3;TJ%"5(n`f\^mt^Lik3:(Zs/>^%s"OHQn0&#[0JEh@3auRP3Wc7Yn_W3o_"=#dC@5j!
^rt[9SG6"^-iX2>)Z(EW-RT0*0N(g&0ERc7i81p4L\+aF53Y8nLWd.+J+u\:,l[l@)YP'R,U<X$/5&Xi
/-CBO[cu]>n`f\^reKNhjlstYs/>d's"OEP!$UkU"u%_<$9DX*gH#J9W:BDnhr+%?p6blIi+hAhbM`Dj
qGI;@!%7aGn/;KY-O9u3;Gu7'"Iu"?i.p3unV@!EqH;`?jbM$fs*t#@rCd/9rW)F+"sbH"#V8VAgFWAS
s0hpkiUQI&o>0=>jlstY!3#a'r\4<Onf\2k0FA.J@Ue.S!2omrrUKm&iSa7Ao9eEMlG3>5bMWAjqGR;?
rW)L-"t(c(#V].Si@t3as.'&GreKI@nV?^=h`gLapP6r#!.Xi<rZqICneq]X,R=Z,92"CupalGprO2[h
iplR'o>07<p?D,3bOPV2qdTLXrW)U7r\+H^$9DX*lT4]"s/>hbrP7FNn\Fa`h.li&m(gg&s.&sar?qRE
oc!fW":,8e;H!!<n1am4qr%F.ijSB4o3'm5!/K`mbI7G#qb-l5rW)U0rZhUP#V8VAodoD[s*spSqs!23
n`fV\ieRDdk3:(Zs/>j)r%S-NpEBJh":@1N@Uf0pkW8aBq=4?tjP]RDnsJTTp1ia*bM`Djr)3G?rrDd3
r?hdT0JHC&0JMN@s.&oCqhO7@nV?[<losr'k(h-gs*sr>r$;:BpDWuU!=14X/5&Xp/H:4q[e]1MnaYl7
_=<<HLZRdDnc,Qc@f8"[!;dr=0`Ed+3rWUJ3rc/RnbKu_i:4VRR.b:WC?<7Si;]>F;Z/!B!<!i9)Z(o^
0`Fu00`R[<i;&/j[df.D=o1DA537RC[f:jT9Dp.9!!!#r)Z(f[/H/<%/H:4p[eK%MnaYl6_:j\+l-&Ss
W;L*)@f8"[!<45>0`F-3@cTTMW:ocU_!'_H_"O/nR+c<:^rtX9SGQ4_-iO,G)Z(o]0`=o10`R[:i:i#j
[df.M=nc(Q537RG[f*W7J,;n;,lRfD)Z(fZ/H&6&/H:4n[eAtMnaYl6_:XP2l1sSenc,Qb@f7t\!;eJL
3r<CK3rc/SnbhqN_!0eI_"!fEC@f75^rt[9SGQ4_-NF/D-iPgs;W]\5SGqI@i:_rj[df.C=kGq5L[U#A
[f:jS9Dp+9!;e&@/Gi*&/H:4l[e/hMnaYl5_:OJBl0.BTnc,Qc@eh_W3r*7N3rV2?W:KKN_!BqK_!m`F
CAqu1^rt[9SGZ:\-iPgq;XcC90`R[6i:Mfj[df.B=l2F=53@XD[f:jT9DKk4/GVs3/G(LnJ+C&=l0\$2
l0uOML\$;_l-&VsW;L-&0`F-.@er.T3rc/KnaaK_i:4VPR-AARC?<7Si;]>F;Z%pA0_eQG0^CFmSFPP.
L[DP?L[\I753Y8mLWd.+J,Dt;,lT@l9E%TK/H:4i[d`PMnaYl4_=WNBLZ[jEnc,Qb@KS;n3]d7Lq-rYN
s/>DVnA+MNn\FU\q.e`#k.o0us.&sa!@LeF0_SE10`R[3i:)Nj[df.A=oLV;53@XD[f:jV9E%Qd,YK[>
p.O^&s*sLGn*0?3n`fS[s2!0>k3:.\s7-,fmUGQEs/>>Tn%eGNn\FjcqO#`Hk.oF'qV_CDmS`F+s.&K7
mt^D@nV@!Eoi]a-k(hQsosXmMmRupus*sFEmHO33n`fJXdYIS]nEJ-ds/>ErmQ(?HnF?GHmD/;Nn\FR[
dVA]qlbL^%s.&RVmP"X2p#,T&m>(8@nV?O8dQZfKbI7G#n4W1#!.XjRo![lKo^VJ9m_RM1qhO:tbOPV2
nm_)Ls/>qemIBMXo\f8Tm[2dEp1i^)bM`Djnl"s2s.&B4l\G,@nV?O8iBHcqjbM$fs*sT4odp"ls*s=B
lKS!3n`fGWkD/>Xk3:(Zs/>NuqE"F5s/>/OlG3)Nn\FOZltYWsk.o0us.&[Ys"O(!s.&<2lA,&@nV?L7
nNPkpk(h-gs*s`8r_)f5s*s7@kiqj3n`fGWp4q=Vk3:(Zs/>m*q-rtWs/>/Os2!p7pYbSWm?mcce8"-]
bMWAj!1`^[oJ$<8khuK.k_Jo@nV?L7!'\^mk(h9krO2`Uoh4p.s*s7@s&nLKq=4">n\P.>cA1NGf(&J(
s/>[$ofE,OkjeYgk.pfNn\FjcpR'6@jhTX/n_jG;pJUZ<s.&<2rg;i'q6ogKqcWJmc9C?Fi3r!\s*sc9
odp,mkdLIn!/K\#qsj4@m(po$s68_2bOGS2pgWtYs/>/Or4r@`jhUcOn\FLYcYEGojhT't!1`g^pFuW;
mGRp#r0RI,jbN`AnV?I6e3<[ljbM$f!.Xc:pFQ>oo!\;$r)s#Sk3;g6n`fAUg5#6Sk3:(Zs/>d'q)\PS
p$q\EqSE.]k.poQn\FIXheMOnk.o0us.&p`q(Vi=qV^i#qO%7)k(ilCnV?F5j?Dckk(h-gs*sl<q(2Pq
s0h4$qH<`Ok3;m8n`fAUl%e5Qk3:(Zs/>j)q`4_U!3#,OpqckYk.puSn\FIXmV:Nlk.o0us.'!bs"OC*
s.&<2pmCt%k(irEnV?F5o01bik(h-gs*t&Ar_*,>s*s7@pf[KLjlld8n`f>Tq1m@Qjlt(\rpg#eraPdd
s/>/OpVH_WjhLlSn\FFWrbBYljhT@'q;D:Cr_iYJs.&<2pR(h#jbEiEnV?I6s&mH-jbMKsoX=dLr_*/?
s*s7@pK@<If'2_@qSC4-jlt[mmd^=Us'ksgs/>/OotgGSf"h!HopEd7jhTs8l/;T3s&/hMs.&<2opGOt
eqa-*n6*dqjbN*/jL5)<s%E>Bs*s7@oi_-Hr__>4l+tW"rJ1BQk3:(Z"K87[W2SqMpqcmEqCDP5fYHa=
dVAPlrgr8fbMWMnS1pJ'khuE,pR(e"r]\tikulV%o03.Ok(h-g"FknPIt-^k!4MK%qhG>/0Mr/a;;1:!
_;'h7L]<hAX6/ZinGoNSnbr"J_>>_d-RV:f#XmC^l'UFEl>$?LrLW/ebMWAjn_j3#nX01r"XG?W#REWJ
LZqt(535!.5lFUCLWd++J+g>B[ddMtLB9.`$N3iVl0,tMLZ4*hX8\RdX6&TcnaH#;_>>_a-RT2u7,,N@
R.4qICB'n)JGl)$^rt[$i:*-2+9Ef6#lQsALZhn751i(!;Z8r[;WW\\[cOse=o3sW0JEhf0`DCZ;;LL#
_>B#<L]"4ORf0;Ll.5Cana=6j.g.4I#U_#!#QR9K_!%-cC=$_nT)F3<T'!iCi8*>ZR/8!/,U<X@,lS&L
52D"\=oDLL55\=W5lFUCLZ#Vn[dI;qLB]Fd$8=.@$N<m&$K(+<_=tdoL\RqKRf0;Ll0%Tena+*h.g@@K
#U^u*#l[3l#iEGkR.?WmCA=D!JGl)%_!L"+i9Zj.+9j):#UCZ$#l[!f#iCF7=m]A?558%S5lFUCL[hgr
[d7/oLB9.`$N2[Y;?%"';;pd&_:+/>Rf9A`X8SLcX6/Z\naOBm_>>_a-RT2u-iZU7#ld<O^uq*7C&r("
p7D55rLW/e^>S[OpR(h#![K#sr?VD,rs8WgiJ6T!ffo9s!'p6UrBU<Zk(g[ZqH<AlqhG5,0FIb4rsJ^%
!".`Mk/#r1pkJmNL]3b9X8\RdX6&T_nbp;k_>>_a-RT2u-iXJN6i[MP^uh$FC@c0@Sne7Tp7D86rLW,d
_r(OQl'V>j![K#sr?VCKrB:2eieQZ!ks"N!!E),\5k\+T5lFUBLWHq$[cprlLB9.`$N2X^$8=/2$4?c0
jQYgCmYC+`r2]dbpT+7]rN#)FcLL]"kJ@$G![f?$r?haS-RV:f#l[6Q^uh$UC?B:/T)F36T)F3<T'!i;
i:GmiR/8!-,U<Zo,R"H!,X)J>r]]Cuk#qICiBI0;rBU*TrBU<Zk(hTtm^D:]qhG5,0FIb4$48I@$48I@
;$mY-k3;!DreK?cpoFC_p8e.\rN#)Fhsp%&jh^gE![f?$r?hpX-RT0*-RV:f#XmgjkEu::gM6MTrda^6
rIFj<k.p'9k2>?gq]Gqc,RF>o$4%n&#RD\$4pVEXk(i;+qH;Q:peq)Vp/:iSrDMd5l*fQZj]VJ9!\c;8
r@eKa0JEh@0JEhfr__kCn\On7gkPlupT+7]p8e.\ri>/FnF>?)jMC^D![f?$r?hjV-RT0*-RT0Ir^>qb
p6b?:ghHh>pR_>6p7D55rgr5ep#+K\jI#fe![K#sr?MXS,U<X$,U<X@r]]M#qcW5fgcb^'pJUrTp/:iS
r_hj5qR4k]jB;A8!\c;8r@eNb0JEh@0JEhf0`DCZ;<d?+_;0nGRea#aX8SL\X8\RdX6&Tmn`Rad_>>_a
-RT2u-OC&+-O9u*-O;(IrWiKll+lAIh.lq>rgrtXrIFU5rdas=jhT7$m$RO7q]Gqc,RF>o#m_e%#RD\$
#UC\p#QR'QLZDUo4odkJ5ke1T5k\+T5lFUBLX<L"=n5_mLB9.`$N2Xc$8=.@$8=.@0JEk4;#gshl/]\>
L]+=QReEf\ReNl]Rf0;Ll-o1p_<o)9.fq(G#lQ+X#U^u*#U^u*-RT2u6i[MY^uUmFCA_iFO8XV&T)F36
T)F3<T'!i;i;&c(R/8!-,U<Zo,ROf&,R=Z$,R>Y@#lQpe#j[9,=mJ9G55f$j5k\+S5ke1T5lFUCLXW^2
=lWWb_Yf/j0JEk40F%q=0FA.@0FIb4!Ds4&;=3W._=<<QL\\%MReEf]ReEf\Rf0;Ll.>I^_#Q[s.fq(G
#lQ+U#U^u*#U^u*r?hV6#lR0Y^uLgUC@>p5O8XV&T)O96T)F3<T'!iDi;DNiQiJc:+9Ef6#lQ"R#UCZ$
#UCZ$r?MD-#lQsSLZ;P753b?-AGnde;Z8rT;Z/lZ;W`bn[eI5e=oQ;;LB9.`$N2X`$8=.@$8=.@r@eE_
0JH?2$;p6Uj1t_Nk(iZ3rL3J]rL3G\rL3_djlu"!oC:YQr]^<3![f?$r?hgU-RT0*-RT2u-O'i(-U\4G
7..kRR/NE6CA*_eJG5Z6JG,T5JGu/%_!U(Ji8'e"0)csp,U<Zo,R4T#,R=Z$,RF>o"pcJ"4pVEXmYC.3
pfZ]Bp14+epJUrTp/:iSr_hj5o![ekh-']n"G_ad0FIb4#7<.=$48I@$N2Xa$8=.@0JH@$$Lm<M_=GG)
L\.\HReNl]ReNl]Rf0;Kl1sl3n_:nY4p3Ad-RT2u-O0o)-O9u*-OBYu#RDe*#U^uf6jW:tp6b67k%ap@
p5f0&pR_>6pR_>6rLW,drnubngR.pl"<\g4,RF>o#7)S##RD\$#lQ"S#UCZ$,U>Q;#k3WH=m0#N56!Y:
AGndf;Z/lT;Z/lZ;Wii8LYfJo=o6&;0JEk40F%q=0FA.@0FIb4"UZq;$8=14$M!B?_<QgS?h:AtReEf\
ReNl]Rf0;Ll/D0h_>M.H4p!)Z#lQ+U#U^u*#U^u*r?haS-RT0I-iF>@^uCaHCAj%gGkd="O8XV&T)F36
T)F3<T'!iIi8^4!R/8K;,U<Zo,R4T#,R=Z$,RF>o"UHA!#UC\o#k<]0=mA3LMZ#R6AG]p95k\+S5ke1T
5lFUCLZ,]*=n5_qo_lW.0JEk40F%q=0FA.@0FIb4#mr@?$8=.@$;j[jl/KPGL\Y9WXRrUmReEf]ReEf\
Rf0;Ll/hI$_<o)=o)1`R-RT2u-O0o)-O9u*-OBYu#m_n+#U^u*#Xh)N^uCaJCAj%gMZ%eoO8XV&T)O96
T)F3<T'!iMi:*,tR/cXR/cm:D#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R=Z>54OEf=m\BQ55C*73VR(_5k\+T
5k\+S5lFUCLZPu;=lWZ`oE<%J0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0Mt^;l/BJML\ur$?h:AtReNl]
ReEf]RK0DfMWO*dnbL#X_>Wp-5!C>A#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(f7.J(OR.tFjCA*PaGkR3s
JG5Z6JG,T6J,l2?A*(Mii;T+sR/QIV/hSCp#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>YZ54OEe=oCPT55'm5
3VI"^5ke1T5k\+T5QF^]2!'MX[f<ee=o7gm0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0JEk(l/KMZ_=*0Y
-MLm<XT"[^X8SL]X8\ReMZ9a>l1"6@n^PDPncC0d#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>^nR/<9>
CAql?MZ%enO8a\'T)F36T)O9>A,i.__"HX[i7+.kmfFa[#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]:
=nZ"e55o0gMZ#R/AH"jf;Z/lT;Z8r\2#gJ9L\eIM[a\IXoE2*I0FIb4#7<.=$48I@$N2Xb$8=.@0JEhf
0FI@7n\O_2o8!:Fr[.>Go;qnZp8e.\q5X[VR[T+kRf0;Ll0n/j_>Nj+W@'&!r?hgU-RT0*-RT2u-OC&+
-O;(I#U^u*n\Fjcl^79YrLX"$p58fnpQ,9'p7D55q47b"J:M->JGl)*_#2":i6n"jmfTI5,RF>o#7)S#
#RD\$#lQ"T#UCZ$,U<X@,REpqqcW&ao03+Nratk]rAjU_rBU'SrBU0V"Z/J01c.Jr;XfJ9L[V\"=oS'm
WWFk.$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf$M!B=_=`T[X8OC=?hg`#XSnU^X8SLbX8[tYR[U:7rgNed
k3;I,f"q:#rpp&f![f?$r?hgU-RT0*-RT2u-OC&+-O;(I#U^u*n\F(MokO>prFbh]rHS'trIFX6rIFg;
raQ%\J=^9MJGl)%_"-F<R.m!In,B3d,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcLYu>.55J1UB(q/_
MZ#R0AGndf;Z/lY;Z8KT5X84(r]pE[k(iN9i*#VR!;-8j";_%l0FIb4#7<.=$48I@$N2Xb$8=.@0JEhf
0FI@7hnf&BpT+6>ra5M/nuVeYpT+7]!3?$Tr2]gcrN#&Ep@71ZmD/enri$#5!%0-"r?hgU-RT0*-RT2u
-OC&+-O;(I#U^u*n\F%LpM0Gos(D@EpPSoop5f0&pR_>6!1s*ur1<n<rLW,dp>G/%ka2A=rhfl3!$ifq
r?MUR,U<X$,U<Zo,RF`%,R>Y@#UCZ$nV?")pHJFOr_i],pPSo0p14+epJUrT!)i_Or)3MZrDMa4p9s?k
j&lE:Wr2o!0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0JEk(l/0>PLB<p5X7r[n-MLm<XT"[^X8\ReMYX=O
Rf0;Ll1sl=_;<!/fW"fL![f?$r?hgU-RT0*-RT2u-OC&+-O;(I#U^u*n\F%LqJ-%Fs+'g7rFbk^rHS$s
rda^6rdauXq4@P8rLW/eq;Cq5fpDfkVu6Ss,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcLYl8755IJC
5k\+SB(q2]3VI"_5k\+T5lNV9;Z/lZ;W`c1[ea.V=TR4mrW!$:0JEk40F%q=0FA.@0FIb4#mr@?$8=.@
0JEk(l/KPX_>K)fX8SL\X8XI>?h:AtReWodMOKukMY=+LRf0;Ll2C/N_9]pufFn/`!tlt/#lQ+U#U^u*
#U^u*r?hmW-RT0I-O;(I#k>^nR/!'HCAsh'JG,T6BD.5]Gk[9tJG>]=@t9)>A+lMmJGl)%_#E6li6.Jg
ee7r^!tlk)#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]:=n>eo55nIY5k\+TB(h,\3VR(_5kn4[1dF;_
2"jiG5lFUEL]</.[`_eZg(s_h(DebZ$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf$M!BN_=#/<L\n.NReNl]
-MCg<XSnUcX8\"VRfA9FReEf\Rf9AUl1jKCn]JZRfFe/a&eZQ>#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I
#k>_(R-C":CAXV$JG5Z6BD.5^GkR3sJGc#<A,h)ZA,h)QT)F3=T(Bbh^]<<8QjD7U!!!WE,U<Zo,R4T#
,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\k68=oCP];Z/lT;Z15$MZ,X0AGndk;Z8NQ5lW\@5k\+S5lO[VL[Kot
[`V_Yg(s_hWi@a,$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf$M!B:_#T8bX8\R]X8OC>?N@2!XSnRfX8IkR
3W5E@X8SLcX68`m_>M+TfFe/aWMq6m#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>^dQiLmqT)O96T)E=!
MZ&G2GkR3sJ,l2=A,S(ZJG5Z6JGl)&^se\FQjD7U!!&pp,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<Zc
LYZ)555.tS5k\+SAcR_`MZ#R/AGnan;Z&BM/,_a-;Z/lZ;Wihf=n5\soG8>CWWFk.$N2X`$8=.@$8=.@
r@eNb0JEhf0FBKf$M!B:_>ftuX8SL^X8f7!-MLm=XSnUeMYT:2ReNl]Rf0;Ol.s2C_#j0?')nj3-RT2u
-O0o)-O9u*-OBYu#m_n+#U^u*-RT2i^tkCXJG5Z6JGl)9T)E<rMZ%eoO8XV.A,.eVJG5Z6JGl)(^uCaF
Qic^h')nd1,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcLYZ,55ke1U5QF(C;Z15%MZ#R0AGndm2#/[#
5ke1T5lFUFLZ_h#=TJ*nWWW;%0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0JEk(l/9DW;>ls\X8T*tReEf]
-MCg=X9>\pRYm!r3W>K@X8SLcX6]$:_;<!.o)>Tk!!"Ao#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>^g
R/TMPJ,l29T)F35T)NBrMZ%epNs&j@J7E*_0E-LqT)F3<T'O2^R+[i,n,B3f!!"8i#lQ"R#UCZ$#UCZ$
r?M[T,U<X@,R>Y@#k<].=oLV`5ke1T5k\+TB(h,\3V[+f'0nf>2"iI!5k\+S5lFUHL\=m#=TR6Vr;ZmQ
0FIb4#7<.=$48I@$N2Xb$8=.@0JEhf0FI@7ikYW2qbd?]p8e.\pT+6>p0[TrriQ<kRYq(gpGr2@p8e.\
ri>DMqn^Up!SFCM!!4Mq#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>^nR/<9J7/h`1T)F36T)E<qMZ.kt
O8`MgJ:M//)tu#aJG,T5JGu/,^]9bEQiYd9r;ZmE,RF>o#7)S##RD\$#lQ"T#UCZ$,U<X@,REpqlrj$b
q`b!Ep/:iSpJUs%p58i0qdf[>!^K"-rYbG\rBU'SrBU?[n;$sta]SYu(]FC:(GINMr@eH`0JEh@0JEk4
0F8(?0FBKf$8=.@n`fS[o>13!rL3G\rgNP]r?h8GqlK^urN#oAp,W)?pT+7]rN#\Wq!#o:!SA%a!!<i]
-OBYu#7)\)#RDe*#lQ+W#U^u*-RT0I-OB7Xp6b98pdG(2p7D86p7D4qpPSoos,[(crLX!-p+QAppR_>6
rLWr&o>&J8!S.n_!!<iZ,RF>o#7)S##RD\$#lQ"T#UCZ$,U<X@,REpqqcW/dpceXAp/:lTp/:j$pPSo0
s()$@rDNV4p+-),pJUrTrDN'=a]So'(B=FO(GINMr@eH`0JEh@0JEk40F8(?0FBKf$8=.@n`f,N!&4+D
rL3J]rL3G\r?hPOq-X*%riZ*ur?CqqrL3J]rL3\cnEJ67r4rZk&c_nE&go%4r?hgU-RT0*-RT2u-OC&+
-O;(I#U^u*n\F4Q!%7J.rIFX6rIFU5!,):DpPSoora>Sor>YG`rIFX6rIFj<nA*M?pQu6;&c_nE&gS_.
r?MUR,U<X$,U<Zo,RF`%,R>Y@#UCZ$nV?1.!$q8%rBU*TrBU3WrDNT+pPSo0rY,-+r>G;ZrBU*TrBU<Z
n;#Y!nlZ7P(B=H8W\?+6r@eH`0JEh@0JEk40F8(?0FBKf$8=.@n`f5Q!ql6&r\4%CrL3J]rL3J]r?h5F
s/c7'pT+6:p,W,@p8e.\ri>SRh8/Kp#hTai!3)qF-OBYu#7)\)#RDe*#lQ+W#U^u*-RT0I-OB7XkEl>2
j-]fnp-ek0pmqJWrIFX6rFbh]s*4QOpR_=&p+QDqp7D55rgrYqigAqs#hBUg!2l_?,RF>o#7)S##RD\$
#lQ"T#UCZ$,U<X@,REpqk?.k0G$4eip-/F?rDNMjrBU*TrFYb\s#L)mpJUr-p+-,-p/:iSr_i9Ak?6hJ
#kSoLWi?jh0FIb4#7<.=$48I@$N2Xb$8=.@0JEhf0FI@7ke[2ir@mtCs-itVp8e.\pT+6>qd9=N"K\]-
R[WrNr?CtrrL3G\rgNkfn`fDVhSBKg&e_1C&go%4r?hgU-RT0*-RT2u-OC&+-O;(I#U^u*n\F@Ur8[`'
qF(<NrIFU5rIFX6rFc"br^-g5G[Q&Pp7D4%pFlJqp7D86s.8brnX/!s#k&B=Vl(.Q,RF>o#7)S##RD\$
#lQ"T#UCZ$,U<X@,REpqkZRh,r?VD,q*+aBp/:iSpJUs%qhkAA"?AIU5X>$@r>G>[rBU'Sr]pK]nV?g@
e6)eDri-)$!&-)6r@eH`0JEh@0JEk40F8(?0FBKf$8=.@n`f>Tq=Oa\r@mtCrL3G\rgNP]r?hPOr$_QF
rL3G\rZ_%rrL3J]rL39@qn^Up!:p,g"98EL-OBYu#7)\)#RDe*#lQ+W#U^u*-RT0I-OB7XlBqS2qr@W&
pI+t1p7D86p7D4qs,-_Args(=p7D7&p+QAppR_>6n\>-lb*W1trhfl!!$ifqr?MUR,U<X$,U<Zo,RF`%
,R>Y@#UCZ$nV?I6s&o,?r?V,$rBU'Sr]p0TrFZ(er'gT_rBU'SrYbD[rBU*TrBU%2rJ/Kt!SS@g!!4i.
$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf$M!BN_>D%Kh=gO@0_SBBReNl]ReEf]-N,@hX8SL]X8O793W5E@
X8eXbl1jMb_#`1$r;ZmH-OBYu#7)\)#RDe*#lQ+W#U^u*-RT0I-OB7Xp6bQ@!4_a_r[7D-rIFX6rIFU5
rb)0sqO[Y9pR_=&p+QAppR_D8s1n6Aad<+[')_e3,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\k6E
=TD\"G5`c\55db@;Z/lS;Z:;,7J]p\5ke1T)>5TZ5kn4Y;F!M;LWN[)g(s_h(DebZ$N2X`$8=.@$8=.@
r@eNb0JEhf0FBKf$M!BK_#j<&_>`9bp&-T<;?!$XX8SL_X8f7"-N>LgX8SL]X8O7:3W5E?X7>H"_>M+T
fFe/a&eZQ>#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>^uQic=.R/XVij8CA!7/h`1T)F3=T),&XBE(?n
T)F36T)BW&0E$FpT(0VFR.lsRee.r_&eZH8#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]<=TWbi=oMY"
G5W][55mh@;ZB#^5ke1UB)b<o;Z/lT;Z.L-/,_a,;XoOp=n5]$g(s_h(DebZ$N2X`$8=.@$8=.@r@eNb
0JEhf0FBKf$M!BL_>O!*h=gO?0_\HCRes/`X8SLaX8[tZ-71.0ReNl]ReEf\,54+rReWrRl.s2C_$J[+
!!!WE-RT2u-O0o)-O9u*-OBYu#m_n+#U^u*-RT2i_!dZgj8QR^j8CA"7/_W9T(eiTJGYr;@g$FW6\'^]
T)F35T)BW&0E$FrT(0VUR-9nCee.r_&eZH8#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]==o<IB>P<7=
,kjM$5k\+S5l4IY1^%E&76j-4;Z/lS;Z.L-/,_a.;XoP*=lWWjg(s_hWi@a,$N2X`$8=.@$8=.@r@eNb
0JEhf0FBKf$M!BN_>3d&h=gO?0`FrG;>lsXX8SLdX8IkSX8SL]X8SL\X8X=:3W5ECX7>H@_;<!6fFe/a
WMq6m#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>_#R/,e@\G"t_-iYRg7/_Z1T)F3=T)<*tT)F36T)F35
T)K]&0E$FtT(0VdR+[i4ee.r_Vl(dc#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]?=o!7>>PWIAG5W]\
55db@;Z/l[;Z&BN;Z/lT;Z/lS;Z7R-/,_a0;XoP9=k$RToG@M,!rt#/$N2X`$8=.@$8=.@r@eNb0JEhf
0FBKf$M!BP_>i?cp&3\Hp%\4Y0_SBBReNl]Rf&'?X8\R]X8SL]X8O793W>KEX7>HO_9]pune1r$!rs\r
#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>_%R/a\jj8HL^j8CA!7/_Z1T)F3;A,DksJG,T5JG5Z6)tkra
JGYr.^]9bEQiZXgrhfhu,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\"[K>Pr[BG5YY>G5W][55db@
;Z/lY2#C2M5k\+S5ke1T)>5T[5l4IPL]*"M=T\5qWr;u"0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0JEk(
l1;akh#Q:)p&3_@p&-T<;?!$XX8eXfMYO7NReEf]ReEf\,54+rRfBGgMYcT4l,gaCnu8Vf!!4Mq#lQ+U
#U^u*#U^u*r?hmW-RT0I-O;(I#k>_(R/WKP\G"t]\G,%^-h]t-JG,T7JGs'RT)F35T)O96T)BW&0E$G$
T)W=#_"5@`Qic`SVu?Yt,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\k6M=oMY!G5YY>G5W][55mh@
;ZB#]2#'uI5k\+T5k\+S)>>Z[5QF[`;D^6#LWN["g)'_g!uEXF$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf
$M!BS_>X'*h=gO@h=gO?0_\HCRej&hMMdjkMMdkrX8SL]X8SL\X8O7:3W5EHMXfrV_>M+MfFn/`!tlt/
#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>_(R/Q(D\G"t^\G"t]-hg%-JGPl;@g%=4@q1&_T)F36T)F35
T)BW&0E$G$A+@@`R.lsKee7r^!tlk)#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]D=oEOB>P<7>>P<7=
,kjM$5lFU[;?es75X7._5k\+S5ke1T5k\+S)>>Z[5lW\2LY,c#=U<^t!!!fO0JEk40F%q=0FA.@0FIb4
#mr@?$8=.@0JEk(l1i*jp&3_@p&3_?p&6Z=;#m'aRf0;dM?B<JX,?nFp8e.\pT+7]pT+6:p,W/As,-@2
h8/Kp#hTai!"onl-OBYu#7)\)#RDe*#lQ+W#U^u*-RT0I-OB7XpmCm;rODU^rODR]r[7P1rC$U7rLX!u
"+Zu7A,_#PT)F36T)F36T)BW%0E6S&A+@@oR-9nCee.r_&eZH8#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@
#k<]F=o!7>>PE=>>P<7>,l^('55dbF;Z8KT5Z1K:r]p0TrBU*TrBU*Tr>G;Zs$6T@nV?:1j&lZA(B=FO
nLuX(r@eH`0JEh@0JEk40F8(?0FBKf$8=.@n`fndp%A=?p@\C?q"4X[r@mqBrL3YAr2]dbpT+7]p8e.\
pT+6:q`4W\".G[9RdoY/_;<!6fFe/a'&Y,b#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I#k>_,R.]M=\G"t]
\GbIbj8CA!7/_Z6A,MqsJG5Z6JG,T5JG5Z6)uD;f"p9C+@t=*bnX/!s#hBUg!"u^c,RF>o#7)S##RD\$
#lQ"T#UCZ$,U<X@,REpqqH<K7r`f)>r`]A,pNHK\p-/F?r&"=LrBU*TrBU'SrBU*Tr>GJ_rWWHi5Vtar
L\=m#=T[:n!<2Ki0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0JEk(l2&6qh=pU@h>6gCp&3_@p&-T=;?!$`
MYO7NReNl]ReEf]ReEf\,6'\$#QCe)RdoY>_9]q!fFe2`huY8R#lQ+U#U^u*#U^u*r?hmW-RT0I-O;(I
#k>_,R/XVij8HLfj7q[5\G,%^-hg%.JGs'RT)F36T)F35T)O96T)BW.0Dl%RNrX_#^]9bEQibhO!<0D.
,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\b0Q>PE:@>Q.k#G5YY>G5W]\55mhH2#'uI5ke1T5k\+T
5k\+S)?25b#6&-55kTp2LWN]rnH(Bu$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf$M!BW_>N-fp&"F\h=pU@
h=gO?0`"WN$4<5jMMdkrX8\R]X8SL]X8SL\X8X=@#Q1\"l1jMb_>E-l-RT2u-O0o)-O9u*-OBYu#m_n+
#U^u*-RT2i_"sGs\,a&5j8HL^j8HL]j8CA%6j<o&J:M->JG,T6JG,T5JG5Z6JG,T6)uKp<O8m#e^r_u@
[K7^"#lQ"R#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]I=TDV&>PE=>>PE=>>P<7=,l0\/#RE[\1c.Jk;Z8rT
;Z/lT;Z/lS;Z7R3#6/65AFYGs=o7^j0JEk40F%q=0FA.@0FIb4#mr@?$8=.@0JEk(l2&6nh=gO?h=pU@
h=gO@0`4fI$3Qaionra;r2]arrL3G\rgNP]rL3J]rZ_@IqQ05OcGBFpqqqN'-OBYu#7)\)#RDe*#lQ+W
#U^u*-RT0I-OB7XqO%/ip>c+]pZ)4^p>c-"r'^Mi"+]FlA,_#QT)F35T)O96T)F36T)K]/#5XDN^se\F
R/=;n,U<Zo,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\b0N>P<7=>PE=>>P<7>,lBk*#Q[26!Hp=!5ke1T
5k\+T5k\+S5ke1U)?0p;AFYH-=n5\ql2'oM$N2X`$8=.@$8=.@r@eNb0JEhf0FBKf$M!BW_>2p\p&<e@
p&3_@p&-QG;$m[0$N0SrReEf\ReNl]ReEf\Res/bM?4tG#PkIkl.s2C_#V:IhuF&]-O0o)-O9u*-OBYu
#m_n+#U^u*-RT2i_"sGo\G"t^\G"t]\G,%`-NYYC7/R>gj8OT&T)F36T)F35T)F3:T)N4&)]K!+Gl*Ql
^uCaFQiMp<[K$U3,R4T#,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\b0L>P<7>>P<7=>P`OBG5WZd55Y]aG5ac#
;Z/lT;Z/lS;Z/lX;Z8KU)&WW=3W!@WLZ_h#=oR[^nbt3I$8=.@$8=.@r@eNb0JEhf0FBKf$M!BW_=ud[
p&3_?p&<bIp%S.Y0`DFTp&1?QX8SL]X8SL\X8\ReX8IkKXRYQA_;<$-_#!!g-O0o)-O9u*-OBYu#m_n+
#U^u*-RT2i_"sGm\G,%^\G,"`j8QR^j8LG*#l3NZJG,T5JG5Z6JG,T6JGu/<A,_PfGl<]n_"!fFR/Vm;
[f.NW#UCZ$#UCZ$r?M[T,U<X@,R>Y@#k<]H=nc.pG5YYCG5HI^>P<7>,lS)FG5X]";Z/lT;Z/lS;Z8r\
;Z&BNAGnOeAFYHK=k$UQl2'oV0JEhf0FA.@0FIb4#mr@?$8=.@0JEk(l2&6qh>b@hh=gOAh>c=*p&3_B
o`iFU0JEjih=pU@ReEf]ReEf\ReNl]Rf&'9XRYQP_9]sr_"usq-RT0I-O9u*-OBYu#m_n+#U^u*-RT2i
_"sGt\Gnbi\G>1aj8HL^j8HL`is(O(-RT20\G,%^JG,T6JG,T5JG5Z6JG`pSO8aD'O7C!cR*(fpL\eFc
,U<X@,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\b0Q>Q6>Q>Q/gAG5YY>G5YY@Fp:Q2,U<Y">PE=>5k\+T5k\+S
5ke1T5l<J9AH"UgAG(`VLWN]rl2:&X0JEhf0FA.@0FIb4#mr@?$8=.@0JEk(l2&6qh>P4jh>Q1'p&3_@
p&3_Ep&;r40JEk5h=gO?ReNl]ReEf]ReEf^Rf839XSV2Vl,gd=_#3*s-RT0I-O9u*-OBYu#m_n+#U^u*
-RT2i_"sGt\,\_l55Vk`j8HL^j8HLcj8P&?-RT3!\G"t]JG5Z6JG,T6JG,T7JGs'RO8X;)O2/R&^r_u@
L]"Re,U<X@,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\k3S=oMY(0)JlHG5YY>G5YYCG5b)8,U<Zp>P<7=5ke1T
5k\+T5k\+U5lNV8AH+Xk3B:X?LWN]pl2:&V$8=.@$8=.@r@eNb0JEhf0FBKf$M!BW_>`9g_YW*^p&<e@
p&3\Hp&)i.M#H0'p&:ERX8SL]X8SL`X8e(WRfA99XRYQ#_>M.F_#3*q#U^u*#U^u*r?hmW-RT0I-O;(I
#k>_,R/XVn55Me_j8QR^j8HIfj8=r9`r3FEj8@s:JG,T5JG5Z6JGPiA@q1%>@q0cWO8aCo^se\FR/)O8
[Kd'`,R=Z$,RF>o#m_e%#UCZ$,U<ZcL\b0Q>Pp,M>P<7>>P<7=>6&jE9)Za->6&j@G5ac#;Z/lT;Z/lW
;?es75X7._3VI"_3UqmW=n5_jl2:&U0JEh@0JEk40F8(?0FBKf$8=.@n`fndrn[FfqVCo=rS@2?rn[Rn
qhY9.rS@5@rL3G\rL3J]rL3\cre^fH?XJ]]XRYQ2_<o)6_#3*p-RT0*-RT2u-OC&+-O;(I#U^u*n\G!g
rj_egqRH:[rODR]rj_rf!64lTrODU^rIFU5rIFX6rIFj<raQ%\MMbpCGkR0uGk&T/R-9q4L]"Rb,U<X$
,U<Zo,RF`%,R>Y@#UCZ$nV?sDr`f4OqHN];rEJu=s'#J-r_!"*rEK#>rBU'SrBU*TrBU<Zr\O^BMMa7i
3VHt`3Uqmf=lWZYl2:&S$Lof($N2Xb$8=.@0JEhf0FI@7qSE0epqlpap@\C?qt9s]"300Q`q>/dh=pU@
ReNl]ReEf\Rf&'@?h:Ahl0Q7C_=k\Bhuj>D-RT2u-OC&+-O;(I#U^u*n\G!grj__eqmc@[rO;jfq;VR;
\@@Rl`r3FAj8FN&T)F35T)F3;A,M5_Gk[9h_"!fFR.c=5[KHlE,U<Zo,RF`%,R>Y@#UCZ$nV?sDr`f.M
qcic;rEK&?"%ld%9(g1%>PE=>5ke1T5k\+S5l<J:MZ#R0AFYHK=k$UHl1slJ0F8(?0FBKf$8=.@n`fnd
rn[:bqq_5DqXsgCr:U'/!o;\Pr\jM,rS@2?rL3J]rL3G\s-iqEpg<]qn`fqecb]7hq;D3!#m_n+#U^u*
-RT2i_"sGt\Fr,a\,a&4j8HLcj8P&?\@@RuPP<)q\G"t]JG5Z6JG,T7JGs'RMZ%eqO7C!cR*(fgL\\CW
,RF`%,R>Y@#UCZ$nV?sDr`f(Kqcic;rEK2Cr^m5r>>"mXpVm)8p3-C"pJUrTp/:oUr\XD-rAj[aonWL$
a]\3!qXOP=#mr@?$8=.@0JEk(l2&6qh>>(d_YW*_p&3_Hp&)i.p&-fCM#H0'p&:ERX8SL`Ws4H=R[T+k
-MCg@XSV2Vl,gd4_#!!g-OC&+-O;(I#U^u*n\G!grjVqlp-/>_pZ)4^s5X$;rT!j?pW!0Ap>c.&p7D55
qORn$@t9)>@qYLmrcn:#s1n6AadDXSqR6AK#m_e%#UCZ$,U<ZcL\k3S=oMXu0)AfHG5YYFG5Ou2G5[Tu
`Vj$7G5ac#;Z/lW;?es75X7._B(h,]3W3LfAFYGs=n1bQnI%$)$8=.@0JEhf0FI@7qSE0eo>:@[p\"L@
rl4d,r\jJ+rS@MHq=X]Tp8e1]r2]gS".D51MZ+ss?hg_ml-@-C_=>>;i!Un[#U^u*-RT0I-OB7XqO%8l
o03#\pZ)4^rf6g7rfd&q!4`$<pZ)4&p7D86r1<mt"+W$XA,^-8MZ%etO7C$7R.m!<L\eFe,U<X@,R>Y@
#UCZ$nV?sDr`etHqHN];rEK7nq0)b#qSiEPrEK#>rBU'Sr]pBZr\O^B.k<IUB(q2]3W*FXLY,c#=mtVQ
nI%$)$8=.@0JEhf0FI@7qSE0en\Y1Zp[nX.h;-*Ep&-fBM#Q6(p&1?RX8SIeX8IkQ3W1<!?i$kol.s2C
_=,2;i!Un[#U^u*-RT0I-OB7XqO%8lnNQi[pYu@9\@@RnirJ-<PP3#q\G"t]JG5Z6J,l2=A,J"YBD7;^
GlEco^uCaFR.#h.[L4?+#UCZ$,U<X@,REpqqH<f%nLj]CpN?X2>?a_tG5HI]P4llo>P<7=5ke1T5QF^[
2#Jm&B(q2]3W<RZLZ_h#=mbJOnHfQm0FBKf$8=.@n`fndrn[(\qVD&Arl,#qh8]KNp@\ABpPAe(p@\BQ
pT+:^regM3r?h5Fr2fGQm(qPpmD/YX#mfH:#U^u*-RT2i_"sGt\F;]Y\GP:dNWtN(\@@R/\G"t]PP<)q
\G"t]JG5Z7JGs'S0E#PWMZ%c"O7C$UR+[koL]"Re#dtua,U<X@,REpqqH<f%n1OQAs*"?ar^m;t>=r+(
p3-CtpVm)8p3-C"pJUuUr\XF$rFYb\rAajgnV?g@e62,%qXF_C0FBKf$M!BW_>`9Y_Z/Hih>d0G`r=*Y
h=gO?2YW%+h=pU@Re`ugMMdjkMBX8=3W1;u?iI.sl2/<C_<\o5hutJU#U^u*n\G!grj_J^r]^1gs5X$;
rmgtWp>c+8pW!0ApZ)4&q47e#@t9)>)]SN)rFbh]rcmtK!1:orl\G>F"XG?!,U<ZcL\b0Q>P9]F0)AfP
G5Ou3F8]>:G5[Tu`Vj$8G5X]%;?es75X7.D)>>Z[B(h,]3VA1+LWN]al1siO$8=.@n`fndrn[Igo"t:[
rPn]UrS@5@rAOA*rS@5@rL3Ybre^cGRYq(gp,W'upL!s%qW[e>ahd8Xq;;>\-RT2i_"sGt\,\_[55Vkg
Nr%<)\G,%^PP3#p\G,%^JGc#<@fh12A,[G@0E#PXMZ7r$_"5@`R-KJ&[K?d\,REpqqcNo%r`e_Aqcj"k
qK)U>pNHLup;Qu7pNHL#r)3MN!^K"-rYbD[rFYh^!fAuunV>4hkiqs6!\c;8n`fndrnZkVrS@Lnp<!9h
p\"JCq2#$+rn[;@rL*_er/1G[r?Cqqr[.>Gn`e?8r5%U4qVVE&-OB7XqO%8ll9>0Vs,Qg'rODU^rKI6#
q8WEDp>c+%!1s*urJLOmp+QDXp58CUe!Tlsk_K#C![K#snV?sDr`eY?rEK:op2g1:pNHS"s-!)pr`f)>
rBL?\r&"A0r>G;Zratk]nV>b"nlb,>r:'hB0FI@7qSE0el,*GUs2P),p<!<iqt9m[rAOD+rS@2?rgNhD
q-X(EpGr1!pg<RUh8/Kpk.poQ![f?$n\G!grj_2Vrj_ugs/l"FrjVsgpZ)49pW!0Ap>c.&raYb]r>YJa
rFbn_n\F.Oka:Lfr3cYP,REpqqH<f%kq;s>s%<<#pN$=Ur`f)>rK?oorEJu=r]pH>q25+gpFH2SpknTs
k?6hJ!9!#(r:'eA$M!BW_>`9S_Z/Hl`r2>)anj-Xh=gO@2YMt*h>-^H`l=I9MY1?T,54+r-Mh*>l0Q7C
_#W6P_#3*k-OB7XqO%8lkW]$Vs,R,]s/l%GrODR]rfd&qrOD[`"HJLmJ7J80r>YJarFbtan\F[^fpDck
k(ilC!@.s@L\b0Q>Nd[>>68#$9)W5nF8]>:G5dZu`Vj$:Fp(E05X71!MZ"Fe/,a)VMXcJq=k$URi9';%
naYl?_>`9W_Yq@Oh>bLmRJ+c$h=pU@2YMt*h>HsF`WDTtMZ+ss?i;2B3W1<&?h*CX_9]ssgZH<Li:4VZ
R/XVc557>A\GqTeXnL<D\G,%^PP3#p\GYCdNWO`]A,^-8MZ"Lf0E#P]MXeI^R*(fqfB.kd[df.L=oMY!
0(U^q>Q7=n@eOmA>PE=>P4lln>Pr[D8ch7C2#_+]MZ"Fd/,a)XMY2c'LWN]si9';'naYl?_>`9f_X>;@
h>bLkRJ+c$h=pU@2YMt+h>d0G`r/d5-MLmG,5+%r-N.<Jl1jMb_>N'M_#E9^_"sGt\,\_W56&.mNr#mO
ec!#Pj8G28`r<LJj8=r97/^cmMZ"Lf0E,V_MZ:K`^r_uAfB.kf[df.M=TDV(>Nd^>>Q7=l@eOmA>PE=>
P4llo>Q8mE9)UsPB(q2])>5T[AcR_fMXcJD=o7.=klC8Dl2&6qh<;`Uh>bLiRJ+c%h=gO@2?5Z0M#H0/
`q`L2-MCgF,54+r-N@HCl-@-C_>E!K^]<<__"sGt\EH-V\GqTaXnL<E\G5+aj8G29`r3FHNql*BBD.5]
)tu#aBE*kZ^se\FR/>LsLB+dQL\b0Q>Nd^>>Q7=j@eOmB>Q&aAG5[Tu`Vj$?9)1[MB(h,\)>>Z[B)dbY
LY,c#=o%",l2&6qh<;`Uh>bLpRK#2ARJ4f'h>Z7(p&6lDL]]]oh8].cr?h5FrZ_%rr?h(!h8/Kpq:jK9
qO%8lkW]$Vs,R,]s-*;]qpkYqrODR]rfd)r"(8XKNqPm>BD.5^)tkr`BCWdsR-9q5f@G`R=oMXh0)o/U
9)iB#P58VfF80hT>P<7>P4uot@p</0p-/Fep58hep+-)RnV?:1j&u-7f]i7KrnZeTs5!^ps-`gD!1EbQ
p<!9hp\"JCqhY54"PqnR0JN2tr?h8Gr?Cqqs!I:#m(qPppY4?9qO%8lkW]$Vs,R,]rKI,\p=9,OpZ)49
qo8VC"Ltt%-R\UUrFbk^r>YG`s(Cl;nX/!spXe&QqH<f%kUlj>"C"Jj@Uf;!qdT8?rEK#>rK@&sraQ(8
>=p.dp-/FepPSnep+-/TnV?g@e62M'g$/@LrnZqXrPJTjs2P),q_n>>p<!9hp\"JCs+pS6rq64Dp/1c8
pL!kCpGi4#n`fqecb]>0ftdHOrj_J^pce_fs,R,]qigoZp=9,OpZ)49s2OtEro<r)p-ejlpPSngpFcMZ
n\>-lb*_nSfn]E,r`f(Ko.L&Is%<<#qi^hcp2g1:pNHLus2FnGrc\5cp-/FepPSnepF?5UonWL$a]\8o
gZeRNrn[Igm_]"[s2P),qDS2<pW<Bip@\DCrAsfJr@mtCr?h5Fr?D"sqW[e>ahdW(gVEZQrjVqlks#-W
s,R,]qNLcXpXT5Pp>c.9rF#K^r?q>-rFbh]r>YMbs1n6AadD_PgP>Z/!*T;*kUum>s%<<#qNC\apN-:;
p3-FurF>\Ir?V,$rFYb\r>GJ_r[[Moa]\2mh<FaO!1NoClGESWs2P),pbqu:pW<Bir:Ts[!]E)#p@\A<
pJLl9p0[eCq)S!0cGBFpo%W!9q3V/4rj_5Ws1&)hs/l'[qQ9MBrODR]!g@#"p>c*!pI+smp58hgq(M9R
e!Tlso%2]Qq,m\_r`eY?s',Lqs'kbdqI95@!-A*Cp3$M#@q54Ur?V,$rFYb\rYbM^nV>b"nlbJ?hs'sQ
!o9<6rnZqXs5!^ps-`R=qjIH*q8rTkqt9s."?&;%h;.etr\4%Cr?h8Gr?D,!n`elGmD8;Hhn]&T!k<c2
rj_;Ys1&)hs/l!YrN6+%p=9,Oqr@[9"I!5$\@D7mr[7D-rFbk^r>YVen\F.Oka:kkhhV#1!a@oTr`e_A
s',Lqs'k_c!0[4gp2g1:qf_s2"Hm8)>?gfErZq2$rFYe]r>GJ_nV?:1j&tj/i9C'Rs5!^DrS?nYs5!^p
s-`dCqDS2<p<!<irq63/rq66Gp\"J=p/1c8pL!kCrAjE4m(qPpn(Zd9q3_2ls+('XmQUZ\s,R,]ooo6S
p=9/Pro<p:ro<sepZ)3"p-ejlpPSngr@d]VnX/!sn(6KQq-!`%s$6NemOeKD"C"Jj@Uf"nqI9/>r`fAF
r(?s3rEK#>r?V)#rFYe]r>GPanV?g@e621sip$<U!:g$Ds-irCo>:ICs5!^ps-`I:qO.*"rS@FlqXsgC
p\"J=pJLl9p0[bBs#KW6qn^UpmG$X9qNq9@rODlXrj__epce_fs,R,]o99$QpXT5PrJpa7rODU^r?q>-
rFbh]r>Ybin\>-lb*_SJieRA5!4Mi1s$6Qfr@[[os',Lqs'kS_qI92?rEK4mqKDgApNHK\pHJOfp58ed
s"!btrJ/Ktlepjgr5&@%r8%CArn[+]s5!^ps-`C8qO.*"s5![oq"=UAp@\A<pJLl9p0[eC!'0o?q!#o:
leCL9r0[H@s1&'<s+(*YnNQu_s,R,]nWWgOpXT;Rrf6d6rODR]r?q>-rFbh]rYknl^qfQWadDDGjG3Y9
!4Mm8r*01dr`enFs',Lqs'kM]qI92?s',IppicU?p3-B[pHJOfp5/hf!Z;k+nV>4hl/:^grk\F#rS@LB
rS@(^s5!^ps-`=6qjI<&s)e:ss2P)pp\"L@p@\D=p/1c8pL!nDn`e?8r5%XPk.pt`q;D4]s+('Xo032a
s,R,]n!!XNqpbu&PEWMdNfLWZpZ)4^p>c-"p-ejlpPSqhn\EV@pR(3sk(iq=q6p6+s$6Neo.L&Is%<<#
mumQW!-A$Ys&T/(s%<;qpNHL>p3-E\p-/FepPSqfnV>b"nlb27kNN#`l1XZGh>`rBh=\Ybh>bLpRI2s5
RJWEOao-;]h>W60h=gO?h=pU@0_SBC-MLjJ-mJ3Gh8/KpkhG:9!LU[ri;L1cJGm"N56&.mNrQ6PPPp^A
Xo?lLP5r,l`r<LAj8HL^j8CA!7/ginM?-'`n\F.Oka:SckD'(@L\A1T>Q6te>P0WK>Q7=q@eZ&\P58Ye
F8],>>Q2V@>P<7=>PE=>,kaG$B(q/`72bWNk?6hJk2>Cdp$r":s-irCp;6jcs2P),r&4('qO.;(qhY4,
p@\F@p@\A<pJLl9qd9=N!$^stm(qPpk1f%6p#,eYs+(*Yp-/Mds,R,]m$%:JrKI,urODR]rj_[^r?q>-
rFc"br^-Z)n\F[^fpLpRk(iW<rEK:er`f(K!*]S18kNQ%m#q3SrDrg7rEJu=r`f)>r?V,$rFYqar^?f)
nV?g@e61kjk3;U0r8%CArn[LhrPJTjs2P),l8JR.rcIpkrS@5@rS@2?r@mtCr?hPOr$VOhn`fqecb\\s
k.p]Kr4)cWrj__es1&)hs/kRMr2os^pr<9BpZ)4^p>c*!pI+sms,-_A!#tID!1:orjO`OLp9sm's$6Qf
pb)SNs%<<#lB;'Sr`8g5rEK#>rEJu=r?V,$rFZ(er'^T'onWL$a][W]k3;[2s7-'Ds-ioBqSN9gs2P),
kViF.!d&NBp5&\'p\"L@p\"J=p/1f9q^;FgqW[e>ahcukk.prRqV_=^s+('XqEFqhs,R,]k`c"Jrfd&q
rODU^rODU^r?q;,rb)*q!ZSqjo>&J8in*@K!/L9VrEK:erEK+Ns',Lqs'k2TraGq0<g*0qrEK#>rEK#>
r?V)#rau*t!_#NqnV>4hiS`h^p@8+;s-irCqniBhs2P),kViF.s)e5us+pK,rS@2?rS@5@r@mqB!%.Rk
!$^stcGBFpiS3J0p>GnZs+(*Yq`b%is,R,]k`c"Js-*GGpW!0Ap>c+]pZ)3"p-\mnqa1?&n\EV@pR'pk
jbNQ<rEK:er`f7Ps',Lqs'k2TraPn.rf[#prEJu=rEK#>r?V)#!+u*s!#b<^fNIcJhr*Y]p$r":s-irC
rPJTjs2P),m5Fl#rgEe.r&4;*rS@2?rn[;@r@n+GrX&WPq^;Fgn`elGmD7]7k.pZJrODlXrj_njs1&)h
s/kjUpQPTYqNLZnrODR]rj_[^r?qJ1rWiL:qa1?&n\F.Oka:8Zk(iW<rEK:er`f=Rs',Lqs'k_cnriu]
s&T&\pVm)8p3-F>p3-B[q`aub!+u*s!#b<^k?6hJh;IG[p@8(:s-irCs2+fls2P),r&3q#rgEe.q_n/(
rS@5@rS@2?r\4=Kr!EENq^;Fgn`fDVhSJ%&k.p]Kr4)cWrj_tls1&)hs/kLKriQ![p;['@pZ)4^p>c-"
r^?Yi!,)0r!#tIDnX/!sh:LeEp9sm's$6Qf!\Q*0"C"Jj@UeParaPn.qi^ZlrEK#>rEJu=rZqJ,r!3:7
qaCK&nV?g@e61SbjluL/rS@LBqq_:ls-`(/rgEe.q)7r&rn[;@rS@5@r@n*U!%.Rk!$^stqn^UpgtUr+
p>>q\rj_uYqmcZds/kLKriPpYp;[*Ap>c+]pZ)3"qZm17qa1?&n\>-lb*^u9jbN]@rO2Z/s$6Hcs%<<#
k`YpSs&SrYp;R#8p3-C=pNHK\qZm16qaCK&onWL$a][?UjluL/rS@LBrS@Lns-`(/rg<n2F>c&QqDS)(
rS@2?rS@5@s"O<W!%.Rk!$_:(q!#o:g=to.r4r$arODlXrODlfs/kLKriQ-_!5\MqpW!0Ap>c+]pZ)9$
qZm17qa1E(^qfQWadCf6mt^Xmp9sp(s$6Nes%<<#k`YpS"BJQdP#D.>pVm)8p3-C=pNHQ^qZm16rC$cV
72bWNa][9Sk3;U0r8%CAs5!^ps-`(/rgEe.s#0lPqDS)(rS@5@rS@>Cs2P'mq[*<Mq^;Fgn`e?8r5%%?
k.p]Kr4)cWs1&)hs/kLKriQ3as-*GuqNLZnrODU^rOD^as,R+,qZm17qa1?&n\EV@pR'Ubk(iZ=r*01d
s',Lqs'k2TraPn.s-!@ZqNCTlrEK#>rEK,As%<;:qZm16qaCK&nV>b"nlaQ%k3;U0r7qOFh294?RI)p1
2ZB-EFT48sq>3)DM#H0(p&3_Gp&2o10`)1W-Mo1k,4XpR_<o(igZH<Fi;C(gJ@K*LXf_/XpQPTYrKI/q
qig`nrODU^rODjerJpn*qZm17qa1?&n\F.Oka9rQk(iZ=r*'=i>;Sr]@eZ&VP5\qj<r\?\;YuXN`Vj$8
G5YYEG5Y&5,l7iIB)>!s)=`LF=lWWbdam@<l1XZFh>bLoRJf&22ZB-EFT48rq>*#CM#Q6(p&3_E`r@ai
$32FM-ibI]l0Q7C_#V[0gZ?6Ei;C+bNrQ3]Xm)&KXo4I\_>9Ah`r<LAj8HLcNrLL(#QSN76NA(q_"!fF
QiOtRfB%e][f'D3>=qNe@d0'T@fKL/P5A/RP4llo>P<7=>Pq+n,l7iIB)>!s)=`LU=k$URdam@<l1slK
nc%>G`l@QJRHc^0RK%C/2Ym1F2YW%+h=gOAh>G:m0`)1W-Mo1k,4Xpp_9]ssbLYG0_#E9fi;U4fNfN&s
Xm2,LXo4IZ_>9Ai`r3F@j8ZXeNrLL(#QSN76NA(q^]9bER/XqQfB7qhL\A1U>67Dh[f0b$P5\qj<r\?Y
;YlRN`Vj$7G5keE9)g16#QSK670"4uL]*"M=b$~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (2003.i109.027.P.m004.c33.online digital virtual exhibition presentation isometric-09.eps)
%%CreationDate: 12/21/2020 1:18 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kq-VlIn*p5GoD.bQO<1c*+SZr25[+:5PVs3_oKK3F*(\3%*8RO=&)Y/#Q0,<kN[HQnm5hK)DG*f:NAZJ\dR]g\L$e<,;f?h3
%[_)QF0BeFn'ike"edD&A<<W6iT7qu3c/W2n%COunNS6[2Ggu35K#(imgZnJ;l\1n%I]%/C?beULiI0'fFoO"/\,=qp4B'tCcRR1?
%;!I].rieYF)?lRBo\nC(GR=`7B*rk.p=fR.$&1fl)k]p[4l4qZRfk/<ZhX'SA*BO)Rs]6-"+FGCe,JDf3r<XO?O]5L?:$EDIDVF9
%$$q'X+#^_OBF+Be5E##BTc>oe;/=80V\!:Qa5Kns8LtYfHO(M9V[0qg:B,#*&,T(F6\+s<WoO*kgA!&nC_Y*F`S*=5.UsD%6QfRK
%ZJfSO5G4&pJ<34rP-fH1h-Sk)?ObM[M.ieQ]@ZV/!?64.Y_tDec[Nl`'bA)V11XiR7FM=TVI^Q,;D@%D+sDJTCK=<=p]Jp.$%=^`
%5M$:h!l#fKq918[LF:@H_$mPaA5M=Ej&%>j^[<q6nG7gT4>q-`h0RG"`hUR)/Y>cOWE8;u*95Q;?N```i8)ria)/NJC>ujlUNY2f
%);kqSGpA*XTQAh86XNg%>m%S[SlIJ%#(bYPkS28sEHn_tpe<]C;&=>:#a,b;*?<ENR+6ujk!cV_^?WR?+GS/hr*I-@O64&a'O:>B
%AY\H]Im*=g^Feq=*!RGRqRU[TF!.S)Xa"f::%*8j45De)_>o)A%cAX@3OQF7r7gEOqAkY7of+T=E;$RF%l?@=plGHfADaq18$*AN
%\_$;1HMa7&pQ,>*QKm;tTMTKKJcbhT5egSS/5hkm+9's\?brrCotZWa6IB`FQDP3V\I+)!b9U4#rB#\i"LV[I&!O5(3'@3F^E=8U
%6&!e%?NZ>IpCJ\[5o>m$i#ePe^P\XdSd-DA0-:d6d,!!.T[iF$KGe)3MFT85j7gGd';P1%^@>W2,Edj"%,YWj#ueG@h*S*Z#A#B:
%oMqccr8Asg-UFXo#cY.;UGk\\(b?'6*P^->?M+3QA[>FimZ.R=L!sqK'iIj'5&<giNdc[XAn5BgoK.gK`m8n1*$NuX#W_V&%(@!9
%Q.?RqH';DD*OAsg_P1+*mYNnNJ,1:QWm1-/PO[^Hqn1Zu%b`(K)0,kcX]]EC-U.jR+Ob'iWR7&*l_F5V@6\c$[<h(][t;NKBQcX@
%.%H6b_]W-Ph0'<oe\]G)h[=*.$-\ThUjWIER_3R@Y"mg#FH(]onn&E@O<H)&CZ4Hn3rJ^>T_]9X&GirmXJ%u>pO>s6C88$.hfc%&
%?`l^#oUG$=@/tmq"V=?*^7W?C>rGp[IaFc*7U^-U"EaDbr\OJ/Cr;Ttg;6`rm0#t'0&e9Dr76\ar)\Htn_4HSRq?RpX"=1m^r"Fq
%=O=H,9O%eHMp#N5:'BQmZh%h95.o+T%EHYMR4d%R,ia&/B+;H-WUZ+%^DM-#>aG*05+.l5agB;gVIP$0$2h3<1OV<nc$BR@&SWO1
%"1'<uLSOi/(mCLo0YK-l;cA#f,b>B2SaOV($/3@?Fp8Wk%JD=d3JO(@F2i=)3huCWD<V#@`0?4NgC@<7m-/>Wqh(Qi&&+*4Wb0rQ
%')6`,LWaHoF8]K#C1Z)q"Cai/UO$R$dQ:7^!.r[66:6(^aZZ9>TU^*orE?GG9[jJT5UX_jd$aPuf'K?28":)75=Ul#/[<^j"aqJ/
%apbpNW&_$tC6B%)Od9Fdr2-rrMV.P;==XW9_T(B:RgBkmQJLo41Ul^gJ7WB</\=L0#M$Q]ZJ-ACD7^`pgLZbX2pf"Vi*r+DG&u,M
%DVE?0]=DW72spTUMQ;<N.O_Et^hW5BD8YfHHtbYNBEJmpiCfYS\J3HM%haoobKhqaknI>PfNQkb50fr-8[p]YO7*>@mZ.bp4E0#s
%efh0n7bDYXl2O_B>?l"`qYcA!'>r%PV1-d,q,ra(r-H&5+^GtQMGWn#[5qGmWmsT+&I-<g@7il3cc))Vo$p65<"OqP(E\99X-mOL
%C4<4<0u4b&M,<fm&aM`Xfhj7u0`fZ0r*_V784g=:Yr6IBP1Pq3q'BT\qQc"=kI.Z'qM([YF;t50$Li6A5/Y\UN;T9m2>rnR6PkQh
%\MQ&MiH]C)ag0uP\XG4$VqK?@^Lu-O0=?+mr[kAIcWa"Up,=!a\Zk+)n^?"3_2fp;+j/lCQ-j5kR""_m_XI&&m.mEmT]p[/eQgA-
%%*1CJZbH3M_N/du;D%=+-j6^?O.A?fDhK?Vetg+SQHtPR"rSD-2bY3%<nM"j)#4'ln?O&CZcKSi.MVHYEi/GLV)kiH3C0Ir/CFqh
%Qs"YfB6tUtI)^EXB6tW(XRn%'p2#mNnK?h[S'lF;ff[=I+R!/8fU7#Vi3KhZT-;P,ORkS%cB)?h5=</AU3h?D4?l44kII%R+j]cu
%17fWc)18@R1Z\?LnisX.j!h:-D.MGBkNBiF),BdEj&p@;cd.U6kJm+7j(iFM=dR>=-oG0$ckuJ8:U4+>Bc.80$qC1"QqUXQ-]Xc7
%?U&8lhs&@m0G,37<bkge2$83I#BI/110@#j7Un7\G.J\J\iX&<Up2<<if:dp/_Y"sF*-0CV<8o*\VG"h+o>9OJ3EXgbroT_N)p4k
%l/oV"Qkm5Pd1:iS#&*qN#)m9fU:]rjfkgo1NIF^]kk=t8nj%Kg5F_Prrg%qU1O*O1s#&Q+9U1c-be3'RahUZuK&8=ES0Zm[h)+4?
%24:Jt.WDNfc531/7[6X1)`d;(M/u,#XkjfFpMR6O"`FME]tT!.&k"KL7aChtIsYQVATAZJ5EZt<)>4j9[b(#*NB]1B]Z_BL^L_fT
%NgI<:AaXf24'q'0([bmDNYh,;U&LChj(7Y'R6+_ec1-sh.(h]_4u;4a3oL:hNV4K#bD)X78(-es8DLWnom+B2=d0&uX\a/@3M^jF
%h]b@J4Z7'KKtt>t`=u)</6%acLKQ90Oep.:X;@nX1(O>m65;;jRG=0XnMXBe\u$2uh]-93T[!>q33V<u)k5m#MUPqum9/7Lk7sNL
%'qAmGK%$`K$a+a!`l+rcnnR'b93sEZ1V`"9nMaZpc>:A@QP!9H%-sG:"MV5o<WETpRoosmM=o/1?4>(UBo)e`%*.,bEP?!q0/?f4
%3\PiB];g/:b?ite*/4m&V4L+9XQQN&FrQE,0Z9C/&*b%YRr=KMX(P:WlT&^oCk-Dan2d)XcYSNA7]Y:GZfoj1o9Naqg*eXO\*)A3
%_k66u1"-@'1KumR_oliPAIP<H0sVoH5<!-k<H-sRaAnII+D-&r^XYF/?X`@,*4#Og0XQ4&5qi1_pWoDb-/3<\gq^S"h[Bn[gR<9a
%k@LNLXrEjS4tl/EZh0#u8O"qLbmYe/Sh-.RZICPAFXBoWBkFZIk2gdKHI#jbR:j!gDi3-p7rpKPm:>DKhcOc/Xq]\#V.d"FrULbm
%B9:H0DKIu7fQd[HG1Z]Jg&:YWg$OXZRqIi/Zk/TPa\C`)Sj>Qd+J3;.ccG6n$T#kBdCqS9+J8+^1UXF1qVF2-+MXIoj%].gs0_X?
%m$hg_"+.^TnlZp"hkTi!SFQBVDfI"77&05&L48H"\!b2C_4I,W01,4i<UN'h2MX0?iD_A_"7]-UX\<<7A(Z&]GIoK)cZ7Ul)79u`
%MZ1[R7P]!j9GOrD#H6hb+K4pbn"ZOSbECtQ^s@qJdo$-me:Mnc+>!MLZ'jcU16o?%QK2m)aCQdgE$JogFlqB$9=[31H8$L_lR"Z+
%oRb*_UjWRndlICX[p8!0fsSEiK1Tiq[`-2P;BTjkL>P3ll6FV4FQ7.Ir''"-5#o[A6a;TfgRRiHR_bf0::6$C=8r^^13!atDWV`u
%\u9VVTW3Eu<m"b]"#o-<E?8OIMt5ePCZn6EKFBkb2b#.X`@NH=F+nqSZ2Ub'oWAeu/'WO'?IDsqiLtamATVjDGL@mM34GOh^WGcs
%MIG[!9e)o5mJ'/.OkV_7MG?Gfh"GHj2kO]-:G_tC$a]5*K0uSoK.5-EID7ROA@[8"#3YpW[$hr-Up6\Vhl!@-N23YflXTAZp^<i`
%6f(G;f%e.<X!2*r@ek@;/:Z+fgoAP]r^GGUkRP?;`o=JAi0>u6<8QA9r,*SOHa=oGCVTX.^3RN_0?_&OEkH?Y"+G$pko;)Z1UgZV
%pOdY`7g=MT)n8ML:[I\Tr!(YhrTX>]M2D!9*W#_n;j:_Q`DSqa[JVRac[NRa*&a'L)6:RhU?8p@GI"GPX,Yi.QCl,ANZmR5q4.qo
%;`BWoe=H..X3pCEZcE6+Q5:ol#$FdKE^\3Wnm\BEli_clb-j1B<BKDV1!Crn]U3GWl9V2ua]&lgKOE^KbF(gl_Te"H/@qB'k!\Mg
%.3$_^>oZ)(iphBN+F^6Ac6T$3T-NKq-Yd5@6>,,9Ro_;VNJ@p`fBMpq6Ciu<?6tS\*TgIGbYKQ?fQGW.NL*M3%"Xf4Sn\+<BkJ:r
%/T/0$3mVZ3YIT.)c"/TVDYomGcis"u2d^Xk22=iHdF_VI)EUKrm;VHlWh]NNQIp%)[Tm`GnAF)3C5!PfC#?*Q7p/TY"CfZ^n"AG(
%?$9H.M[YA5F341",p/OJ^:E=:!Ko+R4Io-ZJ%aoI27/)%'.$9tL`?dgA7HfV$q?7s(V5lcM9@$rSOk!aCpW_GZ_$DV0ohS:1JC"5
%]tcO.BV?[:"ZFgK*9W9k-c?g]Fd=>*lX->:gm5f;fe+D\1%A+^fBd=G*8ZkUDJqnMWMmi4^MEeoMbO'Od6I3p`p4L\;'$-qB"JtM
%iQ_(V3V+H][U.XHp[6h>X#B.m=oZ+;ZX1$s/]/9iFe=DkAR]/h]c*q@2E(Q$JW9]kY%&GoS+Bjbs65MUk#I&g[tW+;4`=i3kH%7*
%gNJO#95ip^hoIh<-b]*j3@,`jfcGqENLVqGF1d?!n9)Co\$IX5XGt=!-I1ND(@udDH'tUHa)fHl2?'3#5NCnY/IU+MO@),@eX2,,
%bX48eg3*$H7LmX02K"e*p3SD,]K'T?XGtGBF@tG\6(-JB2o/O!ea8&p&Ef./M&D@pd*6k(L6A$rF#X*3*fYI4e%%tYQ7\L5)6.b=
%`n[?ZGM-ru*f\j="'GhAma7ElSTaGKQrPk)pLqc6)E5U0E=6MYgkJE8g?nHCA7B3>c'Uq<"tf1u[5N.#fet&c#9g/qQfH;j&cQE_
%33>T[Hp7d_C2.[?`,iLTj;)+iQ,2OlJX9h[\+`oS>[G1cjN^\Z^>\f9A/gc$G>QPjm3_CE6aQ1Bp>4T]S(i9GbKeo"]>=2I#!MRd
%gO&P8S8X_4QQ^2>#$QBl\=+@aF+\CKn9*muhq[.Z)gn]q+_!H1FR6*`I(-32]KWh#DPYNiZ[2I]kM]4[imGsEq`H,#QGkN7VP(n4
%H"Ts>8Tp(.Qd8]/b`MR<bATS52)07nK\(/5#0_eQ5<(oLiADEX^L^`r]^X(:9A^TN[JGeS@*Itnr+bQ[G:i;'I.bY[)!toUULdUe
%ZS%4n*+.U=ZbR!<b7-TB4O9adh3?_O$Ss_Qj14-hRC>MMSS(L-\6Y#&p((]?N60;u_ARS8AA)_0h`KDL1RraY>l(!dcoMJ:5qSSH
%Ac.\'pa]o8%_Y&Uj,`96gQ\1[?H]MUm@Z6tn9[*7bA$i=0#N8"NNdL[M7K&35;RO?DU/6LJXMq`GdN(t;],D1a$*72Q@@%e_[48O
%A_[dP5^P1V8BeMib;964?6j'#&DS+bOQEq!^KKZ6Ad@S/LSm!*61DVtIa^cme]JYoeB2\prRRV?:R.l=YIpRdca`TaAmR%]"0/S#
%kK0pZS&=BL/1P"[RMT%rDC5fb[G%QBRW-Om@nK)5MldEYAD#/$PBUYCfJiZ_Fr"4Gd;g1a%!&#4V5toZb);6[ZP3*OC,jfB<pcQL
%V3I:!RMSm?ZisS@LrNe"-DjFf3.>a'8;7Fq*aE5RAN=)"QA+41[PNd"Q/D6=\"Or1/[0),[ji$P(RHbFfb(bD#D2P<PZdS'hWdXr
%9Zq&!V6QW.Km<bf;/U@sZJ'/Q7ENEj:"ai1GV%">&8/E*'T8,gEQik_8sV3"q'3]aHN$#BAKHabO%&lr`hHuVF#1R\hPOD>/Bl?9
%`\Sn@AKHab_t#D."Isb"0TSYjrE,:8K61&Yk[/U-Et`%u16(BQUdgqcH*]0LaqWel+,QIg5NLr8`,C'^4Q#'t<AgSKbY4LkY,5dS
%SGC]'aWb?3jT<;(p^-f^ja0pak@AS&hsRd+F$]Qp"C6c:]]Xla0'MjAF;^t?>gWEOJo79hYA7d_SU)^R.*P0-fun9r#cJ/_d-<*9
%DdsK^r66>`H.etM\a6r'ed27<Ur@CP<n4hF6".Ai)I+$fr/Q7-,5&0ILNf9^AV#9Aj0r4:$auE_l=m`^>(_;p[EFf<f9Qb4r^+Cg
%r,mGjCPqjR%TIA&hkAZSYR7t=dD,Is?s_o$s8!f6Y1+Pb%"G^;!N_"lSaN*jqAV&D`DWVg.G2SX"'1AjAh0a5#pphD)Qgn@lI;Sg
%EH10iDfuHrV8B,O19ni=<mi'O)>^bAlT^]3[;CE?XMpXnGHZV?%iP#+emY0qY9X5ooLX7O*7VPR2='m=L<-u]T)mlBG<c-&O&gK8
%T=t?m:Dhg&6/gj:X\f$"^-'CgiFa1qj8(:AMI)N\Ko6T_a44<p47`9d<5,eF6)QoC0.-9U.E#@CZEPIbH:1*uk*+KNl#u?ek"s#`
%r8D!>-#fsc:<rt+2QZDbip/n7q]k;Ef(mE%&ro$F&29$&mWbm;d#,clM+R2hjdHs,G1"iFcZ%fpjq>S:nUk?)3rS;HVI"N1@p@QP
%>'b4(KeIQ6-e@\D$(fiKDbqD3bHNXR9p1Uk*s(ej>/S[lbW]aLH`]hNZWS-::?!?RX,cH*Zo%sK)f\!W-E3aX#4PXb1n@`Xig$Z(
%%<XB7O'lN/@iWjt#duC#,FZ?A*VlgF3"-WC8*AR_Hh$,Da3[%2?m%Iq!C&12Bn(.CSc,qcYD/Z60@AX%pHS#pljs'bT;*>&h2\uN
%ht;:7Ej[nE`WgOtWu/udh#B[XUL0VjCnGoU8F$5sRU6,rC4X-A\Q^"]\4bKs_G",m>8%",Dtn+lJcL=3?DMtNf%:!`eCjjN1;Bb&
%Q#=?U2UO!X3*UdW)4^Zpqh'm-p(8G-(K1d=n8/C"?Z1<nA]d4A]N2Lb'hiaqco2Q8.l5$"H'@)I1B"R"E+.%^"N)e4Q1U&HoNsU-
%rdLb=1k-=eZ?8Ub5L5G.K!1;JUiW.6-kpEk_6D\nNFH<C\@eEs>Q9hV9>nNp9`M4nFFE)BSq_S?XMaB\oq,>F-dsmGros0f>t]Ii
%piH/<pK:TFK3#=%Hc3F*'m3UP$>[\5hjQCgfnOlD`:g4)lWV\YFCQe1;uP_J21EgV@tnT"7DkTY?J05ZUMh@4cSlLG)F`76c)D[p
%]!.708T\NNrqu#t9rI(<]K67eWZ!^KL](h>+s-Af`ZLWe[=ZOoG5=e6/Y!9`!k,_/G`R#%o]r/hrIUC+rq=OjX)kI9VE$#4;ii>l
%lujlbl8TU;8AmquQ1hnCh]JG6rI2FV_^Kto?lPEj.Zk'-iB/;"3kJ&^\m>s:;.pHN=JcH[")=Wl@s`p$h[B:76'G@A&qS_.MH:fP
%^:U.KiM,3Mob'n;aUS,rB@-8IR.q+]brUscT6O(>gSV)b8V[P&E;6=$0-a8h/9TNC_Yqin0U6I-WY<i=6WE#^g[R?ir4ttS"a[7W
%O8?[8kl1nqVnmk<L#%&rkase<c/I!u.<O;2aYP@EjY:XVo%1>FHEYj^pKP[(Dq#[n"$E`3,lrp-;0OQi-^I41>L&Xn\Ai=O28_9\
%c.(c5o&p(>8M%c&>XXa[Ug\fhAA3HeZK/ZEpXX]gddc08^N>M'UJg`4WRL)Akq!jf3AFKlR$u%8U#'Q#KjMec0Q:KPR7-[Dc`bra
%o=jT&Y*(KReJojTER="]V)R0_PX`Q.iRf4\K75ZD[Mt7X;:$EW!d\Un#OCE/%c$K%LFU-F9t.F\aJt)jPY':1kF5Lc^`%t]@DTi"
%`e%iW+\]N_<$J%4SRJi)XS[VD7GTI47G6^D<SFX8=tMJphnWI4LqpLBaVNcM:P..RIgD+Q(^9m:npl1[^+kDQeS`WMTm&&B/Rt<F
%AVs3[/AAL:(skY,6"8!p_QPXuAG4Qp`t_dV#![^*+<8K:=Oj+K*K8uTY>FmR(F/r(-ldAVU!0<rP`6j759(,Z+B?CfTl[kc*.[r.
%8O?Rh@h0R_K?Iti/:K\elHN11qW>+@E,"cF$2]F6VdVm^5cT.7enXnD.&+?7^E=4DE/F-US4J1M*pM,i?i<93KF8orHs."h@P^.j
%0=sH#ILf4<,(k294pjtW\ZqnrBL8X&<HsQ;Qg=P1<&)(5FAgaW%X0mfa"\'HH12F?0_on@?7$SP[7DrVqpmn`MB)r1eI+t<e+Ss7
%+PXc5S8,,hbhN+>kgBa.3!2b%_,[gc%c_Re"cr6>\&<#XF48%b+c2Cs"9nN%=i/U8'2L3PGL-"FNG_$ciUUMhA&6a:g)Drp[U[c[
%)]Rm+/dY8tYrHUe(-d7'FU[X_Khj&3]=>!,So+U:=;nfLS&TmiH1f9qj5:*JU%iXIl^u"t<NNM_8D6es.&PH^FH.`JWtTH!oerbW
%X\ST!kgcS/AWH9d1Mq1+H@:f4Tj:(Gm>B`HZ\rGZf1=oD[]XE178JaX1]'$E<jN66\CcCM2B1e_gWT5\%(e1+_W81;prpqsU)rG?
%:-45b**Y>5+s)6n<2;`qq9&I66_ML[7s4T@0LQMZCg2e]MXMZ^Ojm^9,mQ\p28/T!YqE4_2iV&TDepIl1hs*c&XW/ud(JS`VNET)
%BUs4.INhLDfkiQMdpt>"K7idXYjM1^9%Wi_N3h=)(NF.b6)eugYX&[pYFWT:U5$96C_F.V8]^jVZ.j2KNfgP#;_]5qeR!Frs,.;R
%<4#tUd#:mrR16O^MrNe8aH=F"PHH@^BL/)Kg/Q!4;`GfIHEGoI$0$sgeN/>>EuC'o?oH.3^4JupYa41iclF*G&d,h*p/Nj2TT204
%X<ZFAN2TWK@#DtB^U,[Ai51Ep2M]Zm.N3K1YXDaK0lU>maJ/<.4\)8_)H*[Zb&o!?.Q^AO:T!*E\dXnF[$AJ]7DHaNh]GN1^k`F2
%K@BRp)"pegCDsLk>nJB/g[AJY&oWp64*m)!aRYgrXeS?u=KK!/83_jYlSlDGM4tON#,Cd/9q#dk2#qeG"#1hX]SUCbUd6(:42HUm
%hBAQ16JDm,UVW0TKSZl*FJ_lMkt',2),-B<J2k(2_2JXHobM!?6aYf5n:"5aUs_o/3GGf!^V++3>)XFb$+,.GeUgO`]bj+:+S+ns
%nscG7D1ouX$<'c0_jfF2qI$60-77g&0Y>$P,`+lC#*Xe6@amm]PT@OVN-]TWrH['9#2qm;;om>Gl6iU$oWqhZ<)$$6;&rBZ:$H;U
%M$33@;/sBH*b<od-sC-1WD/h@%#MS;_ASd@Ae`ien)SStW?tBB/ZWTD4'f)Tl\3L?hJp[0$D/+.:C[cD5qH[!=>r(]qR!%R.GLL\
%b%bPB?igrZLX",?ktEN\f1W7EF/#NJ@<REmTl$5aKZ@mHPsW\OiO$!RD6JhZ:DLo)o[+d0GAG\/S*kYPM'iZ<#@lP_E"[4Db)Q]g
%o"Q2&ru8>*Jpnq8UZ`FRh8o+dBQg>l%@,jjY"X!3)26N<6jI)S$&n:go_t09U.8gZ;Om(nMrRS$OVjPJM34>j'PESI7o/''q;ei+
%7WAR;pD.59Fk8G\;VGZ"G-5#$+`&?tc7h!Qp,c=Z$j9@"][0`NE9Hrm:8imuEqsN*;2];ma5SOq8*(*CeD8uCNF%"d4R\jX%bXp(
%#<8;ea;lk-V4DoYcRVaOTj>:=h%W"O3n`3DGO70X;OqDn/6G[Y++.>MI/E]tLAu/Q\bY0&FaL1(f=kM)khLGi\[/U:E2Vq:#PZ@+
%B=m6]qUXuG-O85Op$/H1#@%.(c)L%J#O[1]=naai;#XM0=OHPTD1!crg=ffr%CQHoN&>9\CSQ3R0<h#Y[kF>dWbuZW_9#IDnWR.e
%=F>?JelK3X*ZB.CQ%aAD_qqWqmIRdZ@<JErmT'RhrKH4%ne6%^<%2&GhempZ4a[X^PT/?Jo2KK!*O"G7H1g]+l#`iu7bt)'\,LYg
%o;_A,COK#q0:,`U7[:s+H39V0rDiZ>FuUs15/26K>?e4Rl](;TiQe:k6'(][f*CE+?N%UGq=NWM7L3=HYk-u99,BcTpg2g\n))f)
%Fhc`cSZL]6Ya9Utf142HpMFo\[Tg(F/ackIB,d>:"nTS$p</`)b?I%=?WVE&dA&(-T&708W7Cerr7#!.D,`/ke%3!M48n=?YNsFd
%cg0>fKr5G_qobU$V<Z0Tn&W;mf#I;S':L'`Da&*)3jjb1ji7TFCJOcUj/1k<%2riX?ea2!YL`B.A?GcWn-43aGo/MZ9s).dgfa5W
%OS+7HMlSAEG0;m\1EPCS(UeM\2t+H9?1D`)FXcd/,kmli45DR5Rr@R6f8]BKT./SDSHWEc$$gV'LZKb+93ubFX.F-7/Wj$s6/U1m
%Rf<->6$^`4Hr.A[r1T1r&H(MqV*\%P)=@@i^.!NSIT"k[T/PTp^0p^t/%].+2<2BT%l=!O[f#4.mYXkjHL[@9HM_r.U]0ZB(HS#D
%)[!dkD-Jh!=PM0>=83cKK"h$T(pO.#_X'A=jYPWHj^@T-+s4n8>3WElD7SG(HguO9pE/8L-KhR>D*BJB4Xlq.eqU#rqmD()WF=d#
%-ompWhh-^L+*QOiI6%^^M+ujZD#JAh;0,s\r\H9Bn%7]$a_mYm.F@aSQClseGfrP_.75o'BDV1gD<p$Lb#Z9,q:]":Gl*_cP&!#R
%"@hn.b49`-qi^<j39tV:MlpNAMkm#6NTJ3U`Cd\;Dem\dFnfTFCGJ4PaE_uFj)fOTFS^AE)XkqhBM)P`7fQco%`1t<VL:*U9?F=T
%*IC(`nNh)-kE6g7fKIhE+-hJ-Imja**cH^M_KmKoNp9s8m(#mSgudnR$81!J`Ua!ea6-?NNN.?r^&=[Ipgs>qZI='dCANk[H=a#2
%ISV8(auJa)\&dU=&TKS-55qebm.B/p`(N?On/fDSH1,JkJ@8d$U9HA[`qnHXq"lE.C@GqK\C\?>mWltpf#pIRD!Ze'\C2ES#o0#3
%+-2AWHi),5^,CT9#AmSla%JD6%[J2$s6s:#HLV;PRL.k(<$1K:cg'oGak,_;[H?Mg$7!oBpl(G4&%WQ]Dbg'*b-(X,*Ak+5XR1HD
%H_e-_dX>h/*g$&=0^p<*[s%HCJS9TePa9Y6oRi28Wuro75:dhaHB2UL=8jueKb#cuq!q:eo]#g@#F^c#\j/703cuJ`mSprnlEMr%
%d=ZJ7o^GLi9/s(RcBdm';FWnOG61lMp3GY%0a/-I.^nq>O$A55Fg&EhEa!eu*VntP/FdrYQ_-Ae-N1ApZEi$6Bf9>KOh!Q0Ea!q^
%in8'XF4X`mhbn>E*d&>!l+trfG3c\>`:<[@/_#bmjP?]@p#^YH3I:Du)#njjZhj2*o>.!p-2dC7$dL7u*IIJCe6'<^X\?L+s,bOF
%hD$j>i#VY%4JYuO-h['ar\gNPg@Y)pX4p/6X7"q2)ZX*EOHZ\aK`A[d.URAk]q&mE*dbT&Y:T*Le*BQdFU=LfG<7cQn-10VIU^RK
%(M'^l;LS+nIBg)&\:o$scj#Wd'1r^*S^8.hD`9*P1kQ'0;62tsrLiP_/qCYr`F_l,O]Sn-j6YgD$G?!meikuo6KB_7i@sPnYTpV*
%$LTkJ*Ml7&`r:FpEZ"N*'@BkV-"@'].+&6op9El<W!3$hoSN(B9kYm6l^.)eT#LQlnWRY]BFFSGIJ,'U&Q9ggT9;2SkplXtbp@`l
%8hskH&cgS4MtlX#_.N0Q`_nc(.3\6DN9"$l%""MY-)Eot`"[Us1aK:=nI!P!q]8VaW3+_4ChcDoUs*rSqU$jB&hP]O%@oH+El&Ds
%_\,_tCTW_4JOJ><Va)Qba\OA3iKRni-:V@20DqAckJj-%SKK79lV!aEi@IrPJVsJ;jDZoF$sTFXH-3#bH\Jh0'eZpB0hJ6B,T^ps
%`=on>nR[bp+4;3B@oM3Xh\g&KH=b5ne4_]O_AVls^(/5D5rn3teKeeVP0#Q3af!NKB/;N;6.8p)DL??Enc5MJ=It_P0n4uh+71^R
%2mKCHY<iRI]l;&^@KUe?D^O;,Yo2@JF\9]6M\i#f^ZZte[*n3.(EK0C?gTH3S\^8h(Q"qQNF"2Q<mHGtO1$sRUH?Z2Dr*Vj>OC_S
%8EE.T6df8'L7O8qbo!<fJWd5gfoioOp=5(<ndndMV2o?A+#H>lbLuYeXd%&1qp27t&nbpH)Dl@+\`W7]Xu*6NMl5Ga\XDikTQJsL
%H!NHKm^ID,X)!X`Dd1R^A]n<A#qP4a.5D`C$i;#A^R#FS[Z<a$YT<$KYaSElN:SMJ7*\9hoeEi[5!;+_5OUi5RRX&_5Pr*#HL^^Z
%#QAVE(U!H9LI%Q5W)^,4R`216B^$5[/035V64H,ZV1[8;kOn#r7Chr'E3e%Wq?XELp\PH,%8>gMa+WtP'r[MuQH=@b'9t;mquZ=Z
%LR%G>[q@eIDe*^[d9a<_:&L+`IIcGL/l1Z?hSg:9N>+CUF.]g'O&Pp+Fq?KoeJ.jAFq>[`Co3;uK?0h7O7B#nZ+BRl[ID=dneLf=
%_hU=?bO9Z+RSP!.oC7E]6DH7"WgN<u"Ugu*M<st=cQ,0D6NF6WpX&/%AJ:\3;!C]A#mAM3><rdkYSeN7Kqi:_2j(K\2cZXsor`l_
%42=aB\aoF[M-&P\mkhJVQ?E_%BuZ`eOJMd=cI/UIX%Kbqoi8QmHC7BBfF@,XCai9J)L"Q08['k;&$G+0\3.fuQrEhOq9cmuDJ/Ul
%=Rb#sSH>92pX_U?:9FA?qpj(0E:^gBP5?Opmh\U"?Cng/PaC[pMeLC[+)!X-Y=@\F>4oj[0='u/mLnQte\.Ns:NtBVTBr,>M>?hT
%#\-taZ$gc!%!K]h,?hbGkTp#1I:YOT6ba0G3cneDlh,Eo_l`&IpA"s$Vrg$7F#,<!qS]8M$LSX9/O+[DIhs],3a3OVhVSKpp[V(L
%0AJ]`-[YN)0K,!h`n'H;?8N.Q(IprF'<f6dG^;@ed?4-/JUE/`@)Hh5S.9_gHM[Hg`p8CKaiA&HXh,O3dF#GOl"g;^D?QH@lRf70
%C!2/gHF=a7lD4$jCK7qTQ!Dm-]Pnb3UsNMq[Z\mK=.HRT%8qLK5.?--BGj`WPIcpRQber7nZfBAeCpjcm175-PP:[kNK]mjS3UF/
%pJ4>%X3sVsY+ApV/q#o5(Q[m_>O*rW?%mXV.Ci[Ilu;,79Yo99pMR=Mp24A5FQl.D9XAm[I//Z53oD[$=+8B4l.a6:DZ7Y!qs]F_
%dm[SHgP7$F"8)9V@!DDYBh86DB_LD$,5:PSGL>6[rq:\[U[d^K@VbpJAO3'1[KP`7nBU86^:Eg+4JTikc(*g.Mn:in=G&@+YYbmV
%LK1?^OF(!=D@gWK?^r1mNF'GHe#K"Vk4eNIm[;Z%>]-'t)nRWVK2KbI.Xg*S*OV1G=ql1`?7]?4FS5&_K=.%a8uL2k>`9^UIP^]o
%Ru:ML<Gtht3aV]rhYc@k@,Tp+P#WR33B^]$8Q1$?3m4GQQ*ZIn[:H>XPOE?*k)2=RC#>Q6K'599Z;J_,mp-Y#B5^g1$qAr6^&NMg
%ZIni9&mskceU8Yd&FR%&`\1E&>A^K.a6)L6#P)F(nGUp-cdTq&j/<[<EF3i19h&9hf?_2Z:tWATYZfVj%hC0P!P'\NQ@41njkb&9
%A*&&YC]3a&MpELuCrYTM4`#CKHhS*f:\gZ*I(Ju60gSntpBE_(`s77!ou_k^Ss";E4"kg74:O/<4tS[^[?'GJg@<S!p!st?NW,8k
%G@2fG?<%c55HT7X5#m>B3tC*&O,G^J?BC-_pIgM:`P'T`Zed5#J=b8<1e+SZFE-;ggg%G*E/'R(F8((L6SEo@_HtGLI;o4^Ed$mP
%>114Inu(:shhF#R80.0o^#ADTp7oV"K4XXal1FVaS_/=8\f]A&EZZ6m)c\4I6>kZ05:Ir%Z[7t.dUuAu\+\]Zat'B5kk/KTlWod!
%:J6^lI,S48\(e^\[[)Y7<HZ*oXhdM3C2()^EZ1rpO%h='SmH8N53]c:DKW;k.5ZYDX,"UUgXc86YFduWA3EWHQ#dUKQg9,U6ArfY
%gT@OTQXH<LG3&lu[^rt55"C+i!\@jQ*gdH[]SOA7mbW5GgY1*QULEE+HbD%So&CN>lfEHI>D^&J+pe.bX,BLe1QgJkH>-#F2EZk*
%Z?Q+UpD]B3hXaeDr)%OOX+'GS<_BL>?0]s7bStjl\c-V^m8Ni"Mp4,V^_s=N<\(e.A$N=G3kd,!o^*i="K-%rEM`;<Rk42JH5bnS
%(<3.IlY$SckjpM9emeHornX-`1>5tN*PJXmBu;_Dps+0HcD)*pm+g4fKP/(-1;C\8I-O1i%CLU*/M8a[e2_ZcL]b2iKbT*K;-D[m
%Qb:L;0CMo`7gCE,Kq8Hgk&#(BAT!"%U.*1(,;u5?eVbJCQCO.c4!j\!Chn+"\<PDMU-.'qTD']ufepfOg:aPM[CH0]GB%U$)$Pm=
%42kcYBnMZ]F<"[#YJ+'pF&LgPQ5ZZc`gEEDpq2WAonu`Bo'd5KXhkAb?aY_:4(5D7Aq,&an<"c*i-6,Ns((R3)BK95T3[gC=!J$$
%=KQt*.BmreW[Rf7Q#%J*MhdXgdc>gC<k=Pd9.L-E,AR<2NNEsZ6JVp[g)GLB8=mSV)hg"j`D`P;Z#VeBe0!SgHhBj>n\q(I%l9c[
%Y<Ld[03V>c4mt7q9kf^$(Ye>hmPd^gg3V?19/5.=BJXSO:#FWKFa-kH)8.rJ2%[B,hJY=XY_d5+d3u)%[7KEF_1JT9$4bZHO*;*!
%eU-Oj/eecHl`Sc]cb%M('6rKIM,6ti]`#M/J).lOh-PPlZ=eq"ajZUF@(;\(=@.U=[/."p0m7PhBq3"A5'uoB2"LU3OsL"WJ,$2;
%@+5RmXjK$D,@HU+VE74\0=i9$Mn?+YDr6S`b5:j5=LYO4HuZEC-bT?C/?I@lgJh\:*Br,j,FVBXCTD0l/_=t=pZaa8<_BP:S^gP'
%n'p(&/=`>nL>)XI^!3pL!GY9pFT(<fo24W8(ScsGbmZrC501(pENgHH#0kL0cT5Q%]D;ff`Oj*0j$E,T)86qOY+2nWCJlt50.Rhm
%,(iD2qNp:W4Q'C<NfCU!0gSC8r0$aB@Fruc^-KT2jR*J3(`<@chS0#-CU!I!DY_9Ccelp^k*N]b62PE5T&&U],l+f:f$=jKA:9am
%:gZ@>^n*]iS..]d<jj%RVsuR_84=1]_\)7d>H=)C1q9j#pVB#k[!R7*H<\+f+#G36(.k``aq9L`-FNWQm*ZK>-`]=q+#gr98k3+!
%on1)Z)g<S@nm2!MbI&AjWr/g+<c^1Dh-ftE@t,;mJ8f4#X:n_5-PbF>r0"Zq]Shf64XS+=OJ<?3l.9Q`Q1CkA:Kq1W)Y.jT>j7I_
%?q3@cg:l:n>ie">N#qY7?@][M)4f?Rn<=dG=*M.@V97M0ID("OM,+';krmnJ]_c$%Nk<iFjN7.mX(ZBIT+1Mdp;>/?m`O_[47Kc-
%N_Xb3J&-m;W<l?aH<rdb(EC>uHh)"ArE8S>'q!r8;KP&4)54YNG:l&`M8!0(8,BE\4U%D?.1#8Vhm[0Ds4-*?B@S>SI8jR+-2W"b
%ZCik&FoCTMV>U6d6Q8P`iU0:oHuG85-;dpE3pS9TUWS3"(S,TAqg"SjRSk0`>k2gFkYaV#)\m^,8hW@Z\ZmT65n4ELCSSLKgr!de
%WFr@rhl*'I]NL:Q(_Smcm>gSo16o%)(RLDBGbe-)8YsfZH_p0)_&<N_*0rfJhqsX;.hi0Qci#d-&cXRqq\:O!#F1'k$^GA7hh6.d
%=AWr)(X(-kn(Da1Xl967gA+>]XdZ.-f"V"]8,j"*\BUCnr3N`;nRZiB3o+f$^bW$E'u%,6YoKTX.B#Wfa9\2lV2_U:c`agKcMjeL
%rd=7h.%R`Rec[jl)b5$QLs8Y%32WG<<Z^U-HVrj(n]h4I@lXg?hRju/X7&7i]6@;bf.K.-s1W^I[L_j(%'("WlT<?Q+!9o'5H9,b
%C\LmlFN_/^lo`_4?>/4"A)R%U*kGPlFS#O(7+$q_#f/8JoFd(59Ekd.o(GR*5>54ISr^M@C5lmn9t+JkatIDQ\kS+'`5p,sEolYp
%heXBBaDqL?,QAt?O!Odc#:U$c;;`ZTme4#,Bn:[P>f\Rg(A]RYGBa`lWBW+I./"_&;Wc6`l")OS$@Y2f$nm57cdOHSJg"/C*YeUd
%$p')nrr\%mmhB`2QKWC!ZnPOoi",>#0ISe05#X#F*`0`CmsmP;,Q+l0.eI,C'Y9i%:iG>PoJIK5$S4U$m',X[dM,h55f4ar%^8nL
%FpmrZn3W=n=o3o=c^t#jV/Q9<YLT_ZH4'hf3s&`5^Jh"TU(K-212d\LE!1+8D+$&,*#(l5.kDHB<6S'A0%eE6\^k]mVPL)F6)jX3
%iS3;g9f)Q#_hbYI7*UQ+rW5$;T[*$BoK)"!=Ir\7Y/-D<oOq2o-QU[14i&B61Jc;2P]<Rn9AeZ<k_"QSf9:4:$/B;qY>@-r$@Q<M
%PKrZR-"in33U4JG&rC#\q+QCFK5RSk]Bjar5oD![.oA?6.:eTDiqXJ?)VAWEA]O8EqErM8EkY2:)n[49QAMY5`D"G$[rTp+Q("*e
%1EEa4O3-jeoBqYg4W[>:kh-cs:,pd?`=0mi>(oXcF=55QP?ON?GEBD5_s0$/"[T:&0sTL,qYnh,c]X6@?*6%Bp?OEkRuQRkN1a"s
%d.I8D9QJdCrp9?^Ni1r^Wqr8&lOiqgL14_lFOo(aZSJZ)oJ&;kWKZEX,_;17EP:enSsJ.Gnq_q`%ti?S;>\#d2d9`FdrJQ%[/ecC
%Z8.hG`kaQ-F/2PE3U,flMbUZZWHMODl((r1f91`"@T47#7EXpRC,J_RC!'#I@!H-LY0$8CRnHF.IGu#`1-3JOea3d+Oh6PlV9@Kt
%o)oaHfQCm-`V.'GlB$6_P(V6Y:LBHP><6AQq*1bkj:UT\p0cJ?+N`&"1P&Qh_&`&&.Sk=Q!Dnb%q+h[h.E11"C^'''dO+Vm=)djp
%2:+1C>r#P"-^OIn1sWE&N+lGH:l\/UIeVV><rJXVW5N"\80VOR9OGSC>PCm+E/ph-T(kO%"#-+2^i1`"q'oDuNb9\>EARY-j?]>:
%O;sTRf.K`5X"hX6g;D)QnMtEAWC@Ooe$4kT$r=jQU/,?/C.ahX>-3tgH[..K*9c](b>q'G^s3T.`knDfG:6"++sjDB=hor@YUfa8
%0))&<L>B)0o*^uU?cO\\L0H?J)h,%(>!;oG5Dp5fTJ%%[*U;D[-IPM\^YUU[edDo`%'Z-Y76:VDf4!&fI*ja_Jr/=fp$U-jr\G2e
%Mi5ldh'GKCT@/U/k1c\:djgfpk8%*@:\Tb9f-n!<D@uYtQkXEP$1XNP(#d(`\t3LWgb=Z)Y]UF7MRI(n3egqID;4)i\*2O(V.4a=
%6ds6jhfB6aDo/7j#MTA@j61C.ZQ)`s2N+GHH5%CcTpm$no(i?)Lu*J8_XT0e%pH-=>Bh6[D%_W.&!l25`GiEKfJ`A1d=T[9n.n#W
%f,]HMR@^,,:<Hj^d'R*.$*5pr>(`Ch5a1o38W&rS_I7Blri-Ud-sF(DEk"M-#F7LR2iF7nd_HdeTK&2B*,@AT_V]@7bm<0&:#na]
%Z([(%F(]j3<.d&Ngl5<g>(k;Nk^Nd+@JlOWbJ<SeVuEIC3)HFmFu(-kgN7NHkI1oLLQ3"p$-Z!]',/BB%M%@ULZ<!`+;#,J(`nX+
%98>$Wp\*[>iaA/B0NG2b#N@McM&1`rZi_K^+m+IG<d-'#=l;>I8f&eb<="DTm?iW`P8@8k6!4Br>WT&?+V@DmG$Y#RfG_CIr%rQF
%0h&:EVQF=)./8k%,iJsT*76L,DZ-sLGQ"*V\cos5FpQJDqh/&uSO,_'9at`q@IPciJ[f-oV/P"P-b<o;jgN\m5G8`73q9bF.N*\@
%-bpYk$B%Q2GAfk-VpRB@7A0#b`2/f2_M4r"['*/H2l:.((7dN0pZQEK#iu^`=?(Z%a[:%HXjRZqcsSA54ld<"gX@SkM^=g$4\0Om
%W1db*-L!ck\./gXRmg#!*0(aK5miRuOl3Kf,s(rea4cO2ZR#8NluHon'>nhR?kL^m+$^H"Ao.1p..H^.h68*6QXmfnZ*QbVD!W8I
%/MGe6#kq"G)C4)1"FUrZhkX$IV/%(:ORoVofM&_^?\b86!tl)F^Q(I/1Khc#>`V'BRD>g/U[!Jnc5>?e"F8JmCU<I**TOr,aSH#$
%$ustmnQbDlQ^EM]+#MJY#lR#tKCB!3RIMTY<knQc*XM!UAlG^cpud=&B&i_RY$l[M.^TC5Jk@(6d3ejJ+.u+4`,_7q(iBcO/CQA*
%-XAYu<A0$[7@9SgX3_rqCNNI]1ngXhYXb19A(u`L1UmUOfk+V*mk:!"(1!3:%N;NF,Us_kE7hj[e>OVc*)e98.Bbq?gOTf1[p8LM
%8\ACbGHX"jTUFHNi'$LRP#<+5%8[g^47#>T@E&Q1_p57][D%@V"2`WsY9ECa_/:qb0?1RMHM7_o?km*B17\X!"C#rABa6O6T8kTt
%`e<UO/%ap[-o9m6WBFrAWHnR=5UPrM+IT`5IpE<#ipO4;l3iI(aedl&kUkIXrpWg+=>#o(=@j$W/7FrgL#+/f7QXZRO_.L4_ffjK
%b#MZe<<l$GD:Gl.D8;mQl(28ok]AMqfa+8;Z`0g2\1e6.#Xi(I=^2RX(D.P;PoM#*l"m"a.+g!&Q73$^"l5Z:H8p'PDG"DX<9G8P
%8HrM@YsY((r8lT;1J2>,i)a<^,Ng4W>]\?LU?;!RA_=4')'0%#m,B[5^l3=S](P>0kS:t4!r+,6WON.K=i0re[kJ5*Pe)TUF>PAn
%mm)-_!o;8jE/E;;:<>jr[cd3n/U1jYjh7aPh>r&[,[ol*7/'$XC[%ped8+=Bpr%8&;hbOWJn@HbSEQHHgAk#Z%"Pj2;<$&BKBI@k
%:]Q7sk.pE')92+*r<@2?$Ps,b:!ml?DWsUrGL9iNE3T$VZ.3<%R>a=pmp^sD?&,2mHn_[9SoE9rTL+,8o&qiMM9@7R-igp[/I1F<
%_niRp$$<uA*=$Pfft@s"RiJ&nnSNsm-.tASj(o]9KCD(4*RSjBob34CdqphsTK12*?sH32U'!>^+4DA;qpb7kihGJud:pdsdM\^)
%F#_OofaqpW%&Hch!:G0A7H"BO3'D)E3/!KHQ3>)J3]MC%0!Nh/*9K@cm!O7sQH_K$\90Vdli;fl'0\aRHL`I(Ftl].M(--U3\I*]
%EinD(=;e>^D<;8G^-ct,Ne\&W?6aPj0VGUlYn@'IRP+2X!_8qV-]tZkQ5SBij5_(F^IDWKDftF.Xfr`F%RX#S#00`B7@GTGUs=0L
%\joHPWpsluF;qg;UiQWF`iq^#Z'QgdZC#tWV?;c-G=089d6jHE(7Z8FAXsZS<sM+5PuPIsVGc+_9`8hK1K,VofANY69PEj]JlZ/8
%D.%j4i-5/U:4s+o`"O$t#^4JOc8cD/0HqA]$1\aP(#T'=OQZR#)hE9[%)Vi_1]S!I93VZr:b)7@Jo#MG2/X>@_-++$&34-5$9tWp
%QClOL;TS%EnX-l`pOs/P@8M5ccD(Kj,<FKimN*0VB./LEE(t/S1)Z0VT&YJel^5,M#)<pR:*p12>*[1u[iB0AK'2L"US@tgX\5T/
%)0RTaT#Gunop?u?&[E.Y7Mm1OdF8KKLVs?.B/tA5C,uqoik`L]`U%_@Ttn\,d=RYI!*li=dJ';J3,U5$FNs?0+,<MV7WcRq-JOgD
%3=j99F!IJs#'>*GNN0(rrAbo1j-rOALJ:2FG=78t-mE=\NpRFO+mD<1:!a6q2r)or7^\S^7q_M(9/VETj]S8Di%T\4loK6N=Lq5j
%fq(V@f;6bQGVq;2hXT7E_)$>Mc^Q'<%4WDa8Hs7T$[5!*9UGLMDHKc.GrkQW)X+:;eqd!)PnDuo9VF-5F4W3RS'EZ@aJ__jfS%O"
%ctaZ>V>:ljGr(jtKa^"U^5]liDfk@-_'F->c&LXa(5%7:#e_$0"ZD@Xi<Jr0,c2JBN^0M"Q"a/k%GhhgUcO;93]3$p%;ioanNb2%
%hq\e@4j^(iFU*YXf]!'%6\D&>i9FPZd>60!@AY4q=(!VtS]4L#;9fWC:*=Rs"%W%3@sb(E/9K42L.c>D<hZO/'$YF\P[jP7?hr_8
%.TX9#3A-(3q/GF'3#\'lZ%WU]fu-q*VV<O.J8DX+88V=#fCYIbh@ZboT##Q1dYrM/9e`I/OYm.&OYrMgB[NO5D_hd:()s6t#)pkl
%kTo/FIN^U_]PTj+Cl@P'@'k]T3W[4N#_rN5Xls)J%(b5JV4L";kFP)4c9ondIK1U\l?t_G03$\V9cBfPI_bBg=maAOOPD@je!n3+
%Y3He<f.9;5lKDnIeQjWrF769HDaM=p7^\J%CNp=J[Kr7R9P0uWZ\:gRX3VQ#*Q4:T=k\mGEI?EN]MN\qaoAA9>Q)b-(=AffY%iJI
%O8L]'5m8E:eZbjR.mhKKI=,I3%$iIb)3ud8R47e"B)7kh8dO.5QGlibkUEcT\6sK#DB2q0(%SrBnNbNk/>drTA\48l9i%3uTZid[
%FVeDG/ufm:`)"*Ymd'N6*64(4q_>>[qkS(s;n?8b?"od"cC9@IRY3+H(3:h]=h;cd=W@s]aHR36Fo`D?DT(nI2.P>kc-Tb&YmVi&
%`kp%g@C/2BZC"[+S(+l#%$95F2_@ufW)XAVO7!r^AAU^KTFW!U?SsYLN%`&b,U>A8&C&c6/aOJg$pZqj>1FYc6Y#>]J-2/[b'9TE
%ZHc,i?PW+4IjYR?j;9o\CuIBA(3(*L?t@.De'S7+bMr')TOHd+%nLM(f3hSRRCAmKHW)0<d-rm9'"79hH1p)]pX:,j(-Ju`9P0k8
%3]2&Z*b1kP,W:9P%5cPnDW)Or)9c:kNB3BFN"?NX*jOB;j!c,*=Co#)=h'Xi#)u+d#!F:'?j&a<@e_^,a"84,3=ZkmrZ[un?f/a"
%Y!rk+Jm'Gr0^*bM%c>+*gRFdMT^S>d6,W4L_rgP:U9A(J!HXX+[[VV^RYF>E%'1nEg5)Wj3X2A==[\P^W%qKI6f^L)AX83WO-3nr
%9O+X85),ZZd<u+9b6nh1@HjQ=g</'73GVKAh*+E"9C3$9n9WoeR]8AlfAF&g4Vp"1Mm?pS=d!BPiLTU_'de\gbqT:>)pbJPFBG=9
%'\,!*.J3+_bKu=g+qcn6aQMApUL+\lm:"cn%:K7)6[au"emTQ-kH]46RZP]g0P,VoK.t0!L#*n\:;Rh>oBnZN$K.K=3+Fq!CGO?K
%L)@93o_ek3:GR&?>VuRia"n[Cc%5F[GkdI@?dR,kBk_TtKHKaZ)KF+g`WWOSb68;oY.^Kq@:rr-N?2,YO/Q&HT)kD]R_pAIe&^^u
%1G!Xoeu0G(#]6,&qOo8!&=:7"5:75-3g0"f!/C!Y?50q2j%Y4[aQLmUkCJZ[d$M%\=G_]jZU\[G'bbI%KIeIT"'R11=0?\]\9#%s
%,PNat)"9eR#FqWQc^e_@%9kFukeO'MFrNM2`)mkfBbI2>LVY_X2QTlqE[.1ViDIW&F?r$=NX7aDfQ!^>Q>1YN!clq)EOkSE;1Osc
%:XE)h6Dn7+HPU\QWUL)ir0_0m0D&OmN$/eD86RFXC_/au)$Q-A3nK@!i(UESA)\c-@-fHoQnL`fItesK'72hoRl/[!6bf\f0lNLj
%9*oqX54S-pKu71$A3#R*;;hoZ\MNVMf/ctZ9K]o[_VH*Z25Y\-FG4@]B">_/B\JI_8nSf).4=$]qY;pArL01kod&@u/A>'!0'n+e
%ApP2jFIWXD+(If7mK^_%$Cus9n-/dgR<C:"K",&]+teo_`jq#Ldd16oPI$^n#1bK,LKW;<p)'5Y!F*prRpg&cYUEH&;_8n)_\dQ2
%^l6)E%)_.7fq(^['F<;\9TL3icsI3F\\p2memOV-WV#doRelJqP=<uGQr_&pb:o+[bQA2r1!Em9cP!sM-f0m10L9N]/:/,C+J1mE
%TOHN,.8Lk:WA1:U4gNF;W2,4-^3oC+cm`n9X6ZI^m=7d+`Xg2ScS?o*Y2_NIgnOKf$qXEnj3Cj8)`Yaa0?KObC8e;T&#na;1%(Va
%o`DT@#Q<UumThNGmtGKhXsJ)o,'45r&5fj>2*3-H?rgYCiqYBhF-EhY78O=#6Otb>FNuQTd^2GrSV2u8VQN`b^k0pThEM?p:-Ef]
%d5@n-m)7W>R2g)3g4u$Hq7F50R&1K[4n%GZgb_*MfBQ2k]2>Frc:l,.@M+p/MMe1L6`[KSL;<u*?/1G7@A8_L?kOiJ=2hLqU0I=:
%HpKuHVI>>p4I&A:@q'>TE;IK%F]b;l#Ni`N[)`eCIT5;e#'K.0nK[o+1[T_'A=:ZbLUBL&Ig!Y90ffDD(1T@LXAsoabb;Emr$*gT
%Iu(8IO6GcQ[#6P!IUM)J_EHmd_AVr\TGAi2ogIHrBm4j6$/MpE`c*uITUe<Z*^OEm<?Y(1[MC>?_;HEHU$<*r-'--4cui"_1\fXf
%7dqPKSU`>kkKP`o$#5I2_6mdjZaf^_lVZ]r["W5k>aqTFq97^B0`d8d9tKn`P&9.Q5OXIDnp0iNJlm-WXbF`-kWB1`UE;(m;#tTg
%a2uL!+L*J[n*L-GY3&GF(Zb2N)3a-K!!Y5NkGcT@TAoDAIM^6sScKO6UVi:ns*-H!0!M#!FC[ZuIr9*D,Ja]D=A2?n/kZ]WL[d(A
%FbQ;0_KT]j5*sA.GK)BYQ2#r[mS(M`@e_6jeRAlsaBc\hen$lfCs\UsN^G+?9NSPhWdYXcU;Rl?o4Qdp!cIA$#T/M&du#TF<`,d*
%U?E>tD%So[TjuNH-9UsC-`4GK8piogGFiM<Tk2XQFYlpa1_D'bR?ZJSO&=fO)'Inm?4iAt\8H#u5/lL]<VV/pr_0)MJ4Hm>;@Y6H
%Yu0Ill`g3l%d;7XcQeYDd6DOUV]Wq#S'7(j_ADk9BA11c;O6/$fh@033i=;s9OK92.sR0&>r/MVJej(!ZHO@)^*'%4cVc$ML*oXL
%[K%agB[$DbHBdCX",[ATmQ[#WX5]eG@2"r3Q&ZrLc_"d1\AY_-K:61B!iC11co=*CKm+8YX+X8oMd2^p=E;pd&cKA1VDa$\#H1On
%!7O%^4I0FYj@Of*#p8rL>ZNM14cG4s'C_h`KY3l0KU_S_0C9Z/KS5d&L<#?!m'(AA$m.8P4W^k]?@(?KPL'L/r-:1pT&p;#F`bh?
%`\Wp=E*:*kel<h25>2:gm1CC*6LZ\"1Q@Yd1l!*cgR&,_i@4EjAf>IfLPL+NCDg.q5GQ(4(X:D(hPu@cO+`Si=J6tsEc?1`POJbS
%r0bS&?Gj5HBa!(:HqBf@*jPW,#=_Z/d4l6EK82Bo8<>>/FK!Oip&%qsL!%B7_/*o;%IWl,!(0)?D?Wp#N15q!*R(,+31P5<?on[#
%OO'J1(JGuVA"G8_dh1[ecuI/4LosbGcBId4D(M9gN':-+=H-u/^7_)_dk4b;%eF+42#WXDOe>jmogT?)+sL11YqSLtj`SsI+V>fQ
%.K.JK%@ppB[Kn#qVk63&THJhM6(%_:f0\`F,%ogCF`n=+d=B[oKq,]#BP0;j8<\driN^i=$_?,o4,&"[//*U_Bc]KK_F$4&*i4WL
%%6u9+RNWlHN%d97U=o1/AI!X<XO_r>_`3ECs5W`mB,XEo4'6E9Psou_I$d'#Q'`T0@G[b5*$o^M_CQgI6:H[Z.WeEKIu^dITnrZa
%P]Mb0Lbu27bqc26N0+q("VO#]i=L!FK6t#o9L9QVoB-ui-OgjEKFq"?/qOI-4_FNhY^fI"'?io?2V*2\`/2'b-gHoB"o8(AFticN
%70U2o1lCWW$qGKN1XklgU38:U88qkpRJ(n#VE$br9S"k\kKgM.CD(pj]Zh]g&&[mJSM>[c)QloH,^bQRd0Mt/o:ftk.XXNHJ#5@>
%?1\!(%CT3<Lk48J;b#EO![$2j+/-:pc7P.dJdMa(paOPnot3;^(*RKY/jF;BIl+JXYqV'T]E93]NPX(n6?MK(i"_BQTr=BfY!rr$
%kKbk(-db7(n9V>-o%Zh786k<NL`G)&CeY:S.Xj_'P9^n<N-bI3K=[lClu:X^=hm%/R3!KVo/7W`(OaLAejpW#@q[c4W+bMt'1F]!
%q@r5jZYZBGDt1_D_m[+26tV"f-a>!q8V]bl)Y=sZD,-"5W)uYoBZ=SfL(%6[6EMrF-Vd#4(K>(C=H-''@^rB(d#Pl<!%6W0_]#0+
%-q[H<n;%Kg(]t3!JMt^tfC8Q-P$KUY510$Ido!q+3j`V="+==]Gi"fZ=O#^t#r79;POR5HZ:%1dO6AF1_o]ll\bHmhCQ?:KP8#1_
%iRK29(-*kl;8FJ<%IW-&0Y;=ip8*SoN[KiTn^WMMOuO<_3#8>2cX[&$biL.6d@G/aktDCi9u?#9(KEpu$N4_,E6\e'VI^=Hq<=nf
%Yb@&S$;#252'!8h,L]N+,<D';[).)P]Qg6CKZd(?P*[Gugi*VnC2.>4nL/8J(1oODZ#K%8N)cWh')@?"HP/:^6CF`4RpjGMZkIDh
%=[d;>"HG@/6=%ET9)+?Ac+q9)A9]s<7oP%e&Roi]n;'hlT8:kdQ0='J!ZX@r$J^KUUP@6rVtNBUHXA=R`s@kT,<rmN#PmV=d5M[Y
%'g/5>i0o7kYruDUdS@[@VH$+o10e]XKta8p;Ui'35JVirQ40rDiDpdQ(oO-\7s%i\@!jDebi4b.&hZ,FdL^!"giNmO`EGemh.d<r
%b@K@nFG^fg4%7U(i=[.G4JL<_#nO1Vf^^9S,[<Mu;]Vs]n>PSNqMJ$=M'!H*.B=khL_Q*3T](-U/HfWQ7g57C:mpP3=M<CO+)*+\
%Z)1O;M\8/'F:*Fb-_t9'M-\NF^6@L*,Wr1'&gsFS7oUD>GB@#T5(')q"O$24ZD;$@eF5G?"og"XjPo7=1G)gc<tfNnle76=+VGe1
%>b]-#,'7%/"eIs,:;C@6X)cf<Gc^-DqMJ$=.30O+bZG-GU-sM?2pdc6'bm'r$6ITgSR<DPM<;sA[$,I>BiW[b)(mk=6=2khP0&UJ
%9sC3L:KEE#,t`,-s"&OS1*%)lU*F9%lg`nMr^]*WQ^_%;8]l"_knNtDEA/Fqhr`b\BjmrK'I,9KnU_?C&%b!#UOl!X)I.hM?,r'L
%Bd_k[e#KX#)(mk=6=6Q9O2Wu](U6@@E\)T0!b9q[(pk.m;1Kl89HZCD+Y/&:SV52RWkt`G\D2*3I?gZlm]9s2P5uGZj,JC3,rjIE
%(8o80*>L]2,:le]kAEQa837-=*`4pij7'#3<;J*3@,+E2k1sh+/<2UUNL&KZ7Pibk696T@7&M38-c<@R8(pPEgpG3i0#QeJ;s:8m
%icq7SgE",k*04G:TfBiZOMDJ<'jRK]i+do,ni-dO836j5267.HQJf$F;s5_m+=6uM"jl1:,*!)8-K,/`]C@='do!q+3Xsq1VT&]4
%`?Xaq>]*`1Gq-_nVGl\/3[#g:Q^ub@loS!t=-ISI7J+`E<:G\Rm0#F,J3PfT1*ANXa>fL$El0?U'jZoa8B23T/`mI9jNBu"#NcgU
%E>G=DJkKWf#N4,[]Vl'bU)aKZg/[8'8aoj"j4)QR:Wo>?BCfP?aB4a=$nfML`osAZ&KTR-G_G"nSnKLeEdFT4D,Z246)ino'g47B
%1<ZDOn7lL*1)ilGQ/Jkd1_G?aO\pWR.ZHYp35+_DYp\6s\D4;<='(."/Z6rsoKZ$71s>74`!oe)I-:irB+M-mb0EM!<,d[(m0"5"
%51Z4_O`gdICKd!t/\tpkVpJL>KCLc6ed2I0EZ6dHRXh0tk_`RT,W[Eb7&RlQ#Y:oH,OGUrf!HoZ7Y8[L:8+kS#%M@!D;Mlm,H_HY
%-K/VJM]aj5MujtrBlH)3\a77A4OHp@V1r"G1blMiEZ0?p&#:J]YZ6N-0mqtPaXf0V=VSgq@q69]>Mb_1?>1&(QC_b;_/^0J._/$'
%7h)@m=7(e'q(?M:AduXMab,H.,WaeCd8@_+3_UhR=a>ngM09jYCKQj8,Jdk!O&K+oL>sH,b\)MH%C'Gg2$(adA2]LePNf%(&fmhe
%dd%n_q2oh%*c"po]e.'19rH?>BnkY&>=(L3=#S'NZXc&Z-`.^*`fQ,\*)WD8?t.Omh_<^sm3GeO<tQr0JYcu!Br`#cGa'6_7h/kP
%@`n1T&rq1mL#PXtUOl!XfHS,C\QC,=Gbgm`b>##]"D,*uF:*Fb-]CRG$S03d/5lUOP@+bu*j17><)i@K%'pPns)0pg'C@&MC02(m
%08&A0;lHa_^j*G6S#b>KUSd*`95rAi7,]8VNX?iTC%1A&'$ljcBd_k[du$h=#qS$*6=&\!(sasF6\3k<1;?XJSNqdZjeHP,="_lt
%_';"bBaEHMiD'XW837-ERoUdo879!e'^CQ.8."?fc9"bU`gd=ePi23%n]7%=dS[h*3p_7MjB`Ym5W]I@RoRFgb&FoE1"m!.nb,q7
%h/heIkQ_c$>@D8,<X`;/_Y*D9\JQ1f3249[VBSh^I%m/7bO&bA>aMG(9"<C?3-EaY!0rhRfQ)SCOKL!^k^X/Zgl2AA9u?EE=](&G
%VPA`5FP$rInIB5&I\`Nfb=uKDLr6N8Q#O:u'`+i#!51qI_+lh1f`DgWK\l;D_lF)'SeKh4OSKJ/'jRK^&/%<>41TU3SUebL7L<V8
%j0'`E@nilJ=/glja3'AoZY579.]B,'fJ.V.$.l#R*\n`N4JKa%"'D<Bf7Q<9:;Z+id/h;l]FlhUSO-\[(h)?Y`Nk:>4Kdg=JSl6G
%Ms8"Y?;8<(kjmgP*>L]2e)4ss0pl9#*bd"\EmkjJC9pO>9"<Yu$@S1r#TL7me4>MSQ5nVY0"Z[@J?'!\l,ojS+t>'e7&If.B%(/*
%,bAZsi,Z^P2+?0nPl`MGRmp]F,f$G\g$W:;GdRSH&pSXI!#)@6?;8:ZQt^G;DD.f\Jk'pMT>6%I_Q(G.8(pPEe2/Z;QH'26$(%)U
%UT`ka#I?,nG!1u*0#(l`,-8o2Y9\1b9<i$;/R;-tdo!q+3m;S70A2S^BICT9_]E,!DS$S@El6qe<RY><*E0K9*7l;g]UFN>o$oi8
%*>L]2e)5#[i$TW+O`h?i26G"(NPX_R;s:8m_0?;kS+j'TXKc"f)/d!02IM<R0'K7l&tK5nQ+"f[(;qHb"?_tsVb3SFi,[:\oMo,U
%GaTqf5FH1qlS?,AKH!A3ZUKV86q7EAkV2scKH:Tm837-ERoU8lP2UH1.J+@GOA\>3`'"^%\U.e>6=`'AfF3\889@i#L^l3T4P43S
%97E\-KZd)jC7!"\\`jh).S\=1g`R@e(L960E0&W%9U(\LiTr<%EVGBaOq(4C4\!-C6t^_\Ym8u;BVJ@(?/#o3CNbZF65$*DJJX(i
%VSTR_j7V7T3+tl-.5"(["cqlOo)k4k])4rX!L=[*'qgoPEl6qe'g7Y!hZ:p_p/&(A1;''/K0:j0G/iaEi"7!`"'@M.-*I/:3sh7C
%<aE*U_r[aokUS]&m$\<Jh<bms>67jc5Yt#m6em)$&Q!ueWTGtL]@>c!0(D1g$'uQ1>c]*$j^qGi.i;'mq166b]o@_CLtr=[_t>](
%+@\g$Ni:;78BIB7I?&%3T`G^9eB;gD5gnY]^._$#O6Ef^LRAjR\A!PAiJTM0eDtupDM#8f`3b`lW8J7.f!NWL,JolSU..UE,m4Nh
%il+\[a-:89i#rihC._n=[_uTOQk#8;eH?kN$C_=_;kg%=96;)"L*d::Y^,XN?!ctdY)a`WN?SdTFK\A/70U0]A2YnR29cfr7;,+!
%@IBplg5t8OkY4C7Q,kAh&J[%=akNK,(u)W6aREpGmWd//X[GY_Qfp-2$;57,+EMk4PR%al]5C4BA"o>B^`e\ZBLIG(@uS1r6>)$)
%_BEI"F@An"`A&!ie#4a0.hnA8C<Oick4%lW6rde9%XUTGHUam-Jk'pM(5MX\3q<sO"B]PD<T[G=b70M2=7eaM;)j]gjl%Yp"Ks02
%>'-6UN/e5d$d>;hQ=7d([?L+D&QM!*3':q:Q%!HqUuo1n2mJ7EB8u)gbA[^]$Ss.V3\#C@1n&!1)/N<18(pPEgpAQG?A?WtVpHOS
%"J)Gkb*SfPcjE.,0p3bT=>[lcA-jeoSYE\n-&&p4%!$c0<)\Si!-AS;>YGX2-K.fbBiU_g<;P#CKQZ</+l0EDdWbr.RY8k,k#D$:
%;Ws%9jg9A\Ha:^87bs]7Ao`,R$('*4("rI5e4%8_k*cJ\)_c,kYjK7^i>GQ6?;8;3`-%J?3]*QsRt[uqZb/!BNek>:4</NM:PMr7
%E7e,P9B=>hFB%ac%VqLIH'f#C)I4-fMp1_t?;4t#_c3t!adEfQ']9fC0uR>CL+*rdC19kmkLpQYRKTBE-HmHjLa^%^&_<m$)>49H
%Q7JQ!(r<7E33D-^Ote7D.X4@Z_6YJ2EAn!5#<YW$oGe`R9nMICP,YD<+W8i``gSW3%`'B0CJ9TmGZ$$&k^XIi73\K,7o[DJjuA[J
%$8=%^g,TS4\b--=RY1bla,0MiOH'Yhd:#be*p=G-cP'`WF@hk2jiHq+!fdIOR#N)J;1KrB_Z+/Wib7)s`>K\VP]"P"eKd8O'I0@Q
%7oVm^V<upp0K:o(khJ#IX:Xl9&rn[X\k$n)kc!EObl"1Qqjo=4cO<V1:S8nKR'mF,-K-9uD[<P<6q7EAkQj?!n9!WIE',eRk3H-8
%/]4V\\6F("80JD`.)6E0&X),C=V'YX,J9!!aKh1?T7a190Pj[B'notI<)i@K$u=J6,2qO_f5M.\5D=urA]sRX&oJD;D^S"D!KO+7
%80hZKMnW\VcfhmEM%$Q,_+;X'K`a'(U4UFHSln'1*hHhN_2U-m(M$ca`_^V3!QM,[S@h67*?(&RE&17B,1nrRJI8FgK7#g`L0'RX
%QsuL!R=cY''g/5.RZ;8._dpp:p&R%gjG.+E?;89k$X.Ksdo!q+3[3G-i`iKq7;aW_d=I#q_lH?g?JllY0SEsN?n:BJP4+gFYctW.
%KebB2N!F->GVoddn6g/3^,dQ&U;N#>oqLl#ii![c)Njo-@2uBu_lF)'OtoIFPse+GQfs5B?\<]h9bS&W78P!2j7`_iRY50gB:*!O
%d8@_)3o[f2]5UKXkh;b%MN3Hh/4r[QX%>9s*(?f=6mWild9qb'Y_DY3Acner7C7T*LT>57$@"E7pPP]^BoIuP*)R;\Upe<1.6p$P
%9bB%P@HfMmQ/U7=*%M9K;1O!a7g4t;Yau%VhrScFDp9!TZQK9B(6^6+eKiqc:),.<&fh]LU*H1NL<"HL*Hj;GMk"o"MbY#FC)ee>
%OA&(HQcLimL?T_5Lrr%_,n+$RM/A./gXPsG%\XR;9I]U:e%&MW`^:%RK+IFK=]#rK8lT"'+/@.Q=IiV-\s>ZIJ#8&C-G<f)SY8RD
%aXP&b0mnSbY>iUf2.SFqIdTm^1l%LFUk8uZc8!<"MlEsB0mkNJD21C\klEeYoQ+[!dnmufBHYsW/Q%9c2*rgJD-G@6:Pq-5ET4Mb
%lsd-!&Op`-]Rl\((b(3#M5[/;XYT#eKmrG`HTKH]0Yu)aM7@"N2&7p$O.#FS(%DTfJAW)tq(lks%6P[WKXCg!2)shtW%iZ^[MBXa
%.ag/-I/Z7?W/I+]%q:>K&X<[j>5Z6UQ8,7noEgd!@@V`E/:3al_/F/,>H2f(.nFlli4?l7o;a]("E]SoSt]3LH*^1mbfo6C*DM:Q
%MOJoBLRNkLQalb,[VX6qdN^_H5C]O>b\,jR<,UoOS)?4o,V+0/`rsHO3;rcCL+U=uM5VO+"!O3!l/$Dn#O>r@hAgC4CO_k%r]FD.
%;%G20H*5C4q5ON.OO(@JLtfuZ6H0?Ia%Q8h;9tkER]jt2Y$on5C!CEDVB7_T%dWC4k=jP.'5B"X;pUqEB(f=X0[?Q7=3&RcQtO[`
%QjQ]I^idReHb*F#S9Fl?isgmY9FBF%\g-LeW*H7=_!9WIV'=:j+Y(P$3;*2PG3B*6KU]DI;)"8^*)mU+,Wb*?]$4R?h+o2d5L16O
%6Cq$RWAG4l<LSgP0+'QVShgE6M`MY(+'AsHr-:3I.aW$MfK-/I7HmHo6sV?>*>;B).@Vd*@B0:!j5b:E)3&pbj_cr-%^r<p8?,n=
%K-%7bWthuo9q8+0gk'8$F6=Dm*n.L8;2*tb$\+C)nu/.IM%R_DLfAZqa3!Mj1V=m7%LCglCCA$_FVYV/qVr#q>*oAl3m8J:Si=\L
%IMPI"GRDY\!u+:V\=QG[@+eSJgD]@K/tlVaps6beQ@kSEn,,E&=d2ML!NF(IC!h3iSlT9"63kbqGXB3Hb+ao[cb%fm*_gGd,\_e'
%C5-:o'W#puHlW@#/s=mfol*jnkKbu>&UT82ljS4YO,$e*j5Qn*VC10>7&4CmU2*]KkKbr(:lpT>+"VD#]^fY<#p0B$$$1)$pE?>o
%c_"iD$6h%/#pbpULqKq`Rk*]qCP5[qL>>MS66Akc<?8(2F(a4G,:h@]eYbN^B;DSk=!VmW7S\g;*#2U(.HL*`)9iHA'o,YP/LlCP
%dZl)*@*UJpWf8LK.#!-L9]Jn8MFrAa.<:C_=ZW57(cl`C^cph9HF:o"r%[4,1Q7'P@uFMOiPis^ZoeYecicDoW&QAu/qncB9V[!d
%$!/H-:bAb>X/L7ai`#C.g:@k'kgVBL.J34E)?dEYCBiCTFC!C?;VZL>Tqa\3X?W_pV]^\>r[btD,@$ZA]j"%GQ)3C9,GFE?IN\>m
%eWi9HjR_N%?)p7a7Do+=@'(^eWL93&5i[[RYn,AVU?b<K[s4arc^SY60%!C"L`LCB&S^d86Hp-,#(RWO$qsZ-H(99]4A,]nkYOT1
%ITW6jX[9LMmp`)n:q0J9[8Z;PcZC#W80tEn(8NW3H*p9oQ!F`LoZT"4>a>)U699=>EVm+[;%8eX]I]nbno07'b<8m+$Qc4;5K>At
%A+7QZ"8!n5O=9Bg9BZMr4tY_M;cJTK+eLjB(uQcH7?/<Ia&PRJAUO-BgEIM5=W;aYIf<$Y7Ucs9'a6OlYS+XD[_.9SnRJ_@(ar%o
%O42FIB`\p5*`1>'='$3,Vs9_=&>*ji@?SA$DO>G?q(iJtjl'VP4/<QN6L(B*&>)F*fV.1qQ0Xo+5C]PMcA;q,>a%S+EDiuB$aDQG
%T#AI+l;k8HgA/&_"%@<t'T0%C>Ikb0m>f9o*A=oG]!s@Tok)9%l?RHpY.)CeB*pE=nn$KVWN!>-!.`7p%`!:*kn:qARsJ#skKPgm
%DC%@8g>^'_7(Dhg7=QV2#EKNd\RJ",hA#PVo5(,lLW;ioRdfjIMKad,kkPcm1s0iC8^dEUC[3*/_i)m99L%(p7hS"O3j;%tT^p7"
%EVd4%NA[?DRPfBW8=1s']\Gij`upYO,`2(]MK/Lg1[S=iX%JU!kXKcYUtoW+U"`\M-7gX6IKr:[q:p88&.<[?,7>T5Cf.r$p&5:9
%*IW72aB;?p3fu`lJ!P5a&1g[Lbq_\/Q0Q?r$(p,r&n*)7`C1Fho^c_L_0\URW%P/CgCsIKi\Ek-h5(Ep>QIc05r_V'J"C(]Z*;@s
%/,,bWin.C6@55]5Z.rc6R^+L(3;rcCL@-F\/_niD(Y:RDb41/[PW9O#hc4e.SQ,H21X5hrXt)+8VZ?lnoh<'<3eji3<@hCcMOUMB
%aQLmU::N=1cH^92\kk3M%X/4$2/bj\iMqgf;s<DjZtWuY'm&)]S`Eotc98S4%P9X#&KXMQKfS>gK\aUlZ;hep%O.I];s<Dh1p%/+
%69Vhimm`Sg;_JuNn?Kp,-OTgPD?WY+T0LejMm3a-5EPpL;;B$a\5,T27o_nm?@13c0IcYcBA3(?Rs[)&8[f_9h4GnM@k*WgN\D0V
%StqIoSS&asXD#hgKbYmB>@a$Hb(::h.2q07?okg7FB$i^*iGVpds/srGbPt"==.'KSJ#S<ajP;cB#r>sPaWSeSj18g+bD`uOq^SQ
%/.Sb["A2AUm9qI9:1uX;8st^'c_"iDe0hnV.gEalr"qe$Bbi@C1fu4G#0T%OHq%*o2MHVJ9Of(La)f+"0.RJ%:Tn^jj($#K)!n4Q
%90Z09J#5NBcpS;0#5XQ\5ZJW98ba.o*/=KoDJ`%?T0LeL5D6j'-\3l9MJIbWQi9S?==PJqGE@8T?OH?$3Hd(^N.hIDhMimLL/aLd
%8b`d%e1-2UFXpN#rVW)'^grFA8ff<fKlt/+Hg]ugkTtT]-$kq;*P\sF9Pm=oT0LerL\Dq]'/sYJLqIG#k:n*H#:p4L7-H7X8oV*K
%Zo3\"r"R5(G2E/FXCg+6>^k[E\p@>%2mn0QLef7GLhVbM@TCt3EVfJeN@.=6Z2(Ag\9F>F]4o1mbD,Sl-OHD?B#>0[8R^@/=C`8C
%o75[so(hlNn$Z\<bS\<1BNCKWSPgFcAeAgg,Djl/)tR&dG*%Q(V3h63o^cZU?9AO9#*Er$\;j<:c"%M_:S_AJmuU1?c_"XVE"\JH
%o(;Ih9_)J>'#'?&aeJ'blL)G%qY;p!(J]!IO)i8K1J)dUb&s+;"jt<F_29`f;lJm)Eia'i-5;>1&QDi4a^pn0-E8cM1AsDD2#=a=
%*NP]@@I@NF7=3aJHEk=\7PWCS<>XVjOO'K\=QLgTOu74qK^/Cn$"*Fa[^`A(H0\ZArS3g$<DLuhA1$?%RH,k<-%*(l20!B-](.S0
%If<$aV3>:elCq%MlJ>@J1)!tC-B977Q[OnCc_"p^FqPjso%Y]`)<?$Z-EQ)lpkYq"5GulST4ti`&frT>j2IEqA[A5m9P/OgZ`:Z^
%.f$`&N`T#nH9C21MtF=;n`iddb[O3Z0N-G@+/b_qdrP+,$o/B\=eo*%Nu)Gdh"28[ooG<_T4b]\'':)<T%!*ULt?5o6Qr>@NZj+&
%r[^RiPL/+FLX<%o.,qY&[%cu5_Qo&61Qh/RW\j#:F"CBg+rGq"N7V[)Y76Vp1D);f$"mDDc6Uq\)Q0/cbOPF#%_SDkDHXrYUeA+`
%:m_W'R%faj$MF="QKoneeoQ05qKQj(.nW'(<pLj&Sj1,5nYH32h:q;K[c;%1Es$lH)Ac3NrVm;^W/9I8fRVcgcp2fL#Bq+ME"2[2
%c&WJdXX1(iEUR4RGFZlCAL)%5/r>`^MBY8oqjOm$1X2I#->4a%;cO-??8Q3FY^c\CBCI1Z)931E;l%ZP7V\Q)1YDg!HAQFOiW&mK
%cfdsr,7i_a(!QUVc/]H4G,''T*kM?pr9a)=+=EjJG6?'2KL_YbRE19%'">j8"1dmq^O=N8kbR_,I&_Ldg2nc'+u=q6)!hHql-Pf+
%jo><O:Z+h*=f47+kVrGgNn@#*As_kPb6Apoqfbh]mTt*Pk@_;m*E'6H##0T#A-u/''%q!:Iom4=N7-ktY[W5$8+c+uA*/l9!UqFK
%:`Q'21u+f24EZF7m['n3&g/2+3Wd_$HWsko?0G/Yas[fp-f[5b?)>#(_g^M!IeThW"3-u!7W^#'GNo&V>!N#0^I(W@B?N&e-,pj+
%32m#da*S:/_C+Nh'm-[g0gVUqp'j$*$uq!.'[o,0Ad0d7!1hP8JLQsT=0oN)*o6TPbQot9`8Jp_:3Z@h/p+<kP&Gp+;Mto+X[E.[
%ApOZk95gK4SQB$LJ,R^GAcI5.-JJt'EMiVqeqLtm`/Y[S6_7+8OY_?Ljcd5lAT9$.J#nEa1quHr!]u2Xg@e$U[7r:V%NQ@1K,Cm[
%i\^)&["Cm[a8FW1_'&O(R%\e_Xe-T.mDe*=OE$d-=3,lj=mE^S(\X`dFlUkQQgaJ:8AMNb-Ab::Qg7QV>tBS326]rRcf6Tu3C<=\
%>.7";.,*"'Z".Z*2/a>F&K*/,8SuiM2:75aHa3o"cl$hD3-#`A<YBGK;Lc#Al@e>&9#6G8W(]a(Vr1*S!DZs]"1Emhb_HcmCtC6X
%r_L#?f.G`a"s((eVRB\YQdA!=(`0HsL,3*CT.$.K?m%e.!>;hs$\/7ap<+_a@K=^&hlQQ]]FrDRs4bL]b+I4FNM.dH)p,4)]Xoq)
%d28_Mr5VrF\@ciLMj(YIdmXXB(3(A6\/!2Qs-q!XI3XpaJ6l>j-f.r_GuCTbbm*$RQ$4!m'-\@0S]oYslTCc1^d32.4V^-ml#p^r
%icG)fg&4E"I,l"EJf5q##-^?<WTX<m_q[S3U_4)!Um]p,6*7I%S*4N][:])&H`bZHO.Kk?)dZ0/Q;(s%N1n?2-eXa&J^XqU]e\j\
%ISX&3]$c-DZ/_%T+Q3$#4EYH7D@@1!C[sgZK7EL(FBaCP*KW)IDfLUY?"l8Y#OGi04dN*Y`f36ib"B+QYK&-fa&Bg<K2q`=>QCdq
%]N*@4d^:DC32A)/Z*V@\+QaalXM&!1Il+9n!,r%1fj*9J:p&AdAq>LA4@>0uAFn22beLTuXp1H=A*S\9bWQFs?&NcJ4ikJ8A7*+[
%Zn-7'@?)pe%HJ#(XpMm]JVL/KAJV'',!!,@SP\'rO3?uT*OaB@:");Zj;W<Pn$,\=C-^b,36Psl_P:kh'"XQn)3kC1ga58g.1NGY
%TFrWJ^*F!kd*_SBKe-L:\.bBV?,TJWg;bD@s7j9XbT5pc_!-.'P;,r_h%@YN1Wh>%f=8JP1GbWm6C-U1O<[Q`aMoQS1+;#VB(S[D
%Z>lr7V6R5Fpu(P=YJr'ba"s^T[($hIN_7S-Ys`4ls*aFOW,tu*#;%-uT,+D%X5-NAj8og7rc@3.iD`nfS)*1<Iui(RZ^^5p\.OuR
%Y&BmSD<l2MgN,.&gEc(DE\lY9)a1h-/ogG0*.I?KBe$ZtU@No%STnJ)&mdNSj8+,S_k+r7AndiRmH\hR1j(_2Q2DHhk1BnD^hLE[
%^^Gah/q+CM\[!h*DZ[ZKJdt>E?!elXrheI@2PLopU=h/u1r8E1ir1huE!Zs_E^gEpdCp9\%/^0P31mpBP-H3VS+A&G8!M"XS&,,`
%UY\+W2!':0"kZhh4N_PNK?.Z<3N[^&XWi6W'feNAF7"<H9)i$D1!7fG]nG(&7Ie6$T5OBRrK"^=?X4)/$PT&orZGdgW9CE:5_+0+
%qq6G6+_Snu=r),rfY/#qEkJ13.@?X._+aHUf9s"ZpUL4RonXtN%_(+"=a0R(Xs:r4-1V8:F1?"`liW`A_OG;sBXN1:FkjP==.;fC
%b1-&bY)sN%Ub2K,LD"k&d8p#/p,>Js&U`IZ-e7u-ieb'KNdP9ilX^V%-8P?fm">&W!%<]N1),:BBVk@<IZtnqb#tk1JW@Q>_80N3
%G\.rcSX'0"\44WD");7PO#N_JeY'.[csAWJhQr`aSngWtY24]]g$gMS0Tf?[+<"P>1EHT/<pk7cFtI,<3W);U(ai"d6mIW!>!H9P
%=rVsT&Hi^[j>:B#<*['%0MSJ8]NNg1P)[!OiWeW)=HR,6Jne]R1994T6#&'%UMkUVhEK4_GW_7gmf<?h1=#"LYQT2(/[sFZ!26;H
%*UfsVf(_r8n!)sXXH2D3q&,o.VTq78RS-i\n:`0X"uM:SHqI2tHmPOHmjt*`<MttEPaa`BL\Yn.CU;sQ*9R'_\e<V:YRGhe=T@a'
%rPYgZEjPH;Olt)[!gEasYTgRRJl`D,j`4e@lFQ3Ooh0M_9_We+p.ACM!G6_8:-OT1`L+p`"l3eN<dMb;,VO!1k^Vh)iP5B4%19gj
%YBW'cI[*VOG1+6LQ2t`6h*u#;mV3ZsbQi;8K_(uhUN,Eb"r0;`b-DBmI%c5!Yj%oiAFm*IT"]bg0WArZAl]N%nEV\MHF>]6F@MR%
%"@VU9\')]\)$R@/!uZcb=0RNFcl@4=+7a]?hJd^Cb:.F\.\CQqS#g]ZQL7$Y,'9q)'i'"'?V;tsfE<&\E8E>];86iL1lJe`kYjue
%i%2jK1Hj_\;`+,t%uhb#kfj)*Reqd`8Z"]J@/FL\dg`#6G$?C%k::*Y+)7NO>[_,D-ki3[=9HrP)uf;mf?;2KWJ&gPIRj&s6>i`%
%C/@<S<KYOh[/N@p&X_EQOZW?f1*m-@pqPWd6;PbVj5bn6CtC8.6]"0p+Kigd)GU]%R]L$s'8$hR-(J4V2XK<bAY@@O;gS@peS@g7
%O!n.naK!S?E`qWt0pEBaR1K4^4Go,"rpN&kJ(5"hXIe.'?(b\U&nFUZ*jO?=fb!AU,<]fG_1<-$XX)AA_uB&OqWi'A%-O5#n;n10
%'CdTajDe<M.ni$.gC(PG=UL)l)aH?XA/Dh]J%MpkYu;'#&LBL#99I(A_0P*$\-\$T53U'>MPVEBM%BE<aiH9mLAqdq@Z3#?$b7F*
%nSQCpg^;%.UcSR5>26@`o#p8;JLR<@BBi)Zb;V!hR.pZ015u")I[?:(h*eQ)m]ot>?g'%V?*u2T55t9q#kZhCdePnJJIn8]5o\"H
%N/$[Kf$:J)Y,E#!;a9f'+0SD.VXJiD;ot:O+FIarrNZkF9q:F')Ocg)4u3*Z[-Lq"VXqUE_Ih)e-)CCe@^Dj`C=B5R2h9@"fnZ^V
%&i@4Ri_3^kR3AlbX@tZ:V:-G=D>ra!""!']<@@EodV\9aVgBSHVUOcnjK^neq7otfI.\U-5@?KC4^SHcX$8kr%elZra6INbJfmBA
%gf:)oWZF1H0M5ZJqr!^_rcir;%d>rO]FTE)"Uu;nbQZk&df_=/HiE5OoY+NIc34uh_a2WIChGjm$6+V!J@;'`P^3uLm:Y<.3,nQV
%.Op\)!eTQq?DU$@3noGM:hmAaBdnXqnWqp]j!`+!5)gL1W,Ve5CC$">HRPI/3'.u!oq8#'EpA)\(OaH)l/jC0_2W=2\/;UZ/*F?a
%GS<HYU^3fa-nhR$R$ShK[P>)Hf&8hVitbph6a0ol%Q6S5_$BI)<`/:EPd5h6)T1qt3.]<=K-od"S6\X?-q/1\l)p6N'[X):k`"$b
%4RDP[Q^]P,omk=tff3f,dR=-eY'/ua4du*BkU*a6SR0"0!0j_^\%'fQCOb[]miT6M.[bGg&f6>rT*+GcWEit&7p+We2RAZs>!oH_
%A=in]`,Z2#*=AKC;GTK<A3;4\VP!T5H6&IRdN7Y)-1,t/r#3J.f[j/RrC<3ZG79.**'_Ks:.G[kR2!2GnoHbs\_V9(7hKj:bu\IO
%1dU2`^ejR;^`V+75>">=fX[532Mu@>L2B]H+inu)M3^rnGsQFjZ+aQlUQP9Bdu)Yc6,uBK;Zg.I[Sl<FjQ$IXZ>[M8HrjnpZYPuP
%aZ:+>,E1QSOg/Ha;P6g>:0OXk'l0""l"gW*ig?^S7[rTQ[Wd<5iNouNT^*ogDZN*m-<sL3#j]V#k/tEb$lSWqEK:#X*@atR[<A<!
%drTCRl]5@@'iN5^5m"9.j3@?f3%iq/D<:#&bW027J:T;jiXIEt@E;W$4@tcjARrc"2pMi@8,!kKQ@^>:dugh1qAEg?dWXShp4Jpq
%5GZf0<L9AfH5aO6/frWt/hrZ2gE($)Nn_Jo^$a,@QA'CQUM5\G)T`&RYpA[-o$MGKD.3Igk#ER84p=P3Tq*X>5Khls1;m6iH9hM+
%^00^mqK@lNi*`@Oeja+p!cr(5REf"h4]SKND(GM-3DNUqbH0LdVecgF&e)#oM#pL.H.I^H9pUE!b$>Jk)7?'F"QN#Tk]FTr\Lb`1
%Hi&kQOQdkaDD]J*"Joc"9Ab)AFS8t[F+^G^@AK80PR[ns4,a63<]kS)kU-JB%u'spcjOf,g+9S/:1@-6_%83I>N'!H11XI]U]!`1
%%Qr0"+b1pHpaSNhD1l"'FVd4^)i#X`hMQ8(<0Ad:^OS.%BuA`7qgjbgd+GfhqAm2JB;tO-UdMooY(&?-PI7p<2&Kt"KHp!V.CA._
%Dhab,(pja0"_Q$\GIl0bqV!VdTP8#\$QY)2BKLO;U[+<hD'YlX5:\ne!G\YUL0'=ig"BO1&KHkSB=c,FK)NV):SSNpp?P%+,5W@>
%j7G)PR^&U3`c9ENq1P^pA[7D;0YI>Ps*:lS+*+G%1ct/VUcXj#C$R)LJ'<UqT>3a3V$4RR:nZ;!!Vpm.=db8Gm9H)`U;P8/"9#u-
%bF:#FE*_OIW1Ygtp"A$9gi1tNrtHki:C]pfRjWK*$Nc6!U<ZKi]4PC`s0`hc6&j@2R60a?ZO]>O\Mg(n6";o3]Ofk.N+0.X^X>C5
%+I:.EO0$t6/,'uY2W.PDb@*h=,+?oJCi@JdYneXZnJXMBr,L<5!=aM-G\5QT3oW\/XG\uqLq=M9cuH83EjB=V;a2tK:A8!*fmQOq
%o.\MAp7T[sNWjMV[:,b!ppuGLh,EAEh69j^Q5mg9`ie29`\U10O`%eqkGW+`%rGMohg!bG_3>up^mfD&I^lW4[auLBrjiAm5`Lr,
%Ua6V6->!5gPeJF"HE/+LRJdTBP1e\1kR?_<#pcMt6F=r;AA+r>NZqVV")PsQ:Sn-<U>ss_KY<[dc4F-rEeq,WYn3<_!6^2c-PPs(
%enK*Pd%%8]>n\ViW@^?Ibi't06NAZB0BUW&C['Pkcm]B!\)ql*[<Qt=6-kodBZLn@R%l^dWJ&op::^MJRIho?MMl:;/,*RWqM+C@
%SoeR/0*@Z>fL\/rQ:+d-UJ2WXStVm^K`]@fDae>&4Wqm.pM+3U"kR=s9Q\%'('K_t%iJkjb0\jFPQgC9Vk4@-&&"VR:C2'uP@dtD
%:3uijGjZ/hUft0q`Esm:BF.E;*H..C"p3rCI+"&9/GSh2iXIc'&g0ATm>PhkoV0,n<t,AtA4,JAjuK*rT+SIhY6=:f5-FOl6F%d3
%8nX03ku\M?ilB<&0FQh=76Qeq')N.mLdK6ZZDeiI4C4.&>b"Xn+%rt)qI`b>ALShGbsqZ>h#amqD?qp4O8:a`8t\aHc7cu2gREB3
%/ZQTr/::?9^V"O7Ei*nRoG3r^$(0KLE>e3L!d?2Z\g5ZC-aio2i3$Z+YG8WqBd,Chnj@[XFHZNR-$#o0=;0_]F[d!?no?O.?<k>c
%"biIR1',&<k`sX`;ddC$W+,EMCVOIVEG"8Y8ObF9-aDidn8tG3fsfcLk?`T]X\sN4H'U'I1%uV<+RS5F22a1b!W7osDXc\j&,L,I
%>o0Wdg2Qlc2&T].]puUZn$CJGWn1Weq>Kp<B4QD_!#O"V7'Gc)Xa.^SERR?[VR89Bm^[K8ItOLeDF:F8]r*VH*WOo9Ao^r^W#4iE
%Y(3l)feFpciiVVpi5Qeh*RG=[a?ZN?H.'iK(Lc$;#M>rEp5;j4#"aCl9d["SE/I836DOB"N2kM]7qAqPg@<%T_??DA)$DU&`(OM0
%5lkIrUnbsD0Cc5Q]FN=.Ne=121To^aY`H&*kd]q?)0XFieV=*JhL6%XXBmLt`MmL21"eT\YL,l,&PcXIQ`L27=tZ6`0DXXS2G\81
%Ip(g%0?'<I:\,UlEA8^niXP(5mtGc&+iL+hVNKWpKcC*_gg:B0M$Tf8T_iFS^ReIg2&$..>\N)@T6ZnAGh`.l5UO7rSOtoNQe-u6
%95JjLVL`$9OV/@@m[krmk@E'FEX3/8G?4Pk)!Na>U$4Ug,g*iK#O+M]F"l$DL:6$+*fD4\et0^q4X&KM@!ZjqhbYP18TNYrrmtdY
%q+-#66;c9?`AGK@c"NAo:@So7(AJIe-n^dGW?q2""udNQNWLfka32e(ppqe@)YR@tV_sT+&7j#`3'f:,c@I)C2p'o8X?8Vqk,qdg
%enSM)4?b"o!Q>^iM*__AZESL6kH/Oj+"q@<>18,\^d[/M>mUf"Um\+\J8mng%mUo/iQRE4'l"B-*3#29JXcl3$;/6+73F0::@n`X
%"+Uo)nW?Z!)Ot?RFlr3J&ju0sI5CS@0+[*b>45_bm7Vc4gE*6$L,DBn=Ze@q+NDh@`f]U2Jd.ldDiB(:irU9ZTP`.BodcSOQg,DE
%&-6[\4.8DX$It:<9US.U2oC-[9TbgmdFN#L<R\=8FS<Oq&u_bt\=lHXdI9!0JkbJ`=WWjeLAKb,$Xs\n:8TD47k;=Z/A>i6fgsAP
%rjLU!XLE,.$@fB&rVK"jMq@SPmS?i'$k?f^1;j)1?0H&gBi-#PI2ZsI-8HVO@P_RUl%G+>i;,tl'_G[Q/IC@>>es!p'@Wd.b\$51
%Qfl$&HuWJ:.%7*Wf"r`6G?R.')0`BPj)NkKW7bnL_!$")NO1,sdZYKt=;W<eFDuFi']<b;N)dr"HJkp#J%nD!6o\`1/_S4'ooU<7
%h+CqF/mY94nU_"+Wg.HIpjjjXiARQ(mp^<Kgl>^Io_eooTkr0)$%c6o3Fc.e3rJ`qe1j@HBY`s;Er&=f-4-,!)GmiQfNe4VVK?jC
%<]\Z4CmCS6N6&5s%j<+5B1o^R^-f[i\Ndnf\hoN*%0-8]V%)?mD^kbVEOgB9ku)`M_"A^2!?j7+jOP"Ib!^m/HU\-.#SL>nie.46
%@TGb?<dIS%m4&8.V'M$=,SInQ=Xtq;oH<AfS)M+hVN,eqlhejABgdEG)njBsTN3J:IFbV.Qh^BA$no-l&tjeUQ$kU?dj.hAb.!hU
%Jk3M&'mCLm*C[%&Na50TDNXq]F2WV/qnN-6s%Br5O>A0#s7p+H-GpG]=SB7s8OId#=4*E_G%W[F*.dMc45Bh(m`gQs]AA\45`\HV
%ndD(H/tY;uaiN@Yb@d5J3dDbDdq(q"Br"dZlfCp(:?Vc,!&J[R`O3KeZ!<M,M4H^r8ZY+*N09]0!%DDjfA8rji^KN>Ymc%tR_$Y3
%9orA@[WNB/T0b4#)8@m8YoSN@.<ZSIfKU)tZ@!,K\8Np2Jlfl&-SkZIG*'?`-QcgW$Ci6T%Hf_s__H(7Y;ne83Q]!XM$Em=m4BD5
%K`h7Zf$*,E7jtojQ%s=S#PjDYgP,@l@kNdGbtX`MKQ\db]%OMsK]<QTP1kZjS#%Iq6jONKLbn54:R3Fino/j:d;H$*aPlVMrob<(
%s3YC:c'b3+]dhMr+cECl[2dZ#'.8,+m[4T0cUl;m&*.m*Dq:j?RQ'k,Cf3Rh@Lm?3]r/cT^f6/:r_:\d6BAKJ:aq::H_dF\,S!#h
%O4Ea573@b?P`rD5kLUA(oPZE-kW[kWWrXKm="tnONY8DJn!s]9N1().lu8Ff6\%L]U+-i3n:/&:]Z#b!`tu`lXA5n=?94:bEhKI7
%2$mp=rp<%a`JUT*At_@$Nd,X:(;(44LAfFP+uD-b(pOdfqfA#EEc&<K4-auXHi7nsq&dX0(UGC6<&t/3G07QBM<""dd"h4@gkHKU
%J+h(kIJBUIIfAbt^(1217c]=&N8TiaD^EK_NM6Q-<%r<r0>"5B5j90c_ltH0-R-SqY4U$>QR(eNU;G2_'q\5Rk(h@.oJ)f8;-qN4
%+1E)lm3or6e+Rg?N+`""-<IP-9;,jXVoh^C;Q/uB]11+..&?,GFk$ltW^8)Dp(#qJ^M\^9j-5T77s^8-As!"rN:BH2juTcX'[=UK
%?Z+'S2AX[W7[/_J[mYb2SS.'IIBN"bFi8L*>"9bdA_78NQ$.Y`_DQY0kui#kR,4kdQ:WB@2ftk(25l-PT8DF>]C8Cf&56BEH_R.Q
%s(579lQZ_Ur1!u`YfDS1hm4)\"Y("QpnY`]Tr6C151.o^b^="YdD(%j6ZgS/R_O3FYN,Wh13KH9!o/^`+s6%FI\++2hokmW>uQX+
%=^WH!oN69a%Wq^<_C)$&D=cQsrB1(gb7nO'ToTra>'5L1-MgPs(.mq:oi_@HA&:i^+1=6e1RFLJF"JmU'Ijp.Ie5m4a8U7-!iWs-
%Wu'+hX6@t6?'F,10/^r.C,E6*OMmR88k7sMlad1j"5O8gc%-C?+a2a+dEgj&^J(QsQTn:Zfk#K&`u9^F2*%\Ab\>#'F"V1'>M-j)
%ni>(m]*f][\@Be-BDQ6<n!@aMABW+%\2C50TBJ`7DfWbF&:7oH7Md:dP-h'`W"H=lc[jC!4nA[gTQPGRm[8MFs4_+B8!du_luX5\
%1HjBX<=K^F7GgOZK>^t\a*h+S_>"J3"5S*I]e^`T(`'%<*pDeW^Km^qlB]Dmf#506]`^-/9\u_aaj\caH2[PihA\!uCaQaSbanPt
%'CFqg#P*04n!@_=-Gn,Q:7`11jQqIh.+>T.4Y(IP5ok'YT%G's7TXe]-G!aYSCl0l[-Tu'TV"^RIXqQ:V9&6gap>RH&+hj;L.W;2
%j\m3%6CR_1hAZP;fc8*2eI<I%opPOCf`V18qDV(>8cJT$PRlu\e8DmlZrVu>GfF'H.9$de$t(!4+JIPY>^<BWW^R31GSeo,:jUMQ
%7-qM^&iXEY9D`Pgj8HL4S_64BlJE.G7\%^]:a0d@b\/jWp\%>p$?\Ld@^IlGEULp:1fgecH^SCi6ALht"M\Rbb*N(>L#jQDUpdg1
%d+:;m3QKl*,'(OegEFWXAq,on(Sl*(EECRlq7g'9daTk5hETc+g)^GmCnS&@q?Dm)dEs)=[?#5@e!+.Mk<8gW.'>JXeYt[Zh/pE%
%q:LakC085tTWdDU6)rG-0I*FFf"3cP=D@3*T63gSFsMAJa\Nr7D!U`KUSprZ<WH<2odSKcQc_c.?0&NaoUPFWK@NU9AibfAC`M&5
%iKG+#?c)Tu]1eQeLP")a2CP3W(]*+&S+6MVn0f)V]BbVaUqEA'Pb0-48gF@IlLl6oT<iU&VF4.]BjKAdBf3bJq(JR->RS5:!U8=O
%N!HW4Sg)L&nWf&">TNS>O?:"GZ]abul'8jb/:8f@iObTLX)nET?/X^J_iBetE)@'`627Fs92G&M3,ir+)6'bJ(^+E>N/B(4+d(BE
%hP:\cf8[s?]nG*P3^OX.KJ%ogNh<*tnhm@h-[_dm7`MpS8)Q68o_H+gnZ-c-D1adL:E5eQg4Wrl>?K]8Yt*_6ikC;I!A:,%^L@iH
%YYocWXO*F>]KiuG@B;ZL:@nep*%.Y!n4EPp<cpn1ZV6[t^ks%u[f)SQ`()3OiNqk674tjTbkNZJHq^\s7Q5O?4#?*.bRZ[2>H@/S
%B'>N8QE3Y@[BugOM&m8hd[:;TgY/?mgJ6(F\Q<=doZFSfm_i\2au9Ql<fe&tFsT4tog%DnrQPNIql_oV6FrRB"]$)O1;sfY)b*6[
%"u.T!&$MA3hO_Oio!2JfY3-P3ZK^umVRn\KX`FPF/"0k4h&6=`=7W`C=rR<iNc!J<jPZfqI\Ipu]+/2WX.^J#DD-crI2KQ34-kPO
%\nh+RP%VdpR^"8$?YIPs?Bgu,ccQ[X_a1GF1S&==m@r[g]rR%]S!;]Z4t/;M,E[hN5(@c4IZ[A2-AV:C>a"?tpoU5I8oe-^(oVK@
%$IC;7[>c5gF?(q]Om*LgSnqnE%&\s=D.DM)lY7@`B6t'5@CBm&5&B/.cV0tG],CW%I9OrG[0&gH1#+$.#&uJ`\5QP%f#)0`I;h[V
%Um%Q\gaSqhh'TpU'iAHS*B5fW,(L=K10LHl&a>MJ*pLRZ3q/R$L[T-#Y<m6-Kl04J*856mT)7V@JJ:FDoB>bL\gr1o2pAAokh6td
%WM@Rk?J:_B_E^m1fen8NpU20hA`j\N'90IO4UMF?7Kn*=2JK#6?epZHADn`q(]=`.iVD@+3fCIH]13EFZNl#Eg`c+5!P4<\]SgqW
%[i(rb;sRNm(^ts4@!VnoC8c/e]HRZOL+cMK%eA-pSX@!+pgu]'rUAWcoY3SB2X&*oGG$@Z-5^thW7:q(^B3iBVYI]TLCX/GCGUd&
%ZjIs?nNq/*Rm[bhR%/ZPV/M;^i/QZ/"b=bm?7O1D%2p*iDXmQjH5.Lk!0Ls9,t.G?JdihMd%q%jCa0fDC#`T;P2@dk2;l&^mGnhK
%%+=dW/+-t+WbaW"BhQ@?:GqeukLL$B<G;27O%ON$kr'R6!c=$Hs1Ook@8JH8qX7;O/h"TH\<S7cS/3#CPRR-S"b.=`dN<lsjFdfk
%!*rL(,0)['(mF(_,*p$p^jksXhA?6:G]@J?Pef9)!X>$R@D]KD8s8[Fi5+p!O8Acq@jde(ZZP8Q^OjDi]%LtJXL,]Pa(:uV[0g'+
%Hb.4bI^OrP#D_A'?`X6k"uM)c[;Q07FF_Wi;AZk@NI)A^DKUJbn(TDZ?H!WT?A2R.\gJkGmmGpP_#+WsQK5Y"\<Dp/[pE`N5Fmd7
%dH^t[!JT#/$;EC,EgB7ma*t>)l_FqO!fsh<&b]*n\=S^[I=oZAFn+-(FqC\BD(A:j@99G/A7m95]!5k?6ZH9Xl\-6F*BcF,eJ(kN
%3QMi^ThYKdS1::H<g=RQS;`u_W"Pm^lY@DOehOblq(,mD:"3_n^O4UVhlI8b;)gJ>;.m>1V)pd4c>l%"IYbcG,T_8RZKHHBKJ'd]
%Y(R;^@&u[G:@pN==TS*8KpARp-IPl@0'')KX;5K)K%:EcQPuk(O9BQs(@J/q8:_8sWpd9:OK8$pXh\;ZNriuaX.]tNltlXL)54+@
%?D<@Ul.3e26+k<:QF]r<=[Q0._%lf*m\Yb_'ofrds7H0c-ee:,KI]FQMT!J8^gn@J+uu&Sq!Gb_ie"M?P1e19Ti*'1Ou`d[T*VK1
%fQBglZt3at'K&-)U;PLrp^*Z6i'oU_;H(*cr`"i+_tsd[_4$QXY&WcF8q(<_1s5ghE`J2[.5t7O@BKY+oPIL%3-si\V/-J]8E*7^
%Z`(8ZiGA>)?"cFV(+:]g8-caY(!]AEBXu.aC'!bP8@=rT<ugCF?/H^!FsW^'S_)F5GU9b_s-oi3YJnJh7WQnSSD#(?7>NH_,!UJY
%BnjcSM/ti$@F"?q'qOkjal7&J>ohB=]mj,ZjR2I\9J+N=k3jATlhI*Tc/8CZ28/@kXBt](ma)Atk)+La:h2raNP!COXA<A#FH`0V
%(DnDAWWa"X1lmI%r-W)UG3/5!7R^rnA(k/g)Nfp"CbHa^S+`E;7e*#riGA>)?"gEW<8_kA%=+2l[<,SjOn0'qP1n(YT15U$F3]#r
%$4<:!-Y.5)Z`]>QOl!i7pfR51&E7g6^GCB65[VS3c`0ji9.%.a4>!tskoZI6JPsmCICbCsCKBX3@VZ4&$NhUXLr;0HJ_)8nK+7ji
%CPPtk.YQaA,(uJd%Mj(:*:0gDY!(2Xh18R>,+L7b[gVS7PmSu$g6-02;S/)%h'H>4lP@-rg<0Gf7AV'fN7@A;]'TE\/?X0IeM058
%qfe<dD\#>AI]9\.S\BHHYN,YN.eO;'!?fd!brADRQ7>F`DMUR4+!0X]gD.6>M+sen#T+@:n4R6OHk]D\orCjlr;@e(>9*VF>g;D3
%3UY8Ij657N?HR*D@KD&HdR"c<D\h%2(];h3HCWsH?;5.kdBt@(qf1>6KjCgPM1?'V4fo&]4ucL%_7`&VDRf_pkOVb*dgOTgZ4l.r
%';YAF6r+jKTF<iHUk8[f"D9p[!L\h:"/T`9U6@Koi:"']Oh2&"](i@#b.``tEBU4X0kN);]a$ZCL>+;C@p!"i+@b)h?Xja8D#J06
%RF>GT3)?E+[M2a3#uge596nK"`4mkK5M9d&M;H&P?`g;SSqUSVCJQI</jG]WV0q-s$g_/\-TclCSfW#:\[L3(Ulh;cpWp%p5L*uc
%YAZ,/Z'k=T_lXqoco>[F7Gar(d&5:MBY?MNeJq*V<TSk_0=RX!rbpWrJjn?GI'4np(c2Qa0QXdIMd[29nFF#7J>;Q]5X@JtR6WDa
%3hX?l>Nn\Lkc!%%V:+7c/b9eQB67b'CSgD>At&QLTr"1GW1srbK8^'&BKF[6iJthehk>&-LLrtk-EE%%Kt]7\%$9P%Vm[Y$gjH8a
%/kF`7b`T>T;H[/Spn41%cp$hR[2K11ZW)L`hL&D%o6NK:$\('k9:q=Qf_Va4U:8S\QTdr,$QUWN_(o-n\TBl"'DqIs%-T:hj>P&`
%d&Fd'U/!T11:u-%LKdQ=1);qH2B&;[-]b6OfQYT0WCWj"TRX>Q86.?*S3l`2@^a$XJ$_/M0+ZKmKBpr,I2(!"_rXGUdZ/&u\ji#%
%fcWBDb]nDf9^fg=rNi#9[@N<hC:0gEHuDKbl>$RFHbFj$#8iPf$m)RNH?>@?C7?P/U9`4u`6Lds6$k^^k`b?Za%6p@@A@)R<^HPg
%oG6;2p8KhIS"?%eWrI5?K79rM-t!Oa$ElKq6"4<h=sEeJNU0aCd+-!'kS;?Q-GT<dr[rf[9oh$#6jH!1NCS@h5^A%,g#o'%D^$8I
%W<c>uU,f';41:uW,>J'PF=]+&"g9(?C+ka]gTU[C<h!;+$Lc,4B4"RE8%QD`2"DVJF;'mVf-&k(0"9V-&^mk@d>4Zm"Z*kE'CAFV
%)lO/'oTPH#a?F00CM=ccCh9VV8eLa^-MFDCD;g%D[q'&Bj7`jM;NAtUO/fP$hD>h8$qkAUL!FJMp8n"V:6$Qcf^SCQBGcEGMXO8"
%\Plu._MA"F1ck15Z_[#TRY78Y,bJ.ARhtM4o=EM-n,d5Wn[@!qe-C<r.&QaL`,(Cjo/inH55PZjdP*A*p1L]O)tKo,(S#C/-"Uke
%LW/suhkZF_!]%_fI4i8f$I<:f&`p>4e-pOA=AH-?Sf`kL_5I.b+f9GB)5fP#9U6pc"tm^MGfR`Ug$G8g-O5f;CBr"KMq![L\@Z/:
%g"hEH;E/6emks-h8D?cFHG4Nh0%GOXSY[PA^g?_(SG7O&:&u*KTnMtdMUr]bDlXNVbbMa9kVUW</XFT9_*c*l;ENm*R8h5@QNmPS
%U39AhM,\SYokn'X8].7+ch-:,n8V#M[hu;NphY%Q4)`^=aJTd#(s^=WM">q;)#W0ks%Lb6gE)fAqp9E:;,5\*_KiiZpSRZ5K&9)Q
%]El*T`?:0)2W)28--i-@pp7'NWT8<f[Y"\>*7hpIX')n\gPgXBr7#Dce_fQD*o>86HChhd%\ZM"Vcr(:gXL'4JWA#!h8)OCSV^3n
%YE];GruH;m2m9ImHuo'rkrA_R?-^tRjQ8ncR\NK7?WXK!h/"GoNn-?S4nYCP*nR.!Sha[:cOa,<U:qu?#q"1U<=c&*?Kp^l+>B`A
%hKNa7!*^_C0oDA(5=,uB61:q%TpZnSk)#A/69WsX=/m&h7f3YH5cJ'5mkpo:oThAgZF[1)C\14o@N)SPINaK/M-G"sNSDL6S4\o0
%0j5^A9eU#';>/jQ*j.sL;j(G.YN+*7kq,._)@_P[X6A9o,RJDDX%qKB^$SSA9h,/Xh-4UlfI+n2;bS'j+e'-5K07K*IcKNR_mVC"
%>Z6N_<((&(m6VX?Lc\\QX[+qCQdn8=r@=G<%</\M/3+E$Bh`-eWgi[mgi6Vmnmt+,9lC=d6ao!8%S]+T0)WA&[TY`p<=0#/><Uj<
%MV]Z,m%oU9M9ZDJAl*^E`4ou1kf="nL5h4DG:A0Z$#O$>58=d_EGCRE/s6-mcsF8&E&6o+N?+#3ll>XLZ72^VEP6j7oW>+)lk!C$
%"IJ@F,Sqp8FWuOna_J%rR>"<qUgDe83LHJ+fW1Q1"%O"p1>@g&J9kb*m\%mh;Y@)'#Y2C3Yg!/]h2,PL%/e03Kc6aS,[+8XCOAp\
%g/LuJEMB4!:\GD=#82kO-M#mHf-7ubF[)DnA22o6ng,@b3#4PSJj-TF_n>$B:MdR)HB`$\,O.ek/7o*pdDeAprqf0O1)6B-q63G?
%+0q/>P7J:[,i**Mn(6(Rk@k;'?bLOih2uP9ogllQk0uk"Z2<0ph1rn#C6E@JF])6!d.f=&(_4c0+-KJQK]:8g`sPFQH%L=i,!#sU
%,<,I6Mc72\!?4'mZk-dR8YI7rldX1lA7]VXm;\c*SMc]$MUq9<Ki.TBGBrZI;gke3J^hOQT.U6_3pHfHC\?40K-sZ8;H0R/b2BgX
%YeA>T8VrZ\cKoV1K)E4TXN]q4'ueND=ApM!-^c+5cZ?9E44QVcdsJ*dN`X..b&$9Coe.`9m9LVJ3EEKe_LF0/J`nM64Y8jQ"f%9m
%)i%b&8UA#bBF6V.[Pru[>ClIY%QU?9"gT?9?roC('['%34j3$?lQKf":iR$hEZ;kd4I*)NKX>i6[Q67jXoaLA['J"D.dbB7h3Ono
%FL+][n0dZ>KKDgXd%]O<CLbI;jdJT8bpb5,r@m;O/6h@X`KR=AW)8i6Mt#k/7E9[f)bV,((TXTO;\\J.I2G5UA]]/%.7qK&>1>F[
%a[$PBU/dSiBQ3ng$7q^C\&'6Un=+sF$M@>oAZ?IklASh,%kA_*dtDVj139Xdo>pa*/#,l131<Ec(Rq7dHRY,qX9W7^s#=`cLk9"H
%\RWUDjhpB\c!$@?AF31W]C3n(@*<Ss6)YfWQ%"P6ncB7U]LuMn]8$kZN?hgB7?/C;$BLHp<+n>E]u[AFKb'`ggclbNI;gt^fcN.8
%[<at.(lcDN*o*TmjJ^p*j?q(-+j\YUNi4WgE\utP$FK<fcX>^Y>Bl;tQ8kSU[F5K^c`i.j)t$=eZ'V=H?#A'uY>Q$h6js1oDC=sp
%EOkOE6"E*g1cDN0Eg;J>%0!@I[+uac<5rb8H,jX=rPpau\tZ?*r%Y>E4F*^3T9sN*&3)I3l/J6U1fj5u`e-a6SMOF(9C'!iSaXA;
%ccQ)V#N!QAh%'HK?Ud[Gf`tr52GN9l4`h^b"2K9anJ#,Xe>8r0Fd.oL]tU#d+(s9UmaS@upe0gL-!f.^=9(fZ)eD<1Ud?nW*3+]q
%nW'FbP&s(8dTL=pKmRmGQ,7i#\h.3C9mUK^9A3dL=<qAeYUDg*nq+G[3%Edgi1rZ/FL>`(g7)U4![a`n:d;XeTKK@V](kWq2nt^9
%oDH6Jqa_?.m!^n)52.csdPbRK&C2Wa?C!1VbkF+emhP#&WI@oeqU_5)6@)_$=OUJ=4B#`jqB6+%cT_(&mA[`Wk#7p`2mN]#c4$Ef
%p=YQO+Rqsj.k:2;<K\XD.bGkEM;_TdD*P$ik&l)b(&A:S0AAdTY4FofBo(@c?eMX:qkdoi3<MDRTW>3eY"$Ed6GeWqYk)Q/-_-R)
%?]B8gL*'n+#?Qi[eYJ>5!,b>o\ooGm%K7S]IAWO&e.X83,nhO<#+O#oV\@l$(R9IKmX=ulE`*^+`76"gBK6\Qm>\9*'0#5lJ57ln
%<IXB@QBI#L$_L/Y7f@VG@+@*L+,b;0Ei6M&'"$n]pC]#cGOKjY4K4#',l1bm9E`.TcUE%,U>J1>H7..]ZdX5sGQ-B\I0i?EcdC)n
%\?Nu7LXMpc2IQFQD+FHaQ'Q*:'I8F:em*1[,d4MHqLNc@N+TQ:aSnfFIM5KbVI?;iFCnBk0!0N3gt<#=kD&lGI3.&XL;n+7dOX-#
%)"A95a<$L['#G*_?f_$tjVBZZ+Tmg=Q'jKJ7K1cA>e/`<ZbPjL]AREk$SQT8C4bCi1dj16kC*MZR>u<Xr:Iq6fcZ>U#,5_<+uh?7
%5g-CXG2L<6hg/UZB:!t\C92Eu?+!STLY,['g9&&1_hu<%&uG;ZMWa"Dbl8!0bE)aWc0<qhSVo]ab74L/s2;!#jKXn7HmXFIPDU-3
%&gQ%G^SO3Y"jF3&L9J!NU,fkrMN7<70f]EfFPU#fk>ft2nn1.:Mee?,O$/nXa1k@-5AnWD5%/Z#J@^sh(Jk=WCC?:sH.[TGe<ou(
%`lkoZgD<c@F7-1\Glp@sBC7f$aIPIMN\oqIT?hdd)2Y&PVo8m9S!4o)Pn_/]9F!/g>?:)^GPkM"]#X,HG70IB,NW5f'7d.XW;2JL
%S'N2$!"$$cp*mrZ-?C@IaUQ12`i/Zje0?$V>!KZ.roX"tif:WFp5m'ta,RD@TlVZ*SENLdOu%iu^]"qfks5Zp0_(4&%*6aQpHSYI
%.Ub6O.HVo9,<f/>QLqQC-c$bH<O,_foV>&=)uffibY"Z/+E]5/i"tIS"7S=mV7/kUPbHMMas4rNKM<G+eK+NGhj"C"`F$[o.%ZWn
%j\DcM%9Ju1&(_h5`rJS.U,[8IEXl!:.DWP@/qi\f89^l'?gZRlE.5Lu$kFB1T!<Q!Re^t]aiboL0prLJMjW!EF[EF"!FgG+]pU71
%!;@shI@aY`!XNb8Rt`23gqV*giPDD#LRjD>C/:WJr]j5`DN#E1&F@DmFm_K:L`ptFSA6@T=r/1&Q("O*fpT4P@\*CW2.M',S]r#B
%-'P&[9_?c)`>:>Mq.T(P`f!0*caNR@<\1UUVT"E9WBsA1A??8*Fp+Gq8GBf]eX$6C'oS(1@`=.plS(t(%qt@;>-!2JH+24sNqWc\
%Ynk\:HjuoP1ARm)]j+G5I&im!#&aD\0_J$oc8MbOkY'lN_AmklDbQNg7GK7PFu,SV9c-(spnr2G4<GB'fs(Kg'*`<g\V?g@J6X0,
%F/-q@G&GUeZ)Q()^WhG*MaRu3$0,^7@_n/@Z8#aD>LDg$bkjmJ0[ipe(B_Zi@/,7eW_b@[]80U#S;G3hq>XP1f([j,_GFiLh5V%W
%LMYu'J>&fX.I/Sjp8B+im!&1s((BRf7:.&!^h$_%<G@/T$QU('digjF^U@OD0jH83i'ceJJ9h!e*F_o)7+['u@K/,7(t)+s:`>=m
%]dqN\`/mPPU"&O@*QI,Ma7r@YPk83Dc?9UB#%hAdCoc,iF?`Afc-q*Q)9g?;N9l_^R-JsSQ\XX2.NA*=CrWt2j17u,!-E!5OaK;2
%2_HZNlHJB;f"$:")+-#q=`.]G[PF\C*J9\'D0Jc\P-&._BC8"+OMM<k4a/0L\@HVLo?iTbX'75dSb\=(@XXRp7P*RoD%4^nKAtL0
%(_@,jM/MJ%:^!8Gf\#"5R5+GEEnt!=TF9Nn:4tiJnet7KHDl*&:@.n^bnr9s%BC@f"17Va\(]^!^rDBC\/kGg@`BB.h;3,#EXkd;
%eZ,_O;u7gU^5sMP3)td\Q@iEKFKBnf*bR8Ed8kFq@Kp,Or2TQEdW%J(\!t4hCrWu_k8K8JVg*JX/gdo5^RDFZT(j/k5)Jl*nrK6:
%kBop?42ei4m.3St6..r+-Ig:$I3nk+3NHHX:.fNd[!_:pK8YX#%<_Lann5AgIQ,Z+U$aU+fUD>MIpGTjl]8^BP+8.+A*SS3gnhsc
%4LA],?61c4oU.kh1NLM?bUB"jIA`A0[QFJt\gX]6D=-A?[`J6;#_I4u$$s;qo\fAHkeP4Go\PW.gRT#mcs&"@@4L-\+(r0[Z`0We
%bX'j24'=1XPR:SW!GD*jb"p],24f8Sg;:!fcPR>+9OY+1-`qG56S)5[#OZ#LL>$P75OG:85so2V$&pJX.m9pdM:"C4>r/0<G'&qG
%F*QhsoMT/Xm`p5%[RuYgrh8SYTd$DB%#.(ZfMkTV[dl_f8CcEEs.A;JOD/^:_0>*+lYS=HpL\j&JKg9P.G](0b@WU@"`MTb3.%eT
%3?^5'[8F&nnH`*S/4VOC[@)+eGLcF4RUc;,o<-!A_,Uel&uek>H4J9aG^31>k-D;mL(!`lD]!k>A'^l=Xj<3[:2-WJOh80/B:](3
%fsC<Z!=cZn1F/^,NBKYGUYXS/Le)8al(.j8Z=g*>1)kRpKeFCW2%8!&*bucKh3n;(2/%EASIHLT>Gah:!!"mX#)t0#c"U\7h#&S.
%h;L")1uJpuNC!/n%=0j9\Y1fqkh/W7n]_$eT[?KVL5eLZ*k<5B7N*_QTn8O?_@U]scoV1K@aN2B=k5%<1Gfo7q%g\q)oI5b8R6*!
%WG@K*(;"/YE>JI"l>j1GBsqB4>lucdFfR*5;l]cG*aXVCZX!qJ^@pe:02Kg2A2aA#fs8EqBKqPl(1%*r7li=f6JB\%HIc6pJ"(":
%RJ^%!-l.ck>V2C]GG$`'r*mJDcm(H7Xn2QaQ4;]_+@2O]+\Q+VCr+J^aDC+dbl(72r-teZl[/#8fb0Cn_P.ddB1X"$ROhYDaF@H=
%18ElH/Y;=uQRnUp)SKK0Rfal(jK"1B9>H)b41_oM5s4bR[VUs@MF2j"?s3qdTEF+R1+R!$*5p]=iB$u\@bG3J!+>lC9(\';6&Ut#
%KCr%h^EdB<H&a?"2M<'/S2XNWK:\T,>1<nMae2eP`,4iYm?sF/o:<LRj^rl%a_odkd@OuqGtot=Zf1qtp'c73eBL_4Bghh\]91rp
%S=Pp#bT6_%ZY-XJ]NHJ?L`".;hUL3@0q4XNUi#IYcMW0V4X2<p]rDip#!BZFN=>O&p^Op`l.VN2cMkkQZbFu8jt*6EH4A_aL-i56
%1Z/tMgR,%02fZmC]jEO,h!]?+9geHXhd"XI8^Run.<Q;Jm/4&H)0#5mk*flo^t;o@n1#,QUP3Kd<`X)4rt&]61)eWXMu`DsDd<<p
%Wgla$n59*%IH2S6^D[0:C!?:7%D326Aug[YmC^!+c',e&0Gfr+n6`<OCG2M4@Ld-mMRL@u_U4t4bl6Bb#*HS*ZDbV&h9S<F*hi65
%@Pj'^@Ta_@06ld?&k>]F>_hkbrOCZir'FS(Q(W?'18@k7>Alse:4l,T@=@^Kq(mPZGgG+!Nb)tH/ds)SZ56t3TXu#iPfYn#SPs\E
%?&31)CZHYWLDY0D"g?(.cL@`E3pu>1I%<gr`C[KQ6am$+q!M(7#8"]/C]%/jNS`"#AVPAOj>1gR3;H8HjWkS]5WM-j9A0\[51J%(
%Z1[d8q,02)%^Y2;)f@%8jaX<B(6A4OIVXY21kV;1Qc+6c>5p+8i:g9Q'Lt!;kTMjG"I,^M0Q)I)n(t]a?AHhEi*3t[;ilq$,js1V
%9+?3&*g6Y_Ahiu3A.O'D*aKeAo).=5KgU_][#IGI8Yo"X11Uh37=`Cp<q?1pJ+SaNAo9iJ3Af'9F#DXO*OS%phfG0.=Y6glAl8kI
%_UC.LVWlYYTaF"P*k-u-d2C!Q+F+m(Wh&?C?I+RO6g#fF+fB+.?N50<h4(ka9f?G:Q'<dJ#sL=jKl*C'jaM'Y0",i$pbXmRk#M71
%?-6^)EHDnC@mA!cru\Frl!>DfF"KCVeLGF&rCS@14l5%b$I0ei!DC)11qH>/BV4m?J"R-<0?".)mS)s6,/Q(3q&p4WKPXp@"gCM#
%TsF&r%t*:sC/*(;]0B*qYD;8NE3:O7[A10cni'L`6VCsnDu"'=f7<*.TVrHsMBJW!:2>5(1,_po-TH41Lf(H'261Zokfm<Z,\pMC
%+RtXm+FQZ(")`hUnXk<!Ees;Ap25funJ_X#H6Noo_gV.HfbAYcJ%Y?K,>jXQ:%"kPGdc[7!l7__=Y_e29[qMf&2Sf$<fNl!qX0DD
%^,9U]bbOj&>,Kq)q6X@@S<TmEMWh#XqeWPC50*Epot*Fdq4<YkB>W=tp3K5GNoY,THr3oY-,sMC%hZBRd\2VoA4K'`6oWL;VE5]U
%W!k_Mip-"595`kV(-T=kT!<b;hRs"_O;td4DBZ]'_QgROOp=93n!7Zea9G;#Df@"]M2qJ?@Us=g[q1'TX;-icY=DPj5lX*omhQ0r
%oS0S9!`1e4DIC$lhkO@HN1/EBROle-/,N*FJ=$$L^(61k[Wjn1.n-N<]9>_61VFo//-c/n%m:7S(DS4q;-ZK973[=-;^DDT="R1G
%HGos!UGLLnCJT>NaJpYol+91unfq7[*r`Wbbo?"T6>/F$b^pT!'&XMf/id;`kQQ@.>:kFgo#[?uZfV3C2Q;NQPenNaV^=gcJ\>im
%CsQ#LinX/Jg-i!gK!>AMa"<PtB0%f@,]K=tOXf+],^mi<\60e:CRUcKDHBu2LQN65dfE\<=#OC>#Tl:s5Nk9IF\U0!rsaA,igah[
%U^t4AL@W3Gi9-trgt+7H/_uZAQ1\QF0^$d]5aSn,aFZOeE[@L%7[74J`d1o;Kf4?+k@]uAn:<eGdr8X=hu.gQlc.V&/t@jA?90H<
%BBFDY=Yo4s.KfpT4N.A0j,$]Aona:H@`;uVPFWLN,\5tuQ2J!/'d(^>8UfEApZCja_t2P<82psqIj1@JLS'ZTX/Lremb%Pa76D&C
%cA/ArIG4Yb?UuG^p0`+*b]Lp202RB2Aa6"(jJ+q8%4@[H/BODuZpc`.2J\4_,XlZLB(_#[nPcN91YDjPA1ae#g3iW"Wo<Wd4;H0'
%A?WGjp-AUhC:N8SYc.oBjGBn9-AdD'(_[Ca,ps>Y'XuM!`"a1;1TmeZJV>B<pRBLc]R0YS_q?k)+Op][;3rI=1(K=dA@\)eQMjV2
%^1_G"207.k2seq8eZVAmhjZ$"A@RDrcoLR,nZSgKj*:Rk%og=[0`@0"mrPn:@g^X-gNKQRi]9ekkc*52CpF:0YYGOD[e]?P<5>Cf
%o9jEtk'FG/eg'upWF%[u`<[S1hZk2c,"0R/Lk)Kj7OAh@7(G]sn(g=N:"%2QM8+%%0n?BB[`s#7hE3I(S5"W'=6ic?Va:tVG)bW>
%mjG[-ru5Y0RY!LG'r;\,BBt!m&fd:1Xpt.3YE94B9rhbDdran:J+lHJi"CuJr#.jaLUD+RBucK!H910k'I>smg<Ek5Hq60(\=n:F
%TDa?;G<I_-ATK`\X8TCgP/!7dG')ekF$YR3NC_.>$1)OJRNZG:ZK!Qf11NO?8E^I!,b?_>)m*s#-"N/eU%Q#^0FffAM5QphGfH)e
%)0CPloc[g0fe*4GYDFj"#<4^eeddVO?2lF;i:eC:7I9sE7-%!jo"e7g<&nk\qZ@S<qaf@%9d;\8L>d;4SA&9LF`*T][#hcefjkV@
%E.>r?=M+0KJ"S8tccgIh>YXp,6Z(01Dl/EXBLh-jB\_&_hMAk*6#-Q&.W&_jcs8%PFM,%m4#CjI:42#Oa16ZmkCb%P'GX7e886Qe
%M$P-bVSbc,b](W$a"(M=6h)qJ+=5lG.t/cTU5.7O<5i*Q\hucGaK.6dn!lT="*H8_0Sqa2*h'$o?L!NaJMf&9Ep2\eOdOru-RQ&h
%j3kJenjf_9Re#F=4I=6?U0%6UbklT_\[65tBM5&hdM1(.ZZc.PIJ\s*EbTQd0l=h8cuFQbVI(3+rS>`gBZX_KIfAaGMEd'93HRO6
%Vo`_J#bA$MjYF69jHfh,=1i4J:def6lh&6(Fh\OqIW(DOg5Idds,j$f5ii]8pO)u.O&Wej@E_Q9JrTge"'D_7?])*sR2"&Df<G'o
%Z3NS%:-ac-n,>TN],mEeKX7<;oo@`Gb4!rub9;53kqq,e(2c!:!2(NmLND'PG1OZQdB:#nU!O`iQ\+W;/UhTm,h*;'VaC5S)Gb:?
%#;9PURgoC#EUK;0s6blE2k/mukG;RK@8i]DG-IDi0_7fs@"#IB^T/e@&E8mq'L_s$%u_(Rrq3$U8U.m_3'PU>=HrGPqrG]qfAG&A
%R_e&jd1+s%#S>\K;Cele#+=nj@FM^;R&M-O_d00]#?$^CHK"CU>N(TZAGC84.`iA01AP[j8-^brD(d]T^\MhDSR,J]p9aIS@Ch]V
%9H@Vf"iqKAGPYkHn,tZIh`U)F<\gu0Nici*gk!b:U9..33a50PKs[+=gC%V.MV7cGa!j=9^Y7Xr]p0#4k6C.2Ps/N/Zt0YACBcP^
%aNdM^Wm9s\?$2;bLA@AZaacJlSHte^q4_!;_PY^d/LS-8J%BoSS%dCJe^9-tk,6@!S&k)*1Wb]af"/rlRA)8mE(+!o'g@9#.KKIe
%T%sfFp>?s.AE[f"*/aFR,VK\L`FLmn=/1.M2`*_DeV;V5TmT?3ZA6!D4LJUik%8,YR'Fs8gWZ&`E7M(&/5G#gB<!cY:c^Bu,Zk\i
%2p?c9'a(1t1d.5jkQ#BW<X`"XDQHrl,!L5D*;k;`'cS*/Z!qfJ20Dn)jIfIpY9kJ0Bp7Y<&OUWuE&M0\rV_lk@pH7F)DM@Fe#^m,
%[6cl\glY7":>qW>Kb8+#-H2/\j4P;S2b'lBW4FdS%%l@ZoHM3O!ClE_?><,-2?V45m:sLM`Aj>@94+Y;'*b8kZnZ!WX@1=ZGO/p$
%pR3eIIDm%('/iYWnp"D5B#FV;9c189Z;@BF.)=_."buNd2WkU2V_.VCZ2QBIL!-Zc:/$Bld(m"Wo,sgoJRiL8\\o\Ug2R'hp5@^H
%,C]9I:B"hQj.gd4"qs)HI?ONE%K@Mc^\UE(lk`8PQ54\G<fE:r_6X.e:Y/5VAEKM]HIMfsJ'!3AP1#-9J,qmdCb-=DKLK;hkookB
%%aY'V/Jr2j4S?]m;aiVKmtRf>H33*Re2^M'cn./@c2Fa8ru!`]T#T7`cPY(?B!3=i6Um$AZ12YO_N\:ali)PMS`^r91RO[!(hn^=
%T%\_<6aE?,LA<c40iIkf//PRS2&#%-1EYpCT%MhX?oJn,cMcKK=[E(?ociN^Z70QOEUMP$j>,6+LAR%;A8^[H0[nGJFa)jQ5X<uK
%4md"!M'omF:VdRKA::@-Q40r:IZ5_\QXVoD6oUqcbl"5Fm9f8MQRl:0>1k"^g#Ypjd1"*a,MDk'M'p<RQ2T!i6.`Wk?&WrWM4;-0
%ki$dI6Zc\\!QDnTLDVdMHD%Y'RFMF8F<CaKCOaQhSF_<O-ZQ_\)8>X:h;,1,j*mjU-^.S]QP;B&1YROPNoY!]_Lu`Q[=pQW\_3jB
%Q1B42RiNi$H!W*MZXLUP[@=a,pNqj_1F?D-:I4J'5",m]/Ep'geutP0mlq6cBp3;/4&\)PpK)`_D,\]j@(c!$2.HDTgM(D$bpu9O
%i6\-00lR#SmqYj=&mU7_,gr+`nENX$qTq(7Ql4n#5jk+.^Xq%./,rgZQDp:1Yu@FpW@<c,%]K"TTBQA.m@t^Vjb'o[anX]]J%O/b
%F`X7eKdaV<O7\rbMiOYgZj+K",/JgO2;Gk's.c*Mc!EJSM_T[,esONr$A2(/@V@-RWet6ESu8ZJr=4=R?OX3Us&o3;&D\:>q`OP*
%U#AeO/-gL,dm6+f5Pcp058Sql>`#g^I:5AoDTl>L.#1VZ9mhb7`Ir+'rt(gaQ9Nhn4m2a2SfF;1%#Xi1g5Si^FQNeA_phqFV!4mk
%:0h\mFZ;<>/)&+AR<6&__E:Q`nu,eeB#FWfmbkFni>+&8V#l1H4e&hPUmpG1s#@Vf"L@"d4XQ0/6Yt>&Sd$3>r5PPKJT>CeetfG+
%6lZ+ib+o2%('4e_Uefk(A@c0Cb/U5GD-O=-s'nc,Sr5#:nHTbt=g`k/9SfH86cG)2Ic:jMhG"7@BnsH6da0&2XSk6j5UGQA94GI`
%*ptp5c#OlfC=50CCQk&'LtcCenqUHYB.=p5@lB&L0o<92B8)0=#mTeB51M5MAR,!u=\a,LbprA:2qbSm`<^*T&1>qH[=d)ighbS=
%;I2;*D4]hMH+B<dLAs3e2<b(1f3)XDCnG?!P&-2cS"=n+rnh>>a>9r=8n\%_kj1i6lp..OBG2<tG1IqoQ2Qb!CCZ1\Bf0[>:$O\"
%Mp,/O*gRJq:\`!Mr]eu8orWBqCBt99HrLI>Qq4j`UKJfhfUIkQ(8kj6G(78;e[U<1>-1sr')9"gB606"<_FOuFN0j]o?@6gWmPak
%NN6&h']H#iW6jRh4Z;m<oZatX^ifW@`3.qEV7Jf^>H.8*e<4:f=D^aq\<B4R5@*cZ%1#o$K<)\t%d.GV7Kt?^NRaUJH$*";k-AFq
%c1VS%f'?o\;.J<MqOHq4:G,<]>W2Mpc(:b4'Yi9VMf'\Y+.MKh9%i"KdY*XliW#Y])S,&\Dsh>p"*V(VpbQaQS-)7G`h%>H5LuE[
%W<q$qpsCNJeO:k$;qV9pBce2,Z!2[+YhJO6Qg>TIK\\!E)!7RFa_mB-U)S3enZDMdo=q_HUht_>gsQ8,.B>H2pjq1e/O)1$>hT,g
%F-\Tk$l[->kW.r6c%K:eTkd9!hoR44W&PU;:K@TiJ>I-M=pJ%f))XZbL/%<&rb:1+!^G]Gm5OMqR[\.4ZFS0@OuCYVo!hrKA]'!T
%C3R(bk)7FhK7&!Jk9mT#pP^hLWMUuD\ZT2O&362j<#bK.E@[A/39o4oRd!j'IK#a_h!V>E9/VL;j4k.7..dmKjfb#3TAN>Md$@0m
%_A<ohX/a_Z9Fu=mUP'9f\md^GJf\K>)ub%a_7(2D%l&;kG2'N_c',p'5:mM^&EefJS"5==MTOIEo%6OM5F'+(LKbCQ&b++)iLO_g
%)Di@IQ5n"-aF<%rj?!%fPAA/ck9W_&mSG5-FtpE#].RmSGWQt[)#VG$(4WTKd%W*!UI"H!k-hI`+l=H38Y>7D%*:+B!%<8?0=Uh1
%DY7.:@9Mi(^1%%`f->k$cm!r%VC/"5@:+?$_<=4CbdBT0!t=d:CR!*4ROHpfhoKDl)&\JX=/ZLp9k7eh8PFF`q6u6?/5]g)(C0R\
%Cq#q]r.2'!!Z2'l+n>GP'3^aQ1<IQQ[um/;e?673<eP[Ql=Hmi"[?jm'\]q;/ab"hlfE!D81.I^D.GH^%`_:YK&=q+-6t`tf?nCt
%)#J?+ZUHYNb-0(5L'EheVlY!q6=<Q&o*u[PE^_;pZ\6Il53._r6Y`OO;B,W(5%h@'VR(6e6DJ*C^3h-3M%1@LXTR;cs#3tRk?1!_
%\<YG=;dZc4[b+oDDq.WB[)k_(E,F3KRT7H2+>hJOR$&0JTK-@ZGDdX`AG"AK<PRMlAso2t^FmOrIn[NSn,NAorl9Nc:Oi;Os7a;-
%?iT6fqsXR2s83u=9uc[p/q<Q/s82>ekH*AV)FtY)%7KSJlD0=<hQgp4WK$:_Uje[nmVJG9qsdEDPS+S@0AT6UEB)8!-15f+?<`2p
%$p@<.goI-poL'aQeF;ion;gZDbPJWe<s8tn8?pEdJa_dm-R5f6pL@YO)ck$i*<_s7G(Zj0Cj$>@?Ku2DQHTKtG"^c+db""oa&)3p
%4]'E:V,]M8X,(2g4Xaq*FS^ka1tk8Y-Lnn`.k)LW4-<t@_p:L;^[\D,K00YcaCj@qkC]Dk#Y2Ga)f11H_c]!LmI<Wmii8Xd&m$:7
%cfQ<.R7'\lp)plBj:tZ8][Gblla<)q*Tupf5mJ,f"G45O/,/]>lj>IR1)@A1=QraRa4KR?/7KHE4cHO6-+i!S"`J!.-b;L_r;h$r
%A+e.&D`e$c&=9)cJ6Pn\Y(f-]R?i3*MAlT/])C6A4h`=Egg)1pj%A%;RCm>a-Eb-iP&f@<(p&q%_i[-6QHk-+<c9=?`A0Vnkid%>
%JbaFFhesgX8!"L9ZkH]$]$I`VU7%Y_;:M#QlGmFj?nB)+g9Gj!&lCUSD`o?.0eQs+2QN@1Mm6&gqr(6U\k!bH]PJdXO$13(<]F$T
%Hm8"G<,SuPN(h]Q/!d%]NC[\C$7*UR.6ngE7F/5u$Q[i;:&Wl:ru3MB)_hLQFI-)sWLDL,$c7b7&drk32ksG%R%aWeYN'&H.H>]k
%^TRq3l>65AXB(g:O\F:Whr)&-&HghcYmBN4/`SFuogk^6GG:j(QD>emkP^InJ2K5,H[Jh\EU'NE.HKl,?FL@W>L_MO(\BZoEok2V
%FOepdQ77(N>U>@nc>L)kc?Zm>BnNrO%F2r6Bk"J>7\gG=S+A]2_<.9\d7Rh%%7$Y$5kj'Udd'rW/nk;7X$&*mng*gc0b([H&>Tuf
%!-D>r^NqZ\_cheQ-`ZEAm"[[MdHjQ!^p_^@rFDE_p@t@5iA2@b^L#$,4.3\h!lV(IQP/E-EMdB5H=pN&I7HZ$O[^As*Hs4chU@5Z
%hd@#RRe93:ps?NY_*j/?Z(VO$83tn3rS1n"--D\8a[LKKTPo0_W"XO.<$bOfK?uZP@MtmlX`K%$[S=Xggk3&HRk#mGK3SUfaZ(.7
%I..diSRiKGBJ5$gglm8rq<6k>&l)Ath+Pk.-hY'5R+R]89cH0S_HLq/O7_]?DtuB(XOmm#V)-E;h,64:<]4eO(KTNK\!C0UKL*pO
%p#`?OX5_O^(juQ^P,Q;9)I=a/'lu9#]c(T)iduKf/,q\,bW<mXoE>eXpA*ob\u/1n*r-Kh.GT,Vc6%I^;8`sd*U,B-D^T[onOP@k
%dQiV(2BHLWd@^j8"1f.L4k>ds3n)?/(4gDVJ%tBlFkdfY*THF.:'UNCD*c5`S(^I+mLu1pCK;S=17dX1;.j7TA_cdimkVQojE^6j
%Ig=uoe_k)OR?B)p6?kNO[!qE4<RKs>ak)6fpTo/$C(.Q7*/*YI@i^<3g@"i'+6`[DiFQNA,&B@Yg>[=75as)QHt5@s*dL)aP%<)0
%1K+0O!9dII`&sc)Vj9k`Y;3!mUrk4NnRO`Uj4a";osC4o\I>&4Bp3s/pkb#iQ)_$!>9UY,>1Tl?^+.i)(.1uiY=-*sc!;)0TKe)`
%0A9!>VH453n<q\nI"L&G/,bP0Z1@o69L^)48i!kF:`3q#Xu)X7ftif!iBL"Q5mEAXSMl4Vj&`%QpZTo.iIBl2=9lAFhL6`Np?lDZ
%1S*r(aUddI&]2_H@/\g>X.k:Q.[\gh,2^`/Fd"Pb20^/VPAqFo2<&p'kuA[Y*J]trnZ/mFes87:!;n6n*RFJL%"P4aqE?lcqC"gC
%7&[.V7:HN`6s$Zf.0f;g1R+r,ChC7?"?e;Kp9u*/dhkkJLD6j^c\F^3O^OgkUULlGiM;u.p@tXm1S*,sT?DRGRCgZH)J\MRVs+(g
%OPqp.1a.i<4V"gOd.'Hk8'L8:rOK%T0qIDM,BBFUBs5uS%s/`2nBEnk*;2Gdj$4^bhY44%pA/q$5aO6WMpUsW.-H.Fn1aUAKBip6
%Oe-V2+f1/Gq8Dkecj('D?GAVM8(Zp<;XGq.X[O-Xs2oq!g>a^\r?W+SC\m+@H[2I#^:!=fPZMkLX.\.rHdgO*g#l-f"Xjr.;_Y@0
%2P)0!m*ks:dKI=HMZs_#1D5#CPoNkZ+(*0u+,bT9V1"VOI=FCV`]iZd6p!5"6ua<^I%%KRaEi[IA9?=IXt&0hA,A_uB4'Gu$"rts
%i4[u`GTGjjln]F=e_"LqC0=Q?XodO4hp=]9q;gS:_F9eM6#!tEqJJX'qpZ9X9.!BKK8tTB8GQk:;nL]"i)8CPgAq<-DjJ5jS5q7j
%1`%5+X3K"X"%+[L^^g7,fGLZYY.tK^B7HRud7@b^#+$YP7DIt=1,p9,0tFZ/f\_$`c@\4i*o]$*OkC1m+sSIN3"]@4gj!MX?[[<!
%_VF&m5F;:s;KmE=pa<'4/mb)H-'Qufd7?YnJ[(a2/:G8[nfbh`iVb^R@`!r3!N/Irf[4Tl2`H]H,%U54aXp2[ore%FG3O2EBH/3N
%5h`/.([90D`p;_IaCXk4oS!aH%"=r"4CTAGoL9+ihCplqH[J\t#ZM^>SX1PXcK8]M0sa<pOkTKiE>YS(m>e-b`SL#Q1VDbB)&"rN
%Zn%Lr2!=CVIk2qn"T+]oHVG4!APKpUU^=\n``RWSge2],GK`__G$-T]7P=%^s,Epf*TVM8,fj5gBD_Yc#9DK$PP;JI_$u1]oWcG<
%"^>WIFX?P5>]);3\3X=`Duqk@3TuR6OZWh/0`'4So;iH5'-6mE@@ZpFs1cBV3/tJrq5`L3d9,U)-m!:t,8+>q&-7&oQ]U2!<@=-f
%Ug%`qIc'j+LU`;5DKgEc]c?l:&#<LU3#/Is?JbYH`u\TQ/"BAJ]j8a,4.4\p`Pg>kC)6I!j"O0W=OVgr(O3\6?7JlOa0]Hu9^,F'
%)H[/Kgl1Fn9niIp#M0YbW.$-I01Gmh'iH8P="]tR9$tU$)U^[\++EC-5!*c!oq7h1GTOHj;]taRk_&<u.=YlMCddd`;-C[-pnD0d
%cBd96!oHc8/k^a\B@[JL-TO!s*Ni;*fNkqC7<Uf=K?hS6FmT,as0#O^f:aAOe*u3\kX-Xj&p.m&A8uc[R\IQo`<"BHY)%6qA.G>?
%Y^DW#bROGV^HE@N.[rk;F=FET\]AAD^ff\oWiP31=!3=D,TgCL7rY]?GJMc.g'[@o#HF2)'hH9+aE*St&KHTOH,)K_Kp*3BmC:'6
%!brb?[`hN5Vr;I:oDMKC)*u1NnO7)a`,X:)EjdLBW6Z0Ge)^-,MFC0Wf6`[1*/VcVmdE>S[j\/\B[.gnkg*>d;isdb,itj`D@@K+
%s2O?g4Nkdsp(?.2'S5a_HYl4H]7\Vo8A>EcX5]qNBqjW?;!#AG)h")_c#(?bk;5AZKQ$Y#=_`/teGO67*i<QBqd'aFTW>17ia)nB
%26:K$@A<sXeW<bgR<sp4AfJe^B`Laoj--P)#]0:N>=lK/=EhVB$Orm&ri++R3o1^3rdHBphc-lKB)25e:.eG0m>E!.+iW?omlSdO
%F'fuh'V_)F,:9C(0A_nW'asoCa!rdu2fp;hS%=fhjPp(XNZVtsOF,PW)-Dk8C$<pH%_YMWS7F!`+(pRQaG9b+9*p63XP2p_qqWXe
%(@?2XbZS3D6g@:H`-%^tS5G/]O%&9IZ!oc?naXRMKUg1gTBrWe!WM4&+)mDggpnJGMn6GGHMt'ClFrB[23JWYB%P7KK7L.=R?de:
%OiR2s@)C'25Z2K/C#*prkX7p\ZE'k]6-GV_X(TZdWfG;,&RR\&.E0uE^Fd[C)rl51#_L,\j(de1N"dT2BX\%f)+S?8f].lf`<1p,
%l<[)02jMul$"pC^%3lq[+JOj,2eZCLh9N:&GA0#f(B*LoF37)R,B[rGc.:j`e^a.2\`H&>-Ef==h.F%^nfg6n\tS_L<i+>CLKm11
%7IFb_KO)+FH:#nE4:`I_0fD0:\WU58D\s;^^Ysj955+cG:f6fqr?oJ=:$!uQ6FrDX+t:Pbb00WLLTdi$3rj=Akn[q^^="U(H?m<[
%n6`[(h:ViENk^qQ$Ehj@8``o^#F-M/!]=c:"\t&Ed`.8BP3S.0)<p!jri3;2:U8c7EZ)Q[;XH,-5LGU_W5)tK.GU2"\bYONX"rhO
%61,E>DeJaS]f<5:m9G^iR/0u+L-5R/+/Wb[p!>739,>FTh-qWSM=R/+>aUJ^'9k$9/bNbY]Ydf-mg8PO?'?;`0BXH&X[1+6CXYFP
%,E0d5%KAL#cT95?kTNaf59'QoUI:kPrn'[I2]eR^=!(e7E@,7qDTe=3\$NZhP[qF+8eDJuBK]+43)N_W=6t\q5mC,^,d2<F/m74*
%SGE0oV?@s2P6;:mX4'Y.OCUS@U>?13VGiCY+^8NN7%ah.FZ*C)k0!W\5AE-qAa"RmrONpD9Qr;Lo2YuI]2ItH*a]U44Ac8IgWOq*
%Q.M#9JZUG+82Lide1r)"4Q0fmAnYq>X.04im+kG9ae\;L>q),;j2TgX?Y]f.Tc-KTYII7DGs`iQ=8!Q4k;<"DcH*oC(CA51YHIE<
%s42gC*oqV9IdYm<2>E#gWkjjR/_LEgjb'jfmI=3((+jfX,4b,;m]mQ>5*-Ih\tJfh6&5>Jc):`8hWOPocXa5n`0UArRu.8KY0%E]
%ThVJ,nktp7MLdScMWBLKHC3)'i;./44)4lkb5TC*Y`<]@45/Tss*X/hh9WUW>8b)$"P0b>^*m,haK:\K>tB?-RFeR[JZUGO+:Lr=
%L`-=WNnS8gh/SaX\lI7qJhFYM84G8rlY+#g>+ihX&.k>R;'<o:oYN/EBJi?&%1U^s/1!@-CNX'?oosRZ1cgRHlu,$8k:rRK%PaF:
%/TX#IM2oI8,3>DC);K1-c<kpG<O.m+Kh9T:^7WYU[K:AB=TBY:<ugs#8(tW_j"shE`P9Pu.u,Ku:`j/is)0S,H/(neP@-o$R"u#T
%RoDtJHbu@];Z^qkH\Sli,u0f5g]0;2D`e0g+IBo#4ILU]pmI/B>!IUt)^2kA#hH1B^+*<("r!VeHp=+Pc,G79_fgL1_['8)Qk%%-
%`mrlhQr6sf"6eR[h&8\pKWh0HIWLW88i-U08ri.L$AoIlVK?PYA%*c5+\VkG?\Vrt[/q8=SDj^Tlu,$:V_Oct%Omk2m;+lVM2k8q
%XDcEH$/BJpc6%C\;6G^&B<@i?OS=2ZpN9N:fur]po4G?Q&ir*Ii[k3/Z%qoG0Me6N28gT7_nY112])qtDH;op;7J9#.c#?1r,o_(
%VpaEW4YCW`ccOWD7cJAI.n%CorPn6>%.QH#`Z_Y67m>CQ$XlL-E>?7u?";/%H[JhpDCRW\')-i1YFC@N>F,TWh)(!c-et\8e/W#V
%/:f7Q/><=oo[J"tX?\=/?3^$"7O$8D`ent!]p^sMBU/9$2,'QsMA1OA*F=(g^u8,>puMAB#1!-b4=9A:c\"_.:n8*=G46.cq$5R^
%X1]+^%4C98[Ds(PMh&&^X=KG%B60E5^l0#Rff9*'R-EZYeHtnG6M3=`B`_ho&H:WCJ*$^c:qW0*]1\C$a9f7U)5L2/+A6L[j(krU
%]hVXrkhLc"31uar5C<?22:6.<Aih&.2R23+5it`F#blKmgP#s*6kq%0.F4g+UTOFg`8-sIFJ`Q*cP4S:KlhI+%[u5;L%%Ff?^\)j
%>C9kj0C6U,c0sqpG]at9MDnk\-U/,nGuOrrp@NM#<;)"n)+S-ARoG>6o#"I"a&TR`2Wa?NGORXdmAbp$U?(>Bl1J:2AsL*RcJE2<
%hiC<!k9:4M&]qDIU5Ibr.pK8l`>5ERg2W+4fTeF_"Uge6T4S)/Y5E3["P,jkK24;ikLJK<HC@[mpHj*B]QjD/j/\pI'Ca#<aLALd
%UZpRPQD&XIlS,1W,)9UU]&h`lcrMa!YYd4p2KU\Y7Hg62I)"DEm24rV>DcfR+>^h[M#`UZ,r2@)"-RIgX7p:PR+aE-!mP!Ghg/JO
%K00[9#)T8%:Bj&2+j)c,PDp,[4tZ*P*a]U5hTf$#T87kVS%F1V$c#Fm0?oLm<(\LH@#Ro<G4DK=c5Le">DhG@S='<cYn]5NK$e(K
%)A<HQ]Uoi.GZu<$[%EZkH_A_5CWDP/80o?SW[I57\8LQ0FW0:ckQ&YHool(FFPu02U"*0Mgso/8rT<.@iWZcqDPSefDs-c(_)SZ1
%N:t:QN2_HN@G">=V2s(^H*VL$ja=$XRB0beqUM-,F($]hlTf(`FsD4e1:;'G+UT2a*S>b-G(u1mNgh98-.i6uDC0Jh'Dm,PbB]2m
%i6grII5^kW:?,&If@Z&omQ3,cO$:9+@=CMKob5Gc-Zrer3Q)R,c-q^(Gs]at",tfkG>"IiBGW^B08YatnGX@XL)E9;\oVIFRV?>C
%AO[t\VhU"V#gE]#N28eVKfdk/5'.hN*q,NsI4iu\ONZQr>h+MjK:hC>6?_5.i.bQAViO!T.bH_G!F?+\2j`-U`IY(J;A=3m`IPrm
%Nd:cG50VG#mA+]'0jfOg/O@V.mq0]%q=`PH>-K?SNaA#\&/o''8HKd[WLZP[`@>B!<^M9!,6m)@G5=_/l\>GA8*)kSAaj7<P?n]I
%VRqmG!e+>sgi-<>?[I/tZuE.Acd,%oT?UZ-,(B%]^Yc8t*J7F>d?mSEFHd2>3mg7*`=+fj027KeBDu8C(UkM"_MN%[8.b;:hc:i_
%C+cf]aJTp3VkA,s&,;1Y)M?Y."bS[nL,pjb?Z3q?Lu\gXS3]Z*#(!Z*)0@SKh@J\8[Gr-$g,8[hhIiKmC+$3kF;Cj<%Og`YWD.Jq
%^?9XOl>39r<iLd\/UP"S&1e`?aBdPDL(jjD'<ru9FGAGk%6/Ob8*i@ca&f_`Hu?p4]%CVA62p!P25aSs\#[P!Kod&1nfTfV=5a;K
%EN,0_mT,sdh<hqD[AhS8S?8b+]gP@>n]_:ZM0S=XYIdu\;K5`"9$[4QR9K=H)X3;SSSV$P.&bp\Ouke6`:\6EZBnL'-G72E8S7$%
%Dtq*E[,%FN<p;/5X)iLI$`VBm:R6.5'cZ-3hC@eIcc6h\'>4.>Nm#BggPYO7?o9mus#kXQ;0)+F\Pjt7V,p'J#+hZgUI0H&Ep-3[
%m#%LIcMZQN[=:5^_J220JA`neNiLX&H*nBZZt+HY"_=%`:g"+Ti$"@206&=-S):K#\":)1$Y5CE=_)2u)8[aFS*6XgZCn_o"TR4#
%J1YhiI!$7Yd6[;KGO7fnS%F*H8Yt_66k1AZ;6ejs]d[r1ie(8\5&E2[Z'ldiPE"*$M01XN]tW7<1f,33G'La8<@"mj/Fi/Lfg%tu
%$D9r8S'<]q+!qQG@PgN2HsikPl-01`-gc',Zk:SdBQFuoCS;1u@fZ-tl@n_WA+ar8jl;8'ad\E.EP9?";Z,o:$5$Xp8r4+;$>hon
%BWkuBZ')I!0N-,q6$I<VeSMbq'D[%E"=V2@NF(FWD=S!iS#VL,.o(876A^P0r`EY8St(jJn`StMEl\3g\G'm&bM_DNOSk@/_,#/<
%jeSU>2F;XCm_/MOj/\nsUI"R\aLAL$op+aZ2O-$o89Gb?Q8W_A4=O>mY_`I*rZpf=KAFq7;>N>DXUfHQpHed+9%TM(kPBATDh>ht
%J&NPb/Ygm&VWt#B2'aEOI5K:DaluqgZbQ17SAodl3]D7UT+-4q!UW_Cn-E)%]R3Q,O$13*=!V@B#m56%n*OZRGp(!'$n5o;-eP/k
%>j1O*f*Ul-rjeV4FiFV+&E?eSp6GZhs)5rF_L4](Db,(JN!5a*H8l?A6qB^$5%pZ8AN]YV!?e;!if/Y;?Obl@fl2>A<gsZc`1OX"
%)_`-]J;IBM?%Ct.c9k;s0QBn/HCt?O7fhI*1Zj[,C`qhsSP6&k*QsrbX_$H,&ghDMT)R3cmeV1[:HcEA7U/rhQf!LA0;e<O=ZEW[
%,tMY61lSslrAZnk0KAPf4-I^S%8##[1i:;RZeS6;7rr5VS--bj+pSiKCF!_-F'^:Zd2Yu$#@iZ?7E<_WF]tIbA?.#[GB4kK3#=bY
%RAoq+8B+/R0f"1tM_k63cc(03kM\aL&uE;\mX]7FrT2#*?U#OnO$13*91B]':M"o.Qb+dLhYX\_T@_H7+@clmnd$b[hiD]A7V`YX
%QY]T2kR7."_$lP?3,kX:-cSK-891b:[^%4+TJpR_KU,FXGMG`6a_!c7H=m32NaIRL$o`Y=qeWJA16"@"YO^Spq:4lHIdHSn6,IWk
%4gPso`EZ_."UDIb(TBosL>h:3e&1Zg=Z>(=NB+CB_*QR^SDK)tQE>nQRjO3Zqi(VX#q5FY%9`F/Q&6QE>>PRBe(B$+!PnHpO:<4B
%!R*7OQ$("Ee['6:f.u3YTIO$\4jYd+gTftjCo71-kr=1ZnO6U?q*Y7FpEI>=b?`,<M_jIT6Cs:hYq)C+D7'3tlWY5K@0K";FPOB"
%*..\/s)5+H8M?2S.S*P]-`TT7OS1n]1X"Y@;t.R9UOd3]m869b0NVQQEiT(ULs+/gLEKO`7t.*4gh(<UZ^LhVH1nk25/&@K30E11
%cnD9g\qN,J9j,ZtVIB6;*VqHP/Z(`$U#d^Mmj()>/">a5FNW+Plo^jI$ZTBZ$>jF617G(_ppiX(J?;T$2#98)(TMO3<U[:.!&Ua=
%Q=37P?>fPqH!]'!/u(qrL4;8Z"!'%[HG6gS\F7A+5Pk/LKGd&!4I>ubV!bN-%';2,P7(CrYOnnn'0\G(#8t0Kd4KIi][nV+Gio#b
%fSuR&Im&#(b;q(&RGJ,?@\[Y!Yq:-LXMpnNc#E<42PElL6b`-CmIW/as)+(EkUY>H.3Q>DrCf_qH\eGrhF7i2!Vl,tqY7(LiHQi\
%b$OcXZ[1GZ*8#<,pi.>Z0M/WWdU@C"L9qGO(+H/o'7-gF5u]l_`"Kt*RQR/L$Z^Ug$ej"%M?i@&2BT5^Uk@hS5@0JB0f!0U,u#<F
%E/I\V)`p@=T%W"JG#!Zp`a1i<amnWR%s2?"9Li`\_2Ti*r6`P$-&c5O9'*&50.(fXQrKoABJjqQ.DG4<-]b:-j6/?KO43Le68l/*
%=LnG@<eR#*W@+C7luYiCpLb]2VO%m'F23TeL;WsbG<DD3/5G2T:"o*Oc_K3RniV6H_nJ23alisM8]bCU"1+-,9uXi9O$:9-@Q:9s
%SZYAqS^cs2KEnq7K`Sld_h_5Geo>r6Ra"SOiFS!(+(RQXKUV*1k>&.EcK"`oCP_j1HfW-V/5u;:NhD+s-#^f+$b<+6@lN*q,SQ>m
%OrA0WZ=/7OR5k`I4Ee*-G+XbBd#hHBbBRu/7<%.83IgYj<VZ]08&<o_jM%26I;P0?8&iD_gud!B8a1@!PlQc7`:<(k7t$nqk]j"t
%g*WBd5IV];\WU$.Oo$+pH_&N-TZ:$Pml0JN:XTgboVi5Tp&X[Z^$n:Iac/jN-?B#0dX7^OCG[(I2?AO[!JpnA#/tN:3g`\_dK;W:
%7@)f1RO:VdqFF=Q5)a)[=3CQcQ<i1X.tdg)@o3KfoCY!3lIpN3UY3UA0*7bQ#cs_0gZIU/IRDjS\6V8`>ifL$Ui:]);';4r=Xr?0
%lJS#WdrLH.p\S][MgCI<jPMJ:s(13`AKpjHfS('P.dAKo2qhs,cq\:?cBfVKPVG$A((_HaXi(`9nn)ClKO0,iJ)Bp?2p,_(kj;IL
%-_m<tYbtF;\W%;@lb0fWp$l$"(N$MP7/#A<^$^"bfVYU<f;;uPWRC5p]Mr-<LBh*KFe>.VT$'aG*?ll?Rq7K2W9sI,2e3\;8of:(
%j3hJ.O_?%Xj:TecZ#uJQVUR5G"b*K=?Bd1u_en@]kJ:<AGTM3^^nuaj*W&5pr`1SfVqK/L`e/@3lJmd8k3(=f>k$K.h;ru2['oD8
%8[2nKGphVR>3n6%nn*2-fRo-YW%cNoM>-`LD+Yf\\r9!==ou8NZ)<k+6(]sSk5#9B'`<nk!.@mr=)F`b#/^(j]e%,3=J"gqQa&V-
%*`L7]mFZ'_V%$jfIbVs%L;mE[Y<BTLfrElZXsLfSboJD"-FP?18B<Up^aU_.e7!Ik_7GZP@41J24W8:aF<_XL]>7`SN#PW4.p<`8
%\LV=3LrL0)6WN!Cd>WsMND6?'pdd*Y._r#1bjP8`H;`%@4:aWK<bm$Lh[Y+0"1'k"p;0i90;"L%CQGZV(3!j14r=$D2L!g\`hJfH
%%K4lB0c)m@-M;s_),I%fcI&h;j@i:7p(R><_,e@(b5t!K"Ao4p+DNKV4f!48$P_7%9EATABQGmS"ZZltJ<QS7hfo.P+YH.VJD!Li
%LH^jb^?rd>N/[gDhYt^=*ab*\DE8Es\.\LY-EeAFRB+!@*QCof2!W!2"rQC="lYACG#Fp#kY6.SG\N1F*<u-62?Mht72D.N":S,<
%L*/G3`j*X5$`aD<_q-%I=+bUJ+BNo_bFZ6$H9TVA4:aTJqg#JCLH`eNgKKPlj@0,.S<).>*ab.HKerI[['ruEb;M<[<=AD/[,]r7
%ZZDp;F;b[^35eb93MdrTC4u9+m([!KmXQi>nCNi;5f>cgC;nt%0NQ0Y'+`piC.%"i\>ne"-O2<3*WQ51`/GS+q>Yas_SI8=BWH4j
%WR3"S:X>\<WQfN\>$Wq.\'fc0e6[X@>:9=ClB[$SXbZ+LX6kW:S)`+jAjr;f1bT\DTS#+qIikIB5Tj]'jGHET]K'f9WJ0;!-T)i9
%fh%UPZSg4+SF4:kO*$)_l;p@5adJ@L>c:r4AnW[Y`tZD3f7\[q-n3;9Q/Lk\s4blT/XkrUS[6fIqVG#:C+H]KNd%HVBr[0bIt(18
%T'YKq>7.OGTA$Yh\(Y/Umfg!OGQ_Le.$@&2]Z609_L*bcb2SBVk2C$8Sf3T?X4PaY9?=UZUiFcBJa2GK$p&%ukqur/raoU;/D.gD
%5gj?!99Q=lLFgD%QNid"+X]X\#:=V\*Uh9f\DXnV<"9cY*I/L<[3FRc`f>4AW0`gQ8Si($9F82+dJT0JfP^aZZ\[H"^.YStDc4$O
%Z4'uU3A.qk[9T1$Cu73pghY"G#`,?,\_t^2l1U+DOCW3X-H+M2-k@%bF7Tn]AM:(dRlIm[gWKGr_KrIZj#kT,dk/KQoX4-2>8=>T
%]<s8eG_`Z_lL:Nb7sfq!!2;.KQ"$FIjRHECQpPK.6k+tlCF:FY=so"`eZKs8Qh[c_Zi*0$nUp*)j#ij064S64c#k87PE7`CA;9u1
%0g`6\\YO)oTPI'o,[b/PMaFGs=uW<qC-U(P[ml;%M,3o6;-hK6hgKHNd;l9a*\%jW>#%^nY(S\($$[15$[Ip2n#PQ9=[&GF+H%\l
%H.DYRMk.8BiELH[4gcP!oSo)"kdopLU!1)KRi]pcH#!=_8s'@!m17-lI\Q_dUKl\3=8m-(g65(i"NFO]f"fdc[fXk;FuH]jfK'oN
%cb/;_PGa8m[T6PlfJm9Q(+2]fP4>cN*Jn&uBI"FG"sb+aVTD@YcFmf#RfH#]mSB\TDkrQ\#%$WiM,W6g@\RR.;].:app*36*6YET
%#j/Y[o^I?+!#AiG&J0pK/i&?F[[3Dpnin;@Q2=iBqs/LB1hIO`6;g[#!l;h),6QeDbWmhkOgQ6Zb`*eB2Hr,]j3Pm+^a5YgCN#2[
%Z2HR6@':Z>_KQUg'^9[ZRUYV!c=+\/!Bkf#FqdDh9[Jf[nFMG:cC6*c\T7`53\[k^Mp*qm>PAL(Ub'!%kb%(Sa9FXH(s'LoU7'?T
%S=PYZnrelZWNWeco$d??J%[4uK(,B(pbo(mqu<_/RT;Lk)n[iJJ&l4[Kt7!UA(e^5$5_DbB3bR5VhNuqOsr!]p[ob8[f#[PA=A]B
%-bIQc'3VLigQF*\R2]=t*]f)*@e7+>W4th3V4g.R!SFr)rVJmqIbq9C)i@sL(0qm5UpBtRG<q#F0P)"UjPTTq/NoO-&&N%/DB'ol
%p#t5[5H7Q1)j;9qg7P!((2nb'ar>dPIs:Q=[P6Rh^oC=iPX+2BV&@7"GL8@/1u6J&$jjDJ\8<9Oc93MSORHHE6<L%"1QIsB+QDpD
%cF=$Bd(d3*>gf'=\UAH@6N)PrIL=X#4RKS[]+>s68(t>26YsCLcoB5C<o%D*P/!(10r"P9/K=?NI555>[X)8r'h'q>HoXiX[l@qi
%GSA[k,>ifecr.W&XMU=I<HTUB9<k&/^FH\<0=>Bc*a:QLAnnA\BctkqpX^$K:a\*FG;7WF;J8b[]@s%[E'9'IW%kS:RLfP#:[_-S
%`V)tpeEAir;0S_sr!JtN+cX*oCrnrb#'g7pD16'p<B2"cI`5%]fO0n*+E$_H!B3Ajn6=O6O7R&*`D:gdN-Z,9^JUZSSf=7p:F+0*
%s#3WlkOJG7r_:B%kmpaZR4N5?VpM[Md7eT.6GV=6.4H;1_=V@5`S3%=VWirs(R.#O)h3?nWSWGsP:fm%pp,lXFKs%Goma"h0WH53
%S0*6fn)$>$ja-3F$4uV^hZuL=.Iob4W7[E8$d:)tSs49=qNU!QTjZRm\\ZIWKNs*eL[cg.edn?k=pfGKJ%"gJqp$[uA_gSuo0R+,
%8gZO9C[8\>DOeHkj'SV(hFCf3,QrQfX5IQ1E[R0GWirW7DB1+`Tm(\)Ro-2pRBCs!d>tM'_2E2W*QPM;hQknpc"_!<kQ,g_;dS[T
%PcVmP)Vrd0Q2P?Ech6O\(<mYTDMhAo2)aS7Y?Io'IZ9asR(rLM/)`><[o62mQ8DUK>FNs4G%^i#]c_JJ<#)Z,LT)nC!D$4TN\soX
%[',t6k9V\%do-$[d["N0H*3/Pnat=PAs!P++tlDMEo]BpHnc4K3kc6An^ajCiI`?#b%Wof25OA&)&#X;F:)STB,[@dq^UK"r0hMW
%(XpB9[W6>\h*8oR9RX6rqGhgXrB?G0<p#8:NPF;<9J^JtL!ATIVJ,74P?hHTTcWg!?=dNJ(RE>)9=MGRdl(!N7,d!R,Bo&i&&T\/
%+>N3XpEg/;*[H.1K2%]=3RON8Cc23LZ&&ZAU`BYVKX%(e81.0gk6"m^nL(0i$?o0e6H3$X^GJ(g;7d>iQRb(fj`RP2K141QGN8VH
%-e^*@..V%hi#54[,,&sHe;HDAQ[_&Vl2f.$d\A&7A8YQGba7-/qYdX=LY#HO%_$"2NdS@NT6E*#q"[2n@1t8`Ij*Y[$o#r'Shu/o
%;rgmo@Cm8oI:!f.(SW:F@JkSNrkQ6ERE(i-b)t&BjJ4gFB*cVg@l#-K.XDjL]/e,0rfOl;rmXpQ`9^3%5jnpUn;,a<JcubY&6Z@+
%&Nqsb?_9[%O7!OD0?Z8W%M>fU^,)4*)'gH(?#\9`\J47]i3$$RE9V<L[)7n!0@M9eEMqJ;,2C@\(Ye&mg/'$J`P,-BP-0)N4l0S+
%r+J"cnN=Y]B2SfOJS`?-<4AT\X%(V0_#7ncM,L(V%5/(t[Bqs.`lg7*='p8"R4e8fepVP&(>sI1.&`P-h_#],5Hd;)#MMc<2DLM&
%%`@jI>HZo$EulqGkk'`[#Pntq&f!U<l.acCf]c0fbZf7I?ii@#)6=sE_KZL%P(-l+LqiR9rB+r_o]r)^.9n'5*\IgJZC1L_8aBZ(
%-/h@:M5YNI\#W/TKb<>4bS300]/u/@K"7'*=^m^Y`_;\*/+#:*nc#1VdD^h<V`fDUHVrIq.>,E#ku!<i]:*f>E\GEpr>M(2>iAGQ
%`a167EqT#rr;!\VdSFAa>)9YS8QE/@T&anL<CcjVJ+:1pVWHTf+6^J>/e<D,O71KcVe\\`!Y4!,YEfYE>WFllqK9FfN4r@RSELf2
%`]9^^V;K`42'=VaVcG[e;B)pJS`7Yq+&oR4s&NU@lTK[rhQ[JrY*[\(*3SCHT`;%ImWhZ*j\&N((JO43nn@ZbC?ID&)N>t+]V-6q
%mqLg<%+TP@)QD+.A\lkHBT84gpO:BK2sg[]*.0C&*B3Is`mYm\L>.]D(TErUmggD-U?$XT[f6U^Ke@,[[A_!'D6?uQZ/KCr?q.E"
%:<&1bn14<)$Vi90)7cK'<$2n4AW<?pG.EJ1PHB0j?o@Ab:b+BTPGZ8q;s85<;l=P>eNh@9U]q"3\[U.Ap:IbhX;271;lGbnbFap?
%,[Q<%+i@7?!)#fOr]h>t0?^G42&_1k:WE+'q^\$!"a$'oQ0?NI2XtL>;eL85oE;<M-9t!+^q,h8f=GY%*DIT-YGK&mdO"HT=Q@Fi
%W;%?#7s*>FJ<H[QK8Yh4)K5u=2S@]$I`DOn94OrVfT#,Z[la1?MbcWY\/c4sa5tq_<Q9%*N?[ISB!-BnqU@%C9S1<1.@U5+6n-d)
%U.tR.rp<'P(u<&cY@!En+&2Gi*`5%L1g`,6R7jckbeUVfY1)VU\p*u]';@f^Go'Z8SM*4qRldW\"_Lr9rclXp_=3]Dgg@.P@cu7p
%OP$[OTA#k8K>jcaT=W;IR(%A?Obr#:4=cn!ha[2K:!/3??d&mTqgTFP6cH"&a^T%<N]dt)m:Di+,]@dO>C7r!(L6mrRQ8R^>%VD)
%S+tLiq%HO$5A6_TL:?opcQEIsGj0,>O]n?4)=Of_F]*5iKE6g_13spNbt1guj:"mh7>TrbkW!Hf773#KqUS<&j@+juL&!C=8ZG*G
%a7@J9<cU,1[[_eEG5+ga8k@rur'L@%IAE>3J]RKM,LJo6BZ=@TIAE;7C"$h)f%[IW@sb-R\3A@9esG^u'3[YG0]JKBq+.lI]Mh1.
%e^1LN7BP,e3f3X:IAE<SAU<rN-*onNmC&YVD5c1V_&&QlcWQoBOuk2K`$Q+Xo]eIHp:jQKM*k1AO+`jP?F9"cVRd[oc#_d=&7cF`
%p_\1[V%pTC,g0^d.>s5H:_o&UX-Z]Qig6Jq:5"o,cep"tXQ(/Hjs!)E7jX$;1RH<mII*5<L>^g+)+K[b3`5S?K(&)"GQ'h)O$obA
%?rn;X0"[JT\(.X^=d)nEeOQW]]]`b2dXOM(M5HB'9?fX5iD+T,Q[PZE#oU&fYE_jRj7b)&L\6eLV]OumkA?c>D>`nqX,kc=d546i
%mJTY,e9<p1pd'>(qFs!4`CHqD_tBt!pt#5)I9_2oIEe9nGqHA/RSA1`jAt/PnGf.Fd`5_cJ(b(@9=R53mk^9Ch"Z%>!,pDBOSIH)
%`d*1XI<8R<?iK,TKKeAb`f::^*+cJ(&NGi`dYY5&0"8\3itBWUE8^`uWs7BEZho,+.Lm[B>qN9!1Y&U+Duhd1&+tVreLe,`QE17O
%E/OD<Tkj?g0X1;Oe-qosf?"@<Gs<S7ZG.`H]mK%=;s2M9'so")(\><4B;A&VCoQmQDmVM'DmQYBV3^iA==2a#[?_B(PcXJ-2COn8
%3,E*kZtd-_H"o9)7SH4<]@PF)=uaJ8DDa=!g_J`'e=LY*SD7\gP/"WU[&n4<ZiNgVUo/!.A=p4Voc#4I-rgJ,!*M`bBGR/qbV$71
%iHW:Tl8.s%"0[BdPJ=HNDAOQ1T,dE#e>\/SJ!MLcoP.a.H%UClPtXI4d[=t)#sWBYkO%mTO#KJfC8P0&bACbdC_W<"[KU\b[7I-+
%)q,t*9il7T(Y1Yhd#>(ZLI*<[bK>>TnTrB7;1#aoJXbiSC;\s.r'9);)Gu;=[_j/Z`/F4u_r3G,\_^,/>Z'$<`oZq`DQKBjrO_NQ
%2`X3fX.@Hgc&jNZ?:m`?.M<OUQ&s:RrnXDoK/5nd@?T=pdU>dDlJSMgG5@8>M!,]?`$c*RC:_kO#<E)f%Jc*UoWB22U/UcY&4K,\
%I.s+-rXkll'ia2@pm-")cJu'L!j\M@hSu,U"93R07;egHoVNqDccsS?a?\GHOVc^]9l7<+`rP-3.0b+NN1CILg\[\We*#ZHD0E1,
%<4;$FP<1])+5C+@H1b0e]u`9XjH:$oLZ0b`N!2DialQSEV*Nh&XZ9<hF=@+ih$i5W,Dh1lF"QY.MFe^&&RR2@+JQrO5:FCK3+X+N
%Tt3g[A_d^VHS@J=;@&H2Q#J@Rr'E-aMTiq7[E*NsR_hZ?)GBt"[4tUqg/V9@M`mKT`UlL3S:453i9Egt8Ona-A]LS=+qfFAd,C`Z
%'5,>4mC>]qB0$]$j0!K]js5E!/]V/eQ2`paG(h;KF#Sa%eAgZ).urtDc=QK9qJk?jb@VU*h+V/EI]uLf"E$]HoncGKNLc.-\.cUJ
%rs1A;G'HK(-4dW1Id[gR34R$hGI"!jMq078kQ?qWo8kJbK"IUd+N@[VL%G0L1He1^Y1CRLq!?02:E*c/)l569W*fC]#MdB]\'^=_
%*Hi[&T7ZA!cZ7nVpr<:2"\N'j)Fn+(%bO<3)om[VhYejgRo,].iQG;kCj+ULlh*?1$)_2j3[b*Of0s`8"^edS^HgnDFM;n<T&Jaa
%nY9+LLQ;lhN0EmojsR4R:.2rUj?`rm2TG).:ADj'rC'kTVGY"L-cNPa&r5XYj[n4%$cN\t-Tl;>:3]<HR8.i,hT"C8:o#H)j"C,L
%s4q6iG-YL,YG>XhYqIlk+`]JLJB)&"5uW98&^X#q`Y7cV37+(4)YZM;3dVcG_CPA)QRE%;'JJ%rFA&,RQ4K%mg4%&/@9:<pbiscs
%mjFXhFBhJ:>L5Z;UV;#0E>O#as8FeH`LUcL.iRP]p,OK_-dF7l\C5?Jn3)ll;&RQLn=6"3d1J?t]?u0of?Ys%mXhY?hd<7`0\C5_
%TD>:Ti7QNI49@a=2ofb4&7+h0oa,gp`1>2,qeT&=S58i8m"@%IhcZTof0\2Fio!o,etLGH]pl/8J:2C)!Z*)*'HDo=5\.+2RU.(f
%8=UE>6okRf0(d6baR%62K.,ZO$I]lR9b-f&Q0L"65XoE]fBgV0a;%,*:lpAt<ZM)q/Sq.0a1DXnI!e0p)8CL2'T0pXHT9:+P>f_5
%%jE+g5l]]XZ<fUu[EAbEZEi1$dPHq\#mp!ddjMkYQI^hf1992q[!):iQ52E0F/_;:cmIAf5ijGM>NK[:"tp3L*PWbb_n"cjIJ*#7
%I_I55'^BF5cFB3IV4^2(Y''u@nX][bg.Tgh8#$Yth$[n+/-]Q6g#7SS[@(pU6F7_Yf9DlIJPu]Xl[+U8[A'oGa3pouTI!>WECE'b
%G(PC()*+m,iZ@p$XS%3@.*bml*4[0O'$_O%DE6Di)kn#DNluDQr'0pt?@umW#^jZ2*)FNSUe2URkYs3h\=e]=Ph#IGVFr;j>,`B/
%UuSqon?R30D]#ZUYilO+)`O0hS.jb\V-lgD@7_ghd9M[7ic/Tnir)X+kQlPSpV;9F%e:^B?<BS>$'SH53k?ES-IrT4dM*\Hr)Q2)
%Q%SMJ`ZmUJ6qG7p$*R5ThI"]ALR49kEt>DaS4JAX*N"JNa(@MaA+C,)cV?/fV0<.Xpb_8eq^rh)@j]kCEC)+sTpi#qW0F>Z(Z,;^
%[N)Wr%Dg!83n.Xi$Eda4Unjd(WrT(+@@\aun4_gJ9b?&g&9NdJoZH'3>f&K\N:97l'o>]>@6*\*I?ogF%R;5M,,dn8XHGK5Y00d8
%VV^!NC;2#tRp4CU@8kEZ<i`C_p*@&c?P5kJg*LaXin@B>/ctCLqnnA135SuKm;rKVj*!Jp[CgWN_>BZAj3IGFs.'Z(C(b.En`rm)
%jNB9>#uLlR<+2\>B[Q6s=X5XRjeQ,QXj+K'!p@N/h+[JcU+"-&WX3S_Z7BRqZ('&8N#GV>g_&;9bm>cZe@*iJBu?ig&,^XJ<Q1)V
%oubXD,nm%4,`CN#hUgpZjI4Zs74[)'b0@fN$aRE^Fc<M.RR95-2?MtUBL_1\C!-p`4mKJhDT9Ym#!*`u&GS*MJU`uGF"4bI)b^bO
%kl0Gcp8:lpOXW!n-p(cGk=XH(8;FgfYb.!eJlgqWCaUK/Q1FeY#u(^t`6lUsS"^qsK/hNe5#/tONl:%h#QC@mSU(^</tj-HO,-aR
%/C)%#<TH5a=-:b+Z=Q@=n=*:ophDo+"`]Pe7cG#Fg=VE#`gIV0)l58GiPTo/kX\s=Hf2XHV0oGL/W<%N8.nuLR-$^]?9N0?Lnh19
%CS`Uuf'qPUZ"@dl$c71pW.D9mb%`KJnGnUrjbAK27$)K2'uT.+'4,JZT9J\biW5C@*ggSK(f.,"fKP/oqqCa!ZI+o+C#J+;=/_BQ
%?WA4VQSq!)Dg[Q411%^U(8\,$VJRr+jsUc![JEg)3m"sQO2Q-t\=scUE'3QA#<`%/H(uVRC"rgjc`]5br9iiXCkl*liU^sqn=/>4
%5C`RJ?_60SpYG^b^+$kLIsh.l]0EuYqtGTQHiMX"^AmHb^Yc_Mqniq(3T'eAr6q/(hnT'Q?U)8SpZABgrV.HWpeUiQI/W`IJ,%i$
%^\T%28%3(~>
%AI9_PrivateDataEnd
